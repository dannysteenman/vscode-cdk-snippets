{
    "accessanalyzer.CfnAnalyzer": {
        "body": [
            "new accessanalyzer.CfnAnalyzer(this, \"${1:id}\", {",
            "  analyzerName: \"${2:string}\",",
            "  archiveRules: [],",
            "  tags: [],",
            "  type: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: accessanalyzer.CfnAnalyzer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-accessanalyzer.CfnAnalyzer",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-accessanalyzer-analyzer",
        "scope": "javascript,typescript"
    },
    "acmpca.CfnCertificate": {
        "body": [
            "new acmpca.CfnCertificate(this, \"${1:id}\", {",
            "  apiPassthrough: {",
            "  },",
            "  certificateAuthorityArn: \"${3:string}\", // Required",
            "  certificateSigningRequest: \"${4:string}\", // Required",
            "  signingAlgorithm: \"${5:string}\", // Required",
            "  templateArn: \"${6:string}\",",
            "  validity: {",
            "    type: \"${7:string}\",",
            "    value: ${8:Number},",
            "  },",
            "  validityNotBefore: {",
            "    type: \"${8:string}\",",
            "    value: ${9:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: acmpca.CfnCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-acmpca.CfnCertificate",
            "Attributes: ",
            "  attrCertificate",
            "  attrArn"
        ],
        "prefix": "l1-acmpca-certificate",
        "scope": "javascript,typescript"
    },
    "acmpca.CfnCertificateAuthority": {
        "body": [
            "new acmpca.CfnCertificateAuthority(this, \"${1:id}\", {",
            "  csrExtensions: {",
            "    subjectInformationAccess: [],",
            "  },",
            "  keyAlgorithm: \"${3:string}\", // Required",
            "  keyStorageSecurityStandard: \"${4:string}\",",
            "  revocationConfiguration: {",
            "  },",
            "  signingAlgorithm: \"${6:string}\", // Required",
            "  subject: {",
            "    commonName: \"${7:string}\",",
            "    country: \"${8:string}\",",
            "    customAttributes: [],",
            "    distinguishedNameQualifier: \"${10:string}\",",
            "    generationQualifier: \"${11:string}\",",
            "    givenName: \"${12:string}\",",
            "    initials: \"${13:string}\",",
            "    locality: \"${14:string}\",",
            "    organization: \"${15:string}\",",
            "    organizationalUnit: \"${16:string}\",",
            "    pseudonym: \"${17:string}\",",
            "    serialNumber: \"${18:string}\",",
            "    state: \"${19:string}\",",
            "    surname: \"${20:string}\",",
            "    title: \"${21:string}\",",
            "  },",
            "  tags: [],",
            "  type: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: acmpca.CfnCertificateAuthority",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-acmpca.CfnCertificateAuthority",
            "Attributes: ",
            "  attrArn",
            "  attrCertificateSigningRequest"
        ],
        "prefix": "l1-acmpca-certificateauthority",
        "scope": "javascript,typescript"
    },
    "acmpca.CfnCertificateAuthorityActivation": {
        "body": [
            "new acmpca.CfnCertificateAuthorityActivation(this, \"${1:id}\", {",
            "  certificate: \"${2:string}\", // Required",
            "  certificateAuthorityArn: \"${3:string}\", // Required",
            "  certificateChain: \"${4:string}\",",
            "  status: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: acmpca.CfnCertificateAuthorityActivation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-acmpca.CfnCertificateAuthorityActivation",
            "Attributes: ",
            "  attrCompleteCertificateChain"
        ],
        "prefix": "l1-acmpca-certificateauthorityactivation",
        "scope": "javascript,typescript"
    },
    "acmpca.CfnPermission": {
        "body": [
            "new acmpca.CfnPermission(this, \"${1:id}\", {",
            "  actions: [], // Required",
            "  certificateAuthorityArn: \"${3:string}\", // Required",
            "  principal: \"${4:string}\", // Required",
            "  sourceAccount: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: acmpca.CfnPermission",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-acmpca.CfnPermission"
        ],
        "prefix": "l1-acmpca-permission",
        "scope": "javascript,typescript"
    },
    "alexa.CfnASKCfnSkill": {
        "body": [
            "new alexa.CfnASKCfnSkill(this, \"${1:id}\", {",
            "  authenticationConfiguration: {",
            "    clientId: \"${2:string}\",",
            "    clientSecret: \"${3:string}\",",
            "    refreshToken: \"${4:string}\",",
            "  },",
            "  skillPackage: {",
            "    s3Bucket: \"${4:string}\",",
            "    s3BucketRole: \"${5:string}\",",
            "    s3Key: \"${6:string}\",",
            "    s3ObjectVersion: \"${7:string}\",",
            "  },",
            "  vendorId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: alexa.CfnASKCfnSkill",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-alexa.CfnASKCfnSkill"
        ],
        "prefix": "alexa-ask-skill",
        "scope": "javascript,typescript"
    },
    "amazonmq.CfnBroker": {
        "body": [
            "new amazonmq.CfnBroker(this, \"${1:id}\", {",
            "  authenticationStrategy: \"${2:string}\",",
            "  autoMinorVersionUpgrade: ${3|false,true|}, // Required",
            "  brokerName: \"${4:string}\", // Required",
            "  configuration: {",
            "    id: \"${5:string}\",",
            "    revision: ${6:Number},",
            "  },",
            "  deploymentMode: \"${6:string}\", // Required",
            "  encryptionOptions: {",
            "    kmsKeyId: \"${7:string}\",",
            "    useAwsOwnedKey: ${8|false,true|},",
            "  },",
            "  engineType: \"${8:string}\", // Required",
            "  engineVersion: \"${9:string}\", // Required",
            "  hostInstanceType: \"${10:string}\", // Required",
            "  ldapServerMetadata: {",
            "    hosts: [],",
            "    roleBase: \"${12:string}\",",
            "    roleName: \"${13:string}\",",
            "    roleSearchMatching: \"${14:string}\",",
            "    roleSearchSubtree: ${15|false,true|},",
            "    serviceAccountPassword: \"${16:string}\",",
            "    serviceAccountUsername: \"${17:string}\",",
            "    userBase: \"${18:string}\",",
            "    userRoleName: \"${19:string}\",",
            "    userSearchMatching: \"${20:string}\",",
            "    userSearchSubtree: ${21|false,true|},",
            "  },",
            "  logs: {",
            "    audit: ${12|false,true|},",
            "    general: ${13|false,true|},",
            "  },",
            "  maintenanceWindowStartTime: {",
            "    dayOfWeek: \"${13:string}\",",
            "    timeOfDay: \"${14:string}\",",
            "    timeZone: \"${15:string}\",",
            "  },",
            "  publiclyAccessible: ${14|false,true|}, // Required",
            "  securityGroups: [],",
            "  storageType: \"${16:string}\",",
            "  subnetIds: [],",
            "  tags: [],",
            "  users: [], // Required",
            "})"
        ],
        "description": [
            "Construct: amazonmq.CfnBroker",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amazonmq.CfnBroker",
            "Attributes: ",
            "  attrIpAddresses",
            "  attrOpenWireEndpoints",
            "  attrConfigurationRevision",
            "  attrStompEndpoints",
            "  attrMqttEndpoints",
            "  attrAmqpEndpoints",
            "  attrArn",
            "  attrConfigurationId",
            "  attrWssEndpoints"
        ],
        "prefix": "l1-amazonmq-broker",
        "scope": "javascript,typescript"
    },
    "amazonmq.CfnConfiguration": {
        "body": [
            "new amazonmq.CfnConfiguration(this, \"${1:id}\", {",
            "  authenticationStrategy: \"${2:string}\",",
            "  data: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  engineType: \"${5:string}\", // Required",
            "  engineVersion: \"${6:string}\", // Required",
            "  name: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: amazonmq.CfnConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amazonmq.CfnConfiguration",
            "Attributes: ",
            "  attrRevision",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-amazonmq-configuration",
        "scope": "javascript,typescript"
    },
    "amazonmq.CfnConfigurationAssociation": {
        "body": [
            "new amazonmq.CfnConfigurationAssociation(this, \"${1:id}\", {",
            "  broker: \"${2:string}\", // Required",
            "  configuration: {",
            "    id: \"${3:string}\",",
            "    revision: ${4:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: amazonmq.CfnConfigurationAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amazonmq.CfnConfigurationAssociation"
        ],
        "prefix": "l1-amazonmq-configurationassociation",
        "scope": "javascript,typescript"
    },
    "amplify.CfnApp": {
        "body": [
            "new amplify.CfnApp(this, \"${1:id}\", {",
            "  accessToken: \"${2:string}\",",
            "  autoBranchCreationConfig: {",
            "    autoBranchCreationPatterns: [],",
            "    buildSpec: \"${5:string}\",",
            "    enableAutoBranchCreation: ${6|false,true|},",
            "    enableAutoBuild: ${7|false,true|},",
            "    enablePerformanceMode: ${8|false,true|},",
            "    enablePullRequestPreview: ${9|false,true|},",
            "    environmentVariables: [],",
            "    pullRequestEnvironmentName: \"${11:string}\",",
            "    stage: \"${12:string}\",",
            "  },",
            "  basicAuthConfig: {",
            "    enableBasicAuth: ${4|false,true|},",
            "    password: \"${5:string}\",",
            "    username: \"${6:string}\",",
            "  },",
            "  buildSpec: \"${5:string}\",",
            "  customHeaders: \"${6:string}\",",
            "  customRules: [],",
            "  description: \"${8:string}\",",
            "  enableBranchAutoDeletion: ${9|false,true|},",
            "  environmentVariables: [],",
            "  iAMServiceRole: \"${11:string}\",",
            "  name: \"${12:string}\", // Required",
            "  oauthToken: \"${13:string}\",",
            "  repository: \"${14:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: amplify.CfnApp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amplify.CfnApp",
            "Attributes: ",
            "  attrAppId",
            "  attrAppName",
            "  attrArn",
            "  attrDefaultDomain"
        ],
        "prefix": "l1-amplify-app",
        "scope": "javascript,typescript"
    },
    "amplify.CfnBranch": {
        "body": [
            "new amplify.CfnBranch(this, \"${1:id}\", {",
            "  appId: \"${2:string}\", // Required",
            "  basicAuthConfig: {",
            "    enableBasicAuth: ${3|false,true|},",
            "    password: \"${4:string}\",",
            "    username: \"${5:string}\",",
            "  },",
            "  branchName: \"${4:string}\", // Required",
            "  buildSpec: \"${5:string}\",",
            "  description: \"${6:string}\",",
            "  enableAutoBuild: ${7|false,true|},",
            "  enablePerformanceMode: ${8|false,true|},",
            "  enablePullRequestPreview: ${9|false,true|},",
            "  environmentVariables: [],",
            "  pullRequestEnvironmentName: \"${11:string}\",",
            "  stage: \"${12:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: amplify.CfnBranch",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amplify.CfnBranch",
            "Attributes: ",
            "  attrArn",
            "  attrBranchName"
        ],
        "prefix": "l1-amplify-branch",
        "scope": "javascript,typescript"
    },
    "amplify.CfnDomain": {
        "body": [
            "new amplify.CfnDomain(this, \"${1:id}\", {",
            "  appId: \"${2:string}\", // Required",
            "  autoSubDomainCreationPatterns: [],",
            "  autoSubDomainIAMRole: \"${4:string}\",",
            "  domainName: \"${5:string}\", // Required",
            "  enableAutoSubDomain: ${6|false,true|},",
            "  subDomainSettings: [], // Required",
            "})"
        ],
        "description": [
            "Construct: amplify.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amplify.CfnDomain",
            "Attributes: ",
            "  attrArn",
            "  attrAutoSubDomainCreationPatterns",
            "  attrAutoSubDomainIAMRole",
            "  attrCertificateRecord",
            "  attrDomainName",
            "  attrDomainStatus",
            "  attrEnableAutoSubDomain",
            "  attrStatusReason"
        ],
        "prefix": "l1-amplify-domain",
        "scope": "javascript,typescript"
    },
    "amplifyuibuilder.CfnComponent": {
        "body": [
            "new amplifyuibuilder.CfnComponent(this, \"${1:id}\", {",
            "  bindingProperties: {",
            "  },",
            "  children: [],",
            "  collectionProperties: {",
            "  },",
            "  componentType: \"${5:string}\", // Required",
            "  events: {",
            "  },",
            "  name: \"${7:string}\", // Required",
            "  overrides: {",
            "  },",
            "  properties: {",
            "  },",
            "  schemaVersion: \"${10:string}\",",
            "  sourceId: \"${11:string}\",",
            "  tags: {",
            "  },",
            "  variants: [], // Required",
            "})"
        ],
        "description": [
            "Construct: amplifyuibuilder.CfnComponent",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amplifyuibuilder.CfnComponent",
            "Attributes: ",
            "  attrAppId",
            "  attrEnvironmentName",
            "  attrId"
        ],
        "prefix": "l1-amplifyuibuilder-component",
        "scope": "javascript,typescript"
    },
    "amplifyuibuilder.CfnTheme": {
        "body": [
            "new amplifyuibuilder.CfnTheme(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  overrides: [],",
            "  tags: {",
            "  },",
            "  values: [], // Required",
            "})"
        ],
        "description": [
            "Construct: amplifyuibuilder.CfnTheme",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-amplifyuibuilder.CfnTheme",
            "Attributes: ",
            "  attrAppId",
            "  attrCreatedAt",
            "  attrEnvironmentName",
            "  attrId",
            "  attrModifiedAt"
        ],
        "prefix": "l1-amplifyuibuilder-theme",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnAccount": {
        "body": [
            "new apigateway.CfnAccount(this, \"${1:id}\", {",
            "  cloudWatchRoleArn: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnAccount",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnAccount",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-apigateway-account",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnApiKey": {
        "body": [
            "new apigateway.CfnApiKey(this, \"${1:id}\", {",
            "  customerId: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  enabled: ${4|false,true|},",
            "  generateDistinctId: ${5|false,true|},",
            "  name: \"${6:string}\",",
            "  stageKeys: [],",
            "  tags: [],",
            "  value: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnApiKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnApiKey",
            "Attributes: ",
            "  attrAPIKeyId"
        ],
        "prefix": "l1-apigateway-apikey",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnAuthorizer": {
        "body": [
            "new apigateway.CfnAuthorizer(this, \"${1:id}\", {",
            "  authType: \"${2:string}\",",
            "  authorizerCredentials: \"${3:string}\",",
            "  authorizerResultTtlInSeconds: ${4:Number},",
            "  authorizerUri: \"${5:string}\",",
            "  identitySource: \"${6:string}\",",
            "  identityValidationExpression: \"${7:string}\",",
            "  name: \"${8:string}\", // Required",
            "  providerARNs: [],",
            "  restApiId: \"${10:string}\", // Required",
            "  type: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnAuthorizer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnAuthorizer",
            "Attributes: ",
            "  attrAuthorizerId"
        ],
        "prefix": "l1-apigateway-authorizer",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnBasePathMapping": {
        "body": [
            "new apigateway.CfnBasePathMapping(this, \"${1:id}\", {",
            "  basePath: \"${2:string}\",",
            "  domainName: \"${3:string}\", // Required",
            "  id: \"${4:string}\",",
            "  restApiId: \"${5:string}\",",
            "  stage: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnBasePathMapping",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnBasePathMapping"
        ],
        "prefix": "l1-apigateway-basepathmapping",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnClientCertificate": {
        "body": [
            "new apigateway.CfnClientCertificate(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnClientCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnClientCertificate",
            "Attributes: ",
            "  attrClientCertificateId"
        ],
        "prefix": "l1-apigateway-clientcertificate",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnDeployment": {
        "body": [
            "new apigateway.CfnDeployment(this, \"${1:id}\", {",
            "  deploymentCanarySettings: {",
            "    percentTraffic: ${2:Number},",
            "    useStageCache: ${4|false,true|},",
            "  },",
            "  description: \"${3:string}\",",
            "  restApiId: \"${4:string}\", // Required",
            "  stageDescription: {",
            "    cacheClusterEnabled: ${6|false,true|},",
            "    cacheClusterSize: \"${7:string}\",",
            "    cacheDataEncrypted: ${8|false,true|},",
            "    cacheTtlInSeconds: ${9:Number},",
            "    cachingEnabled: ${10|false,true|},",
            "    clientCertificateId: \"${12:string}\",",
            "    dataTraceEnabled: ${13|false,true|},",
            "    description: \"${14:string}\",",
            "    documentationVersion: \"${15:string}\",",
            "    loggingLevel: \"${16:string}\",",
            "    methodSettings: [],",
            "    metricsEnabled: ${18|false,true|},",
            "    tags: [],",
            "    throttlingBurstLimit: ${20:Number},",
            "    throttlingRateLimit: ${21:Number},",
            "    tracingEnabled: ${22|false,true|},",
            "  },",
            "  stageName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnDeployment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnDeployment",
            "Attributes: ",
            "  attrDeploymentId"
        ],
        "prefix": "l1-apigateway-deployment",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnDocumentationPart": {
        "body": [
            "new apigateway.CfnDocumentationPart(this, \"${1:id}\", {",
            "  location: {",
            "    method: \"${2:string}\",",
            "    name: \"${3:string}\",",
            "    path: \"${4:string}\",",
            "    statusCode: \"${5:string}\",",
            "    type: \"${6:string}\",",
            "  },",
            "  properties: \"${3:string}\", // Required",
            "  restApiId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnDocumentationPart",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnDocumentationPart"
        ],
        "prefix": "l1-apigateway-documentationpart",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnDocumentationVersion": {
        "body": [
            "new apigateway.CfnDocumentationVersion(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  documentationVersion: \"${3:string}\", // Required",
            "  restApiId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnDocumentationVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnDocumentationVersion"
        ],
        "prefix": "l1-apigateway-documentationversion",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnDomainName": {
        "body": [
            "new apigateway.CfnDomainName(this, \"${1:id}\", {",
            "  certificateArn: \"${2:string}\",",
            "  domainName: \"${3:string}\",",
            "  endpointConfiguration: {",
            "    types: [],",
            "  },",
            "  mutualTlsAuthentication: {",
            "    truststoreUri: \"${5:string}\",",
            "    truststoreVersion: \"${6:string}\",",
            "  },",
            "  ownershipVerificationCertificateArn: \"${6:string}\",",
            "  regionalCertificateArn: \"${7:string}\",",
            "  securityPolicy: \"${8:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnDomainName",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnDomainName",
            "Attributes: ",
            "  attrDistributionDomainName",
            "  attrDistributionHostedZoneId",
            "  attrRegionalDomainName",
            "  attrRegionalHostedZoneId"
        ],
        "prefix": "l1-apigateway-domainname",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnGatewayResponse": {
        "body": [
            "new apigateway.CfnGatewayResponse(this, \"${1:id}\", {",
            "  responseParameters: {",
            "  },",
            "  responseTemplates: {",
            "  },",
            "  responseType: \"${4:string}\", // Required",
            "  restApiId: \"${5:string}\", // Required",
            "  statusCode: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnGatewayResponse",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnGatewayResponse",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-apigateway-gatewayresponse",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnMethod": {
        "body": [
            "new apigateway.CfnMethod(this, \"${1:id}\", {",
            "  apiKeyRequired: ${2|false,true|},",
            "  authorizationScopes: [],",
            "  authorizationType: \"${4:string}\",",
            "  authorizerId: \"${5:string}\",",
            "  httpMethod: \"${6:string}\", // Required",
            "  integration: {",
            "    cacheKeyParameters: [],",
            "    cacheNamespace: \"${8:string}\",",
            "    connectionId: \"${9:string}\",",
            "    connectionType: \"${10:string}\",",
            "    contentHandling: \"${11:string}\",",
            "    credentials: \"${12:string}\",",
            "    integrationHttpMethod: \"${13:string}\",",
            "    integrationResponses: [],",
            "    passthroughBehavior: \"${15:string}\",",
            "    timeoutInMillis: ${18:Number},",
            "    type: \"${19:string}\",",
            "    uri: \"${20:string}\",",
            "  },",
            "  methodResponses: [],",
            "  operationName: \"${9:string}\",",
            "  requestModels: {",
            "  },",
            "  requestParameters: {",
            "  },",
            "  requestValidatorId: \"${12:string}\",",
            "  resourceId: \"${13:string}\", // Required",
            "  restApiId: \"${14:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnMethod",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnMethod"
        ],
        "prefix": "l1-apigateway-method",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnModel": {
        "body": [
            "new apigateway.CfnModel(this, \"${1:id}\", {",
            "  contentType: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  restApiId: \"${5:string}\", // Required",
            "  schema: ${6:JSON},",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnModel"
        ],
        "prefix": "l1-apigateway-model",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnRequestValidator": {
        "body": [
            "new apigateway.CfnRequestValidator(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  restApiId: \"${3:string}\", // Required",
            "  validateRequestBody: ${4|false,true|},",
            "  validateRequestParameters: ${5|false,true|},",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnRequestValidator",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnRequestValidator",
            "Attributes: ",
            "  attrRequestValidatorId"
        ],
        "prefix": "l1-apigateway-requestvalidator",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnResource": {
        "body": [
            "new apigateway.CfnResource(this, \"${1:id}\", {",
            "  parentId: \"${2:string}\", // Required",
            "  pathPart: \"${3:string}\", // Required",
            "  restApiId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnResource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnResource",
            "Attributes: ",
            "  attrResourceId"
        ],
        "prefix": "l1-apigateway-resource",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnRestApi": {
        "body": [
            "new apigateway.CfnRestApi(this, \"${1:id}\", {",
            "  apiKeySourceType: \"${2:string}\",",
            "  binaryMediaTypes: [],",
            "  body: ${4:JSON},",
            "  bodyS3Location: {",
            "    bucket: \"${5:string}\",",
            "    eTag: \"${6:string}\",",
            "    key: \"${7:string}\",",
            "    version: \"${8:string}\",",
            "  },",
            "  cloneFrom: \"${6:string}\",",
            "  description: \"${7:string}\",",
            "  disableExecuteApiEndpoint: ${8|false,true|},",
            "  endpointConfiguration: {",
            "    types: [],",
            "    vpcEndpointIds: [],",
            "  },",
            "  failOnWarnings: ${10|false,true|},",
            "  minimumCompressionSize: ${11:Number},",
            "  mode: \"${12:string}\",",
            "  name: \"${13:string}\",",
            "  parameters: {",
            "  },",
            "  policy: ${15:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnRestApi",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnRestApi",
            "Attributes: ",
            "  attrRootResourceId"
        ],
        "prefix": "l1-apigateway-restapi",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnStage": {
        "body": [
            "new apigateway.CfnStage(this, \"${1:id}\", {",
            "  accessLogSetting: {",
            "    destinationArn: \"${2:string}\",",
            "    format: \"${3:string}\",",
            "  },",
            "  cacheClusterEnabled: ${3|false,true|},",
            "  cacheClusterSize: \"${4:string}\",",
            "  canarySetting: {",
            "    deploymentId: \"${5:string}\",",
            "    percentTraffic: ${6:Number},",
            "    useStageCache: ${8|false,true|},",
            "  },",
            "  clientCertificateId: \"${6:string}\",",
            "  deploymentId: \"${7:string}\",",
            "  description: \"${8:string}\",",
            "  documentationVersion: \"${9:string}\",",
            "  methodSettings: [],",
            "  restApiId: \"${11:string}\", // Required",
            "  stageName: \"${12:string}\",",
            "  tags: [],",
            "  tracingEnabled: ${14|false,true|},",
            "  variables: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnStage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnStage"
        ],
        "prefix": "l1-apigateway-stage",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnUsagePlan": {
        "body": [
            "new apigateway.CfnUsagePlan(this, \"${1:id}\", {",
            "  apiStages: [],",
            "  description: \"${3:string}\",",
            "  quota: {",
            "    limit: ${4:Number},",
            "    offset: ${5:Number},",
            "    period: \"${6:string}\",",
            "  },",
            "  tags: [],",
            "  throttle: {",
            "    burstLimit: ${6:Number},",
            "    rateLimit: ${7:Number},",
            "  },",
            "  usagePlanName: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnUsagePlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnUsagePlan",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-apigateway-usageplan",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnUsagePlanKey": {
        "body": [
            "new apigateway.CfnUsagePlanKey(this, \"${1:id}\", {",
            "  keyId: \"${2:string}\", // Required",
            "  keyType: \"${3:string}\", // Required",
            "  usagePlanId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnUsagePlanKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnUsagePlanKey",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-apigateway-usageplankey",
        "scope": "javascript,typescript"
    },
    "apigateway.CfnVpcLink": {
        "body": [
            "new apigateway.CfnVpcLink(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "  targetArns: [], // Required",
            "})"
        ],
        "description": [
            "Construct: apigateway.CfnVpcLink",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigateway.CfnVpcLink"
        ],
        "prefix": "l1-apigateway-vpclink",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnApi": {
        "body": [
            "new apigatewayv2.CfnApi(this, \"${1:id}\", {",
            "  apiKeySelectionExpression: \"${2:string}\",",
            "  basePath: \"${3:string}\",",
            "  body: ${4:JSON},",
            "  bodyS3Location: {",
            "    bucket: \"${5:string}\",",
            "    etag: \"${6:string}\",",
            "    key: \"${7:string}\",",
            "    version: \"${8:string}\",",
            "  },",
            "  corsConfiguration: {",
            "    allowCredentials: ${6|false,true|},",
            "    allowHeaders: [],",
            "    allowMethods: [],",
            "    allowOrigins: [],",
            "    exposeHeaders: [],",
            "    maxAge: ${11:Number},",
            "  },",
            "  credentialsArn: \"${7:string}\",",
            "  description: \"${8:string}\",",
            "  disableExecuteApiEndpoint: ${9|false,true|},",
            "  disableSchemaValidation: ${10|false,true|},",
            "  failOnWarnings: ${11|false,true|},",
            "  name: \"${12:string}\",",
            "  protocolType: \"${13:string}\",",
            "  routeKey: \"${14:string}\",",
            "  routeSelectionExpression: \"${15:string}\",",
            "  tags: ${16:JSON},",
            "  target: \"${17:string}\",",
            "  version: \"${18:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnApi",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnApi",
            "Attributes: ",
            "  attrApiEndpoint"
        ],
        "prefix": "l1-apigatewayv2-api",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnApiGatewayManagedOverrides": {
        "body": [
            "new apigatewayv2.CfnApiGatewayManagedOverrides(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  integration: {",
            "    description: \"${3:string}\",",
            "    integrationMethod: \"${4:string}\",",
            "    payloadFormatVersion: \"${5:string}\",",
            "    timeoutInMillis: ${6:Number},",
            "  },",
            "  route: {",
            "    authorizationScopes: [],",
            "    authorizationType: \"${5:string}\",",
            "    authorizerId: \"${6:string}\",",
            "    operationName: \"${7:string}\",",
            "    target: \"${8:string}\",",
            "  },",
            "  stage: {",
            "    autoDeploy: ${6|false,true|},",
            "    description: \"${8:string}\",",
            "    routeSettings: ${9:JSON},",
            "    stageVariables: ${10:JSON},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnApiGatewayManagedOverrides",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnApiGatewayManagedOverrides"
        ],
        "prefix": "l1-apigatewayv2-apigatewaymanagedoverrides",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnApiMapping": {
        "body": [
            "new apigatewayv2.CfnApiMapping(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  apiMappingKey: \"${3:string}\",",
            "  domainName: \"${4:string}\", // Required",
            "  stage: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnApiMapping",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnApiMapping"
        ],
        "prefix": "l1-apigatewayv2-apimapping",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnAuthorizer": {
        "body": [
            "new apigatewayv2.CfnAuthorizer(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  authorizerCredentialsArn: \"${3:string}\",",
            "  authorizerPayloadFormatVersion: \"${4:string}\",",
            "  authorizerResultTtlInSeconds: ${5:Number},",
            "  authorizerType: \"${6:string}\", // Required",
            "  authorizerUri: \"${7:string}\",",
            "  enableSimpleResponses: ${8|false,true|},",
            "  identitySource: [],",
            "  identityValidationExpression: \"${10:string}\",",
            "  jwtConfiguration: {",
            "    audience: [],",
            "    issuer: \"${12:string}\",",
            "  },",
            "  name: \"${12:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnAuthorizer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnAuthorizer"
        ],
        "prefix": "l1-apigatewayv2-authorizer",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnDeployment": {
        "body": [
            "new apigatewayv2.CfnDeployment(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  stageName: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnDeployment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnDeployment"
        ],
        "prefix": "l1-apigatewayv2-deployment",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnDomainName": {
        "body": [
            "new apigatewayv2.CfnDomainName(this, \"${1:id}\", {",
            "  domainName: \"${2:string}\", // Required",
            "  domainNameConfigurations: [],",
            "  mutualTlsAuthentication: {",
            "    truststoreUri: \"${4:string}\",",
            "    truststoreVersion: \"${5:string}\",",
            "  },",
            "  tags: ${5:JSON},",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnDomainName",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnDomainName",
            "Attributes: ",
            "  attrRegionalHostedZoneId",
            "  attrRegionalDomainName"
        ],
        "prefix": "l1-apigatewayv2-domainname",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnIntegration": {
        "body": [
            "new apigatewayv2.CfnIntegration(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  connectionId: \"${3:string}\",",
            "  connectionType: \"${4:string}\",",
            "  contentHandlingStrategy: \"${5:string}\",",
            "  credentialsArn: \"${6:string}\",",
            "  description: \"${7:string}\",",
            "  integrationMethod: \"${8:string}\",",
            "  integrationSubtype: \"${9:string}\",",
            "  integrationType: \"${10:string}\", // Required",
            "  integrationUri: \"${11:string}\",",
            "  passthroughBehavior: \"${12:string}\",",
            "  payloadFormatVersion: \"${13:string}\",",
            "  requestParameters: ${14:JSON},",
            "  requestTemplates: ${15:JSON},",
            "  responseParameters: ${16:JSON},",
            "  templateSelectionExpression: \"${17:string}\",",
            "  timeoutInMillis: ${18:Number},",
            "  tlsConfig: {",
            "    serverNameToVerify: \"${19:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnIntegration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnIntegration"
        ],
        "prefix": "l1-apigatewayv2-integration",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnIntegrationResponse": {
        "body": [
            "new apigatewayv2.CfnIntegrationResponse(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  contentHandlingStrategy: \"${3:string}\",",
            "  integrationId: \"${4:string}\", // Required",
            "  integrationResponseKey: \"${5:string}\", // Required",
            "  responseParameters: ${6:JSON},",
            "  responseTemplates: ${7:JSON},",
            "  templateSelectionExpression: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnIntegrationResponse",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnIntegrationResponse"
        ],
        "prefix": "l1-apigatewayv2-integrationresponse",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnModel": {
        "body": [
            "new apigatewayv2.CfnModel(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  contentType: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\", // Required",
            "  schema: ${6:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnModel"
        ],
        "prefix": "l1-apigatewayv2-model",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnRoute": {
        "body": [
            "new apigatewayv2.CfnRoute(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  apiKeyRequired: ${3|false,true|},",
            "  authorizationScopes: [],",
            "  authorizationType: \"${5:string}\",",
            "  authorizerId: \"${6:string}\",",
            "  modelSelectionExpression: \"${7:string}\",",
            "  operationName: \"${8:string}\",",
            "  requestModels: ${9:JSON},",
            "  requestParameters: ${10:JSON},",
            "  routeKey: \"${11:string}\", // Required",
            "  routeResponseSelectionExpression: \"${12:string}\",",
            "  target: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnRoute"
        ],
        "prefix": "l1-apigatewayv2-route",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnRouteResponse": {
        "body": [
            "new apigatewayv2.CfnRouteResponse(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  modelSelectionExpression: \"${3:string}\",",
            "  responseModels: ${4:JSON},",
            "  responseParameters: ${5:JSON},",
            "  routeId: \"${6:string}\", // Required",
            "  routeResponseKey: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnRouteResponse",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnRouteResponse"
        ],
        "prefix": "l1-apigatewayv2-routeresponse",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnStage": {
        "body": [
            "new apigatewayv2.CfnStage(this, \"${1:id}\", {",
            "  accessLogSettings: {",
            "    destinationArn: \"${2:string}\",",
            "    format: \"${3:string}\",",
            "  },",
            "  accessPolicyId: \"${3:string}\",",
            "  apiId: \"${4:string}\", // Required",
            "  autoDeploy: ${5|false,true|},",
            "  clientCertificateId: \"${6:string}\",",
            "  defaultRouteSettings: {",
            "    dataTraceEnabled: ${7|false,true|},",
            "    detailedMetricsEnabled: ${8|false,true|},",
            "    loggingLevel: \"${9:string}\",",
            "    throttlingBurstLimit: ${10:Number},",
            "    throttlingRateLimit: ${11:Number},",
            "  },",
            "  deploymentId: \"${8:string}\",",
            "  description: \"${9:string}\",",
            "  routeSettings: ${10:JSON},",
            "  stageName: \"${11:string}\", // Required",
            "  stageVariables: ${12:JSON},",
            "  tags: ${13:JSON},",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnStage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnStage"
        ],
        "prefix": "l1-apigatewayv2-stage",
        "scope": "javascript,typescript"
    },
    "apigatewayv2.CfnVpcLink": {
        "body": [
            "new apigatewayv2.CfnVpcLink(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  securityGroupIds: [],",
            "  subnetIds: [], // Required",
            "  tags: ${5:JSON},",
            "})"
        ],
        "description": [
            "Construct: apigatewayv2.CfnVpcLink",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apigatewayv2.CfnVpcLink"
        ],
        "prefix": "l1-apigatewayv2-vpclink",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnApplication": {
        "body": [
            "new appconfig.CfnApplication(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnApplication"
        ],
        "prefix": "l1-appconfig-application",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnConfigurationProfile": {
        "body": [
            "new appconfig.CfnConfigurationProfile(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  locationUri: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  retrievalRoleArn: \"${6:string}\",",
            "  tags: [],",
            "  type: \"${8:string}\",",
            "  validators: [],",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnConfigurationProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnConfigurationProfile"
        ],
        "prefix": "l1-appconfig-configurationprofile",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnDeployment": {
        "body": [
            "new appconfig.CfnDeployment(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  configurationProfileId: \"${3:string}\", // Required",
            "  configurationVersion: \"${4:string}\", // Required",
            "  deploymentStrategyId: \"${5:string}\", // Required",
            "  description: \"${6:string}\",",
            "  environmentId: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnDeployment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnDeployment"
        ],
        "prefix": "l1-appconfig-deployment",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnDeploymentStrategy": {
        "body": [
            "new appconfig.CfnDeploymentStrategy(this, \"${1:id}\", {",
            "  deploymentDurationInMinutes: ${2:Number}, // Required",
            "  description: \"${3:string}\",",
            "  finalBakeTimeInMinutes: ${4:Number},",
            "  growthFactor: ${5:Number}, // Required",
            "  growthType: \"${6:string}\",",
            "  name: \"${7:string}\", // Required",
            "  replicateTo: \"${8:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnDeploymentStrategy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnDeploymentStrategy"
        ],
        "prefix": "l1-appconfig-deploymentstrategy",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnEnvironment": {
        "body": [
            "new appconfig.CfnEnvironment(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  monitors: [],",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnEnvironment"
        ],
        "prefix": "l1-appconfig-environment",
        "scope": "javascript,typescript"
    },
    "appconfig.CfnHostedConfigurationVersion": {
        "body": [
            "new appconfig.CfnHostedConfigurationVersion(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  configurationProfileId: \"${3:string}\", // Required",
            "  content: \"${4:string}\", // Required",
            "  contentType: \"${5:string}\", // Required",
            "  description: \"${6:string}\",",
            "  latestVersionNumber: ${7:Number},",
            "})"
        ],
        "description": [
            "Construct: appconfig.CfnHostedConfigurationVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appconfig.CfnHostedConfigurationVersion"
        ],
        "prefix": "l1-appconfig-hostedconfigurationversion",
        "scope": "javascript,typescript"
    },
    "appflow.CfnConnectorProfile": {
        "body": [
            "new appflow.CfnConnectorProfile(this, \"${1:id}\", {",
            "  connectionMode: \"${2:string}\", // Required",
            "  connectorProfileConfig: {",
            "  },",
            "  connectorProfileName: \"${4:string}\", // Required",
            "  connectorType: \"${5:string}\", // Required",
            "  kMSArn: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: appflow.CfnConnectorProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appflow.CfnConnectorProfile",
            "Attributes: ",
            "  attrConnectorProfileArn",
            "  attrCredentialsArn"
        ],
        "prefix": "l1-appflow-connectorprofile",
        "scope": "javascript,typescript"
    },
    "appflow.CfnFlow": {
        "body": [
            "new appflow.CfnFlow(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  destinationFlowConfigList: [], // Required",
            "  flowName: \"${4:string}\", // Required",
            "  kMSArn: \"${5:string}\",",
            "  sourceFlowConfig: {",
            "    connectorProfileName: \"${6:string}\",",
            "    connectorType: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "  tasks: [], // Required",
            "  triggerConfig: {",
            "    triggerType: \"${10:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: appflow.CfnFlow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appflow.CfnFlow",
            "Attributes: ",
            "  attrFlowArn"
        ],
        "prefix": "l1-appflow-flow",
        "scope": "javascript,typescript"
    },
    "appintegrations.CfnDataIntegration": {
        "body": [
            "new appintegrations.CfnDataIntegration(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  kmsKey: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  scheduleConfig: {",
            "    firstExecutionFrom: \"${5:string}\",",
            "    object: \"${6:string}\",",
            "    scheduleExpression: \"${7:string}\",",
            "  },",
            "  sourceURI: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appintegrations.CfnDataIntegration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appintegrations.CfnDataIntegration",
            "Attributes: ",
            "  attrId",
            "  attrDataIntegrationArn"
        ],
        "prefix": "l1-appintegrations-dataintegration",
        "scope": "javascript,typescript"
    },
    "appintegrations.CfnEventIntegration": {
        "body": [
            "new appintegrations.CfnEventIntegration(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  eventBridgeBus: \"${3:string}\", // Required",
            "  eventFilter: {",
            "    source: \"${4:string}\",",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appintegrations.CfnEventIntegration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appintegrations.CfnEventIntegration",
            "Attributes: ",
            "  attrEventIntegrationArn",
            "  attrAssociations"
        ],
        "prefix": "l1-appintegrations-eventintegration",
        "scope": "javascript,typescript"
    },
    "applicationautoscaling.CfnScalableTarget": {
        "body": [
            "new applicationautoscaling.CfnScalableTarget(this, \"${1:id}\", {",
            "  maxCapacity: ${2:Number}, // Required",
            "  minCapacity: ${3:Number}, // Required",
            "  resourceId: \"${4:string}\", // Required",
            "  roleARN: \"${5:string}\", // Required",
            "  scalableDimension: \"${6:string}\", // Required",
            "  scheduledActions: [],",
            "  serviceNamespace: \"${8:string}\", // Required",
            "  suspendedState: {",
            "    dynamicScalingInSuspended: ${9|false,true|},",
            "    dynamicScalingOutSuspended: ${10|false,true|},",
            "    scheduledScalingSuspended: ${11|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: applicationautoscaling.CfnScalableTarget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-applicationautoscaling.CfnScalableTarget"
        ],
        "prefix": "l1-applicationautoscaling-scalabletarget",
        "scope": "javascript,typescript"
    },
    "applicationautoscaling.CfnScalingPolicy": {
        "body": [
            "new applicationautoscaling.CfnScalingPolicy(this, \"${1:id}\", {",
            "  policyName: \"${2:string}\", // Required",
            "  policyType: \"${3:string}\", // Required",
            "  resourceId: \"${4:string}\",",
            "  scalableDimension: \"${5:string}\",",
            "  scalingTargetId: \"${6:string}\",",
            "  serviceNamespace: \"${7:string}\",",
            "  stepScalingPolicyConfiguration: {",
            "    adjustmentType: \"${8:string}\",",
            "    cooldown: ${9:Number},",
            "    metricAggregationType: \"${10:string}\",",
            "    minAdjustmentMagnitude: ${11:Number},",
            "    stepAdjustments: [],",
            "  },",
            "  targetTrackingScalingPolicyConfiguration: {",
            "    disableScaleIn: ${10|false,true|},",
            "    scaleInCooldown: ${12:Number},",
            "    scaleOutCooldown: ${13:Number},",
            "    targetValue: ${14:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: applicationautoscaling.CfnScalingPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-applicationautoscaling.CfnScalingPolicy"
        ],
        "prefix": "l1-applicationautoscaling-scalingpolicy",
        "scope": "javascript,typescript"
    },
    "applicationinsights.CfnApplication": {
        "body": [
            "new applicationinsights.CfnApplication(this, \"${1:id}\", {",
            "  autoConfigurationEnabled: ${2|false,true|},",
            "  cWEMonitorEnabled: ${3|false,true|},",
            "  componentMonitoringSettings: [],",
            "  customComponents: [],",
            "  logPatternSets: [],",
            "  opsCenterEnabled: ${7|false,true|},",
            "  opsItemSNSTopicArn: \"${8:string}\",",
            "  resourceGroupName: \"${9:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: applicationinsights.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-applicationinsights.CfnApplication",
            "Attributes: ",
            "  attrApplicationARN"
        ],
        "prefix": "l1-applicationinsights-application",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnGatewayRoute": {
        "body": [
            "new appmesh.CfnGatewayRoute(this, \"${1:id}\", {",
            "  gatewayRouteName: \"${2:string}\",",
            "  meshName: \"${3:string}\", // Required",
            "  meshOwner: \"${4:string}\",",
            "  spec: {",
            "    priority: ${8:Number},",
            "  },",
            "  tags: [],",
            "  virtualGatewayName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnGatewayRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnGatewayRoute",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrVirtualGatewayName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrGatewayRouteName",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-gatewayroute",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnMesh": {
        "body": [
            "new appmesh.CfnMesh(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\",",
            "  spec: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnMesh",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnMesh",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-mesh",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnRoute": {
        "body": [
            "new appmesh.CfnRoute(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\", // Required",
            "  meshOwner: \"${3:string}\",",
            "  routeName: \"${4:string}\",",
            "  spec: {",
            "    priority: ${8:Number},",
            "  },",
            "  tags: [],",
            "  virtualRouterName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnRoute",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrVirtualRouterName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrRouteName",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-route",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnVirtualGateway": {
        "body": [
            "new appmesh.CfnVirtualGateway(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\", // Required",
            "  meshOwner: \"${3:string}\",",
            "  spec: {",
            "    listeners: [],",
            "  },",
            "  tags: [],",
            "  virtualGatewayName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnVirtualGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnVirtualGateway",
            "Attributes: ",
            "  attrUid",
            "  attrVirtualGatewayName",
            "  attrMeshName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-virtualgateway",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnVirtualNode": {
        "body": [
            "new appmesh.CfnVirtualNode(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\", // Required",
            "  meshOwner: \"${3:string}\",",
            "  spec: {",
            "    backends: [],",
            "    listeners: [],",
            "  },",
            "  tags: [],",
            "  virtualNodeName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnVirtualNode",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnVirtualNode",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrArn",
            "  attrVirtualNodeName"
        ],
        "prefix": "l1-appmesh-virtualnode",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnVirtualRouter": {
        "body": [
            "new appmesh.CfnVirtualRouter(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\", // Required",
            "  meshOwner: \"${3:string}\",",
            "  spec: {",
            "    listeners: [],",
            "  },",
            "  tags: [],",
            "  virtualRouterName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnVirtualRouter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnVirtualRouter",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrVirtualRouterName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-virtualrouter",
        "scope": "javascript,typescript"
    },
    "appmesh.CfnVirtualService": {
        "body": [
            "new appmesh.CfnVirtualService(this, \"${1:id}\", {",
            "  meshName: \"${2:string}\", // Required",
            "  meshOwner: \"${3:string}\",",
            "  spec: {",
            "  },",
            "  tags: [],",
            "  virtualServiceName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appmesh.CfnVirtualService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appmesh.CfnVirtualService",
            "Attributes: ",
            "  attrUid",
            "  attrMeshName",
            "  attrMeshOwner",
            "  attrResourceOwner",
            "  attrVirtualServiceName",
            "  attrArn"
        ],
        "prefix": "l1-appmesh-virtualservice",
        "scope": "javascript,typescript"
    },
    "apprunner.CfnObservabilityConfiguration": {
        "body": [
            "new apprunner.CfnObservabilityConfiguration(this, \"${1:id}\", {",
            "  observabilityConfigurationName: \"${2:string}\",",
            "  tags: [],",
            "  traceConfiguration: {",
            "    vendor: \"${4:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: apprunner.CfnObservabilityConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apprunner.CfnObservabilityConfiguration",
            "Attributes: ",
            "  attrObservabilityConfigurationArn",
            "  attrObservabilityConfigurationRevision",
            "  attrLatest"
        ],
        "prefix": "l1-apprunner-observabilityconfiguration",
        "scope": "javascript,typescript"
    },
    "apprunner.CfnService": {
        "body": [
            "new apprunner.CfnService(this, \"${1:id}\", {",
            "  autoScalingConfigurationArn: \"${2:string}\",",
            "  encryptionConfiguration: {",
            "    kmsKey: \"${3:string}\",",
            "  },",
            "  healthCheckConfiguration: {",
            "    healthyThreshold: ${4:Number},",
            "    interval: ${5:Number},",
            "    path: \"${6:string}\",",
            "    protocol: \"${7:string}\",",
            "    timeout: ${8:Number},",
            "    unhealthyThreshold: ${9:Number},",
            "  },",
            "  instanceConfiguration: {",
            "    cpu: \"${5:string}\",",
            "    instanceRoleArn: \"${6:string}\",",
            "    memory: \"${7:string}\",",
            "  },",
            "  networkConfiguration: {",
            "  },",
            "  observabilityConfiguration: {",
            "    observabilityConfigurationArn: \"${7:string}\",",
            "    observabilityEnabled: ${8|false,true|},",
            "  },",
            "  serviceName: \"${8:string}\",",
            "  sourceConfiguration: {",
            "    autoDeploymentsEnabled: ${10|false,true|},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: apprunner.CfnService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apprunner.CfnService",
            "Attributes: ",
            "  attrServiceId",
            "  attrServiceArn",
            "  attrServiceUrl",
            "  attrStatus"
        ],
        "prefix": "l1-apprunner-service",
        "scope": "javascript,typescript"
    },
    "apprunner.CfnVpcConnector": {
        "body": [
            "new apprunner.CfnVpcConnector(this, \"${1:id}\", {",
            "  securityGroups: [],",
            "  subnets: [], // Required",
            "  tags: [],",
            "  vpcConnectorName: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: apprunner.CfnVpcConnector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-apprunner.CfnVpcConnector",
            "Attributes: ",
            "  attrVpcConnectorArn",
            "  attrVpcConnectorRevision"
        ],
        "prefix": "l1-apprunner-vpcconnector",
        "scope": "javascript,typescript"
    },
    "appstream.CfnAppBlock": {
        "body": [
            "new appstream.CfnAppBlock(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  displayName: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  setupScriptDetails: {",
            "    executableParameters: \"${5:string}\",",
            "    executablePath: \"${6:string}\",",
            "    timeoutInSeconds: ${8:Number},",
            "  },",
            "  sourceS3Location: {",
            "    s3Bucket: \"${6:string}\",",
            "    s3Key: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnAppBlock",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnAppBlock",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime"
        ],
        "prefix": "l1-appstream-appblock",
        "scope": "javascript,typescript"
    },
    "appstream.CfnApplication": {
        "body": [
            "new appstream.CfnApplication(this, \"${1:id}\", {",
            "  appBlockArn: \"${2:string}\", // Required",
            "  attributesToDelete: [],",
            "  description: \"${4:string}\",",
            "  displayName: \"${5:string}\",",
            "  iconS3Location: {",
            "    s3Bucket: \"${6:string}\",",
            "    s3Key: \"${7:string}\",",
            "  },",
            "  instanceFamilies: [], // Required",
            "  launchParameters: \"${8:string}\",",
            "  launchPath: \"${9:string}\", // Required",
            "  name: \"${10:string}\", // Required",
            "  platforms: [], // Required",
            "  tags: [],",
            "  workingDirectory: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnApplication",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime"
        ],
        "prefix": "l1-appstream-application",
        "scope": "javascript,typescript"
    },
    "appstream.CfnApplicationEntitlementAssociation": {
        "body": [
            "new appstream.CfnApplicationEntitlementAssociation(this, \"${1:id}\", {",
            "  applicationIdentifier: \"${2:string}\", // Required",
            "  entitlementName: \"${3:string}\", // Required",
            "  stackName: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnApplicationEntitlementAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnApplicationEntitlementAssociation"
        ],
        "prefix": "l1-appstream-applicationentitlementassociation",
        "scope": "javascript,typescript"
    },
    "appstream.CfnApplicationFleetAssociation": {
        "body": [
            "new appstream.CfnApplicationFleetAssociation(this, \"${1:id}\", {",
            "  applicationArn: \"${2:string}\", // Required",
            "  fleetName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnApplicationFleetAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnApplicationFleetAssociation"
        ],
        "prefix": "l1-appstream-applicationfleetassociation",
        "scope": "javascript,typescript"
    },
    "appstream.CfnDirectoryConfig": {
        "body": [
            "new appstream.CfnDirectoryConfig(this, \"${1:id}\", {",
            "  directoryName: \"${2:string}\", // Required",
            "  organizationalUnitDistinguishedNames: [], // Required",
            "  serviceAccountCredentials: {",
            "    accountName: \"${4:string}\",",
            "    accountPassword: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnDirectoryConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnDirectoryConfig"
        ],
        "prefix": "l1-appstream-directoryconfig",
        "scope": "javascript,typescript"
    },
    "appstream.CfnEntitlement": {
        "body": [
            "new appstream.CfnEntitlement(this, \"${1:id}\", {",
            "  appVisibility: \"${2:string}\", // Required",
            "  attributes: [], // Required",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\", // Required",
            "  stackName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnEntitlement",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnEntitlement",
            "Attributes: ",
            "  attrCreatedTime",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-appstream-entitlement",
        "scope": "javascript,typescript"
    },
    "appstream.CfnFleet": {
        "body": [
            "new appstream.CfnFleet(this, \"${1:id}\", {",
            "  computeCapacity: {",
            "    desiredInstances: ${2:Number},",
            "  },",
            "  description: \"${3:string}\",",
            "  disconnectTimeoutInSeconds: ${4:Number},",
            "  displayName: \"${5:string}\",",
            "  domainJoinInfo: {",
            "    directoryName: \"${6:string}\",",
            "    organizationalUnitDistinguishedName: \"${7:string}\",",
            "  },",
            "  enableDefaultInternetAccess: ${7|false,true|},",
            "  fleetType: \"${8:string}\",",
            "  iamRoleArn: \"${9:string}\",",
            "  idleDisconnectTimeoutInSeconds: ${10:Number},",
            "  imageArn: \"${11:string}\",",
            "  imageName: \"${12:string}\",",
            "  instanceType: \"${13:string}\", // Required",
            "  maxConcurrentSessions: ${14:Number},",
            "  maxUserDurationInSeconds: ${15:Number},",
            "  name: \"${16:string}\", // Required",
            "  platform: \"${17:string}\",",
            "  sessionScriptS3Location: {",
            "    s3Bucket: \"${18:string}\",",
            "    s3Key: \"${19:string}\",",
            "  },",
            "  streamView: \"${19:string}\",",
            "  tags: [],",
            "  usbDeviceFilterStrings: [],",
            "  vpcConfig: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnFleet"
        ],
        "prefix": "l1-appstream-fleet",
        "scope": "javascript,typescript"
    },
    "appstream.CfnImageBuilder": {
        "body": [
            "new appstream.CfnImageBuilder(this, \"${1:id}\", {",
            "  accessEndpoints: [],",
            "  appstreamAgentVersion: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  displayName: \"${5:string}\",",
            "  domainJoinInfo: {",
            "    directoryName: \"${6:string}\",",
            "    organizationalUnitDistinguishedName: \"${7:string}\",",
            "  },",
            "  enableDefaultInternetAccess: ${7|false,true|},",
            "  iamRoleArn: \"${8:string}\",",
            "  imageArn: \"${9:string}\",",
            "  imageName: \"${10:string}\",",
            "  instanceType: \"${11:string}\", // Required",
            "  name: \"${12:string}\", // Required",
            "  tags: [],",
            "  vpcConfig: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnImageBuilder",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnImageBuilder",
            "Attributes: ",
            "  attrStreamingUrl"
        ],
        "prefix": "l1-appstream-imagebuilder",
        "scope": "javascript,typescript"
    },
    "appstream.CfnStack": {
        "body": [
            "new appstream.CfnStack(this, \"${1:id}\", {",
            "  accessEndpoints: [],",
            "  applicationSettings: {",
            "    enabled: ${3|false,true|},",
            "    settingsGroup: \"${4:string}\",",
            "  },",
            "  attributesToDelete: [],",
            "  deleteStorageConnectors: ${5|false,true|},",
            "  description: \"${6:string}\",",
            "  displayName: \"${7:string}\",",
            "  embedHostDomains: [],",
            "  feedbackURL: \"${9:string}\",",
            "  name: \"${10:string}\",",
            "  redirectURL: \"${11:string}\",",
            "  storageConnectors: [],",
            "  tags: [],",
            "  userSettings: [],",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnStack",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnStack"
        ],
        "prefix": "l1-appstream-stack",
        "scope": "javascript,typescript"
    },
    "appstream.CfnStackFleetAssociation": {
        "body": [
            "new appstream.CfnStackFleetAssociation(this, \"${1:id}\", {",
            "  fleetName: \"${2:string}\", // Required",
            "  stackName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnStackFleetAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnStackFleetAssociation"
        ],
        "prefix": "l1-appstream-stackfleetassociation",
        "scope": "javascript,typescript"
    },
    "appstream.CfnStackUserAssociation": {
        "body": [
            "new appstream.CfnStackUserAssociation(this, \"${1:id}\", {",
            "  authenticationType: \"${2:string}\", // Required",
            "  sendEmailNotification: ${3|false,true|},",
            "  stackName: \"${4:string}\", // Required",
            "  userName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnStackUserAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnStackUserAssociation"
        ],
        "prefix": "l1-appstream-stackuserassociation",
        "scope": "javascript,typescript"
    },
    "appstream.CfnUser": {
        "body": [
            "new appstream.CfnUser(this, \"${1:id}\", {",
            "  authenticationType: \"${2:string}\", // Required",
            "  firstName: \"${3:string}\",",
            "  lastName: \"${4:string}\",",
            "  messageAction: \"${5:string}\",",
            "  userName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appstream.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appstream.CfnUser"
        ],
        "prefix": "l1-appstream-user",
        "scope": "javascript,typescript"
    },
    "appsync.CfnApiCache": {
        "body": [
            "new appsync.CfnApiCache(this, \"${1:id}\", {",
            "  apiCachingBehavior: \"${2:string}\", // Required",
            "  apiId: \"${3:string}\", // Required",
            "  atRestEncryptionEnabled: ${4|false,true|},",
            "  transitEncryptionEnabled: ${5|false,true|},",
            "  ttl: ${6:Number}, // Required",
            "  type: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnApiCache",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnApiCache"
        ],
        "prefix": "l1-appsync-apicache",
        "scope": "javascript,typescript"
    },
    "appsync.CfnApiKey": {
        "body": [
            "new appsync.CfnApiKey(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  apiKeyId: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  expires: ${5:Number},",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnApiKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnApiKey",
            "Attributes: ",
            "  attrApiKey",
            "  attrArn"
        ],
        "prefix": "l1-appsync-apikey",
        "scope": "javascript,typescript"
    },
    "appsync.CfnDataSource": {
        "body": [
            "new appsync.CfnDataSource(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  dynamoDBConfig: {",
            "    awsRegion: \"${4:string}\",",
            "    tableName: \"${6:string}\",",
            "    useCallerCredentials: ${7|false,true|},",
            "    versioned: ${8|false,true|},",
            "  },",
            "  elasticsearchConfig: {",
            "    awsRegion: \"${5:string}\",",
            "    endpoint: \"${6:string}\",",
            "  },",
            "  httpConfig: {",
            "    endpoint: \"${7:string}\",",
            "  },",
            "  lambdaConfig: {",
            "    lambdaFunctionArn: \"${7:string}\",",
            "  },",
            "  name: \"${8:string}\", // Required",
            "  openSearchServiceConfig: {",
            "    awsRegion: \"${9:string}\",",
            "    endpoint: \"${10:string}\",",
            "  },",
            "  relationalDatabaseConfig: {",
            "    relationalDatabaseSourceType: \"${11:string}\",",
            "  },",
            "  serviceRoleArn: \"${11:string}\",",
            "  type: \"${12:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnDataSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnDataSource",
            "Attributes: ",
            "  attrDataSourceArn",
            "  attrName"
        ],
        "prefix": "l1-appsync-datasource",
        "scope": "javascript,typescript"
    },
    "appsync.CfnDomainName": {
        "body": [
            "new appsync.CfnDomainName(this, \"${1:id}\", {",
            "  certificateArn: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  domainName: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnDomainName",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnDomainName",
            "Attributes: ",
            "  attrDomainName",
            "  attrAppSyncDomainName",
            "  attrHostedZoneId"
        ],
        "prefix": "l1-appsync-domainname",
        "scope": "javascript,typescript"
    },
    "appsync.CfnDomainNameApiAssociation": {
        "body": [
            "new appsync.CfnDomainNameApiAssociation(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  domainName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnDomainNameApiAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnDomainNameApiAssociation",
            "Attributes: ",
            "  attrApiAssociationIdentifier"
        ],
        "prefix": "l1-appsync-domainnameapiassociation",
        "scope": "javascript,typescript"
    },
    "appsync.CfnFunctionConfiguration": {
        "body": [
            "new appsync.CfnFunctionConfiguration(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  dataSourceName: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  functionVersion: \"${5:string}\", // Required",
            "  maxBatchSize: ${6:Number},",
            "  name: \"${7:string}\", // Required",
            "  requestMappingTemplate: \"${8:string}\",",
            "  requestMappingTemplateS3Location: \"${9:string}\",",
            "  responseMappingTemplate: \"${10:string}\",",
            "  responseMappingTemplateS3Location: \"${11:string}\",",
            "  syncConfig: {",
            "    conflictDetection: \"${12:string}\",",
            "    conflictHandler: \"${13:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnFunctionConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnFunctionConfiguration",
            "Attributes: ",
            "  attrFunctionId",
            "  attrFunctionArn",
            "  attrDataSourceName",
            "  attrName"
        ],
        "prefix": "l1-appsync-functionconfiguration",
        "scope": "javascript,typescript"
    },
    "appsync.CfnGraphQLApi": {
        "body": [
            "new appsync.CfnGraphQLApi(this, \"${1:id}\", {",
            "  additionalAuthenticationProviders: {",
            "  },",
            "  authenticationType: \"${3:string}\", // Required",
            "  lambdaAuthorizerConfig: {",
            "    authorizerResultTtlInSeconds: ${4:Number},",
            "    authorizerUri: \"${5:string}\",",
            "    identityValidationExpression: \"${6:string}\",",
            "  },",
            "  logConfig: {",
            "    cloudWatchLogsRoleArn: \"${5:string}\",",
            "    excludeVerboseContent: ${6|false,true|},",
            "    fieldLogLevel: \"${7:string}\",",
            "  },",
            "  name: \"${6:string}\", // Required",
            "  openIDConnectConfig: {",
            "    authTTL: ${7:Number},",
            "    clientId: \"${8:string}\",",
            "    iatTTL: ${9:Number},",
            "    issuer: \"${10:string}\",",
            "  },",
            "  tags: {",
            "  },",
            "  userPoolConfig: {",
            "    appIdClientRegex: \"${9:string}\",",
            "    awsRegion: \"${10:string}\",",
            "    defaultAction: \"${11:string}\",",
            "    userPoolId: \"${12:string}\",",
            "  },",
            "  xrayEnabled: ${10|false,true|},",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnGraphQLApi",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnGraphQLApi",
            "Attributes: ",
            "  attrGraphQLUrl",
            "  attrArn",
            "  attrApiId"
        ],
        "prefix": "l1-appsync-graphqlapi",
        "scope": "javascript,typescript"
    },
    "appsync.CfnGraphQLSchema": {
        "body": [
            "new appsync.CfnGraphQLSchema(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  definition: \"${3:string}\",",
            "  definitionS3Location: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnGraphQLSchema",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnGraphQLSchema"
        ],
        "prefix": "l1-appsync-graphqlschema",
        "scope": "javascript,typescript"
    },
    "appsync.CfnResolver": {
        "body": [
            "new appsync.CfnResolver(this, \"${1:id}\", {",
            "  apiId: \"${2:string}\", // Required",
            "  cachingConfig: {",
            "    cachingKeys: [],",
            "    ttl: ${4:Number},",
            "  },",
            "  dataSourceName: \"${4:string}\",",
            "  fieldName: \"${5:string}\", // Required",
            "  kind: \"${6:string}\",",
            "  maxBatchSize: ${7:Number},",
            "  pipelineConfig: {",
            "    functions: [],",
            "  },",
            "  requestMappingTemplate: \"${9:string}\",",
            "  requestMappingTemplateS3Location: \"${10:string}\",",
            "  responseMappingTemplate: \"${11:string}\",",
            "  responseMappingTemplateS3Location: \"${12:string}\",",
            "  syncConfig: {",
            "    conflictDetection: \"${13:string}\",",
            "    conflictHandler: \"${14:string}\",",
            "  },",
            "  typeName: \"${14:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: appsync.CfnResolver",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-appsync.CfnResolver",
            "Attributes: ",
            "  attrTypeName",
            "  attrResolverArn",
            "  attrFieldName"
        ],
        "prefix": "l1-appsync-resolver",
        "scope": "javascript,typescript"
    },
    "aps.CfnRuleGroupsNamespace": {
        "body": [
            "new aps.CfnRuleGroupsNamespace(this, \"${1:id}\", {",
            "  data: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "  workspace: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: aps.CfnRuleGroupsNamespace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-aps.CfnRuleGroupsNamespace",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-aps-rulegroupsnamespace",
        "scope": "javascript,typescript"
    },
    "aps.CfnWorkspace": {
        "body": [
            "new aps.CfnWorkspace(this, \"${1:id}\", {",
            "  alertManagerDefinition: \"${2:string}\",",
            "  alias: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: aps.CfnWorkspace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-aps.CfnWorkspace",
            "Attributes: ",
            "  attrWorkspaceId",
            "  attrArn",
            "  attrPrometheusEndpoint"
        ],
        "prefix": "l1-aps-workspace",
        "scope": "javascript,typescript"
    },
    "athena.CfnDataCatalog": {
        "body": [
            "new athena.CfnDataCatalog(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  parameters: {",
            "  },",
            "  tags: [],",
            "  type: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: athena.CfnDataCatalog",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-athena.CfnDataCatalog"
        ],
        "prefix": "l1-athena-datacatalog",
        "scope": "javascript,typescript"
    },
    "athena.CfnNamedQuery": {
        "body": [
            "new athena.CfnNamedQuery(this, \"${1:id}\", {",
            "  database: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  queryString: \"${5:string}\", // Required",
            "  workGroup: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: athena.CfnNamedQuery",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-athena.CfnNamedQuery",
            "Attributes: ",
            "  attrNamedQueryId"
        ],
        "prefix": "l1-athena-namedquery",
        "scope": "javascript,typescript"
    },
    "athena.CfnPreparedStatement": {
        "body": [
            "new athena.CfnPreparedStatement(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  queryStatement: \"${3:string}\", // Required",
            "  statementName: \"${4:string}\", // Required",
            "  workGroup: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: athena.CfnPreparedStatement",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-athena.CfnPreparedStatement"
        ],
        "prefix": "l1-athena-preparedstatement",
        "scope": "javascript,typescript"
    },
    "athena.CfnWorkGroup": {
        "body": [
            "new athena.CfnWorkGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  recursiveDeleteOption: ${4|false,true|},",
            "  state: \"${5:string}\",",
            "  tags: [],",
            "  workGroupConfiguration: {",
            "    bytesScannedCutoffPerQuery: ${7:Number},",
            "    enforceWorkGroupConfiguration: ${8|false,true|},",
            "    publishCloudWatchMetricsEnabled: ${10|false,true|},",
            "    requesterPaysEnabled: ${11|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: athena.CfnWorkGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-athena.CfnWorkGroup",
            "Attributes: ",
            "  attrWorkGroupConfiguration.EngineVersion.EffectiveEngineVersion",
            "  attrCreationTime"
        ],
        "prefix": "l1-athena-workgroup",
        "scope": "javascript,typescript"
    },
    "auditmanager.CfnAssessment": {
        "body": [
            "new auditmanager.CfnAssessment(this, \"${1:id}\", {",
            "  assessmentReportsDestination: {",
            "    destination: \"${2:string}\",",
            "    destinationType: \"${3:string}\",",
            "  },",
            "  awsAccount: {",
            "    emailAddress: \"${3:string}\",",
            "    id: \"${4:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "  description: \"${4:string}\",",
            "  frameworkId: \"${5:string}\",",
            "  name: \"${6:string}\",",
            "  roles: [],",
            "  scope: {",
            "    awsAccounts: [],",
            "    awsServices: [],",
            "  },",
            "  status: \"${9:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: auditmanager.CfnAssessment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-auditmanager.CfnAssessment",
            "Attributes: ",
            "  attrAssessmentId",
            "  attrArn",
            "  attrDelegations",
            "  attrCreationTime"
        ],
        "prefix": "l1-auditmanager-assessment",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnAutoScalingGroup": {
        "body": [
            "new autoscaling.CfnAutoScalingGroup(this, \"${1:id}\", {",
            "  autoScalingGroupName: \"${2:string}\",",
            "  availabilityZones: [],",
            "  capacityRebalance: ${4|false,true|},",
            "  context: \"${5:string}\",",
            "  cooldown: \"${6:string}\",",
            "  desiredCapacity: \"${7:string}\",",
            "  desiredCapacityType: \"${8:string}\",",
            "  healthCheckGracePeriod: ${9:Number},",
            "  healthCheckType: \"${10:string}\",",
            "  instanceId: \"${11:string}\",",
            "  launchConfigurationName: \"${12:string}\",",
            "  launchTemplate: {",
            "    launchTemplateId: \"${13:string}\",",
            "    launchTemplateName: \"${14:string}\",",
            "    version: \"${15:string}\",",
            "  },",
            "  lifecycleHookSpecificationList: [],",
            "  loadBalancerNames: [],",
            "  maxInstanceLifetime: ${16:Number},",
            "  maxSize: \"${17:string}\", // Required",
            "  metricsCollection: [],",
            "  minSize: \"${19:string}\", // Required",
            "  mixedInstancesPolicy: {",
            "  },",
            "  newInstancesProtectedFromScaleIn: ${21|false,true|},",
            "  notificationConfigurations: [],",
            "  placementGroup: \"${23:string}\",",
            "  serviceLinkedRoleARN: \"${24:string}\",",
            "  tags: [],",
            "  targetGroupARNs: [],",
            "  terminationPolicies: [],",
            "  vPCZoneIdentifier: [],",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnAutoScalingGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnAutoScalingGroup",
            "Attributes: ",
            "  attrLaunchConfigurationName",
            "  attrLaunchTemplateSpecification",
            "  attrMixedInstancesPolicy",
            "  attrPlacementGroup",
            "  attrVPCZoneIdentifier"
        ],
        "prefix": "l1-autoscaling-autoscalinggroup",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnLaunchConfiguration": {
        "body": [
            "new autoscaling.CfnLaunchConfiguration(this, \"${1:id}\", {",
            "  associatePublicIpAddress: ${2|false,true|},",
            "  blockDeviceMappings: [],",
            "  classicLinkVPCId: \"${4:string}\",",
            "  classicLinkVPCSecurityGroups: [],",
            "  ebsOptimized: ${6|false,true|},",
            "  iamInstanceProfile: \"${7:string}\",",
            "  imageId: \"${8:string}\", // Required",
            "  instanceId: \"${9:string}\",",
            "  instanceMonitoring: ${10|false,true|},",
            "  instanceType: \"${11:string}\", // Required",
            "  kernelId: \"${12:string}\",",
            "  keyName: \"${13:string}\",",
            "  launchConfigurationName: \"${14:string}\",",
            "  metadataOptions: {",
            "    httpEndpoint: \"${15:string}\",",
            "    httpPutResponseHopLimit: ${16:Number},",
            "    httpTokens: \"${17:string}\",",
            "  },",
            "  placementTenancy: \"${16:string}\",",
            "  ramDiskId: \"${17:string}\",",
            "  securityGroups: [],",
            "  spotPrice: \"${19:string}\",",
            "  userData: \"${20:string}\",",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnLaunchConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnLaunchConfiguration"
        ],
        "prefix": "l1-autoscaling-launchconfiguration",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnLifecycleHook": {
        "body": [
            "new autoscaling.CfnLifecycleHook(this, \"${1:id}\", {",
            "  autoScalingGroupName: \"${2:string}\", // Required",
            "  defaultResult: \"${3:string}\",",
            "  heartbeatTimeout: ${4:Number},",
            "  lifecycleHookName: \"${5:string}\",",
            "  lifecycleTransition: \"${6:string}\", // Required",
            "  notificationMetadata: \"${7:string}\",",
            "  notificationTargetARN: \"${8:string}\",",
            "  roleARN: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnLifecycleHook",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnLifecycleHook"
        ],
        "prefix": "l1-autoscaling-lifecyclehook",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnScalingPolicy": {
        "body": [
            "new autoscaling.CfnScalingPolicy(this, \"${1:id}\", {",
            "  adjustmentType: \"${2:string}\",",
            "  autoScalingGroupName: \"${3:string}\", // Required",
            "  cooldown: \"${4:string}\",",
            "  estimatedInstanceWarmup: ${5:Number},",
            "  metricAggregationType: \"${6:string}\",",
            "  minAdjustmentMagnitude: ${7:Number},",
            "  policyType: \"${8:string}\",",
            "  predictiveScalingConfiguration: {",
            "    maxCapacityBreachBehavior: \"${9:string}\",",
            "    maxCapacityBuffer: ${10:Number},",
            "    metricSpecifications: [],",
            "    mode: \"${12:string}\",",
            "    schedulingBufferTime: ${13:Number},",
            "  },",
            "  scalingAdjustment: ${10:Number},",
            "  stepAdjustments: [],",
            "  targetTrackingConfiguration: {",
            "    disableScaleIn: ${13|false,true|},",
            "    targetValue: ${15:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnScalingPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnScalingPolicy"
        ],
        "prefix": "l1-autoscaling-scalingpolicy",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnScheduledAction": {
        "body": [
            "new autoscaling.CfnScheduledAction(this, \"${1:id}\", {",
            "  autoScalingGroupName: \"${2:string}\", // Required",
            "  desiredCapacity: ${3:Number},",
            "  endTime: \"${4:string}\",",
            "  maxSize: ${5:Number},",
            "  minSize: ${6:Number},",
            "  recurrence: \"${7:string}\",",
            "  startTime: \"${8:string}\",",
            "  timeZone: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnScheduledAction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnScheduledAction"
        ],
        "prefix": "l1-autoscaling-scheduledaction",
        "scope": "javascript,typescript"
    },
    "autoscaling.CfnWarmPool": {
        "body": [
            "new autoscaling.CfnWarmPool(this, \"${1:id}\", {",
            "  autoScalingGroupName: \"${2:string}\", // Required",
            "  instanceReusePolicy: {",
            "    reuseOnScaleIn: ${3|false,true|},",
            "  },",
            "  maxGroupPreparedCapacity: ${4:Number},",
            "  minSize: ${5:Number},",
            "  poolState: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: autoscaling.CfnWarmPool",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.CfnWarmPool"
        ],
        "prefix": "l1-autoscaling-warmpool",
        "scope": "javascript,typescript"
    },
    "autoscalingplans.CfnScalingPlan": {
        "body": [
            "new autoscalingplans.CfnScalingPlan(this, \"${1:id}\", {",
            "  applicationSource: {",
            "    cloudFormationStackARN: \"${2:string}\",",
            "    tagFilters: [],",
            "  },",
            "  scalingInstructions: [], // Required",
            "})"
        ],
        "description": [
            "Construct: autoscalingplans.CfnScalingPlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscalingplans.CfnScalingPlan",
            "Attributes: ",
            "  attrScalingPlanName",
            "  attrScalingPlanVersion"
        ],
        "prefix": "l1-autoscalingplans-scalingplan",
        "scope": "javascript,typescript"
    },
    "backup.CfnBackupPlan": {
        "body": [
            "new backup.CfnBackupPlan(this, \"${1:id}\", {",
            "  backupPlan: {",
            "    advancedBackupSettings: [],",
            "    backupPlanName: \"${3:string}\",",
            "    backupPlanRule: [],",
            "  },",
            "  backupPlanTags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: backup.CfnBackupPlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-backup.CfnBackupPlan",
            "Attributes: ",
            "  attrBackupPlanArn",
            "  attrBackupPlanId",
            "  attrVersionId"
        ],
        "prefix": "l1-backup-backupplan",
        "scope": "javascript,typescript"
    },
    "backup.CfnBackupSelection": {
        "body": [
            "new backup.CfnBackupSelection(this, \"${1:id}\", {",
            "  backupPlanId: \"${2:string}\", // Required",
            "  backupSelection: {",
            "    conditions: ${3:JSON},",
            "    iamRoleArn: \"${4:string}\",",
            "    listOfTags: [],",
            "    notResources: [],",
            "    resources: [],",
            "    selectionName: \"${8:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: backup.CfnBackupSelection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-backup.CfnBackupSelection",
            "Attributes: ",
            "  attrId",
            "  attrBackupPlanId",
            "  attrSelectionId"
        ],
        "prefix": "l1-backup-backupselection",
        "scope": "javascript,typescript"
    },
    "backup.CfnBackupVault": {
        "body": [
            "new backup.CfnBackupVault(this, \"${1:id}\", {",
            "  accessPolicy: ${2:JSON},",
            "  backupVaultName: \"${3:string}\", // Required",
            "  backupVaultTags: {",
            "  },",
            "  encryptionKeyArn: \"${5:string}\",",
            "  lockConfiguration: {",
            "    changeableForDays: ${6:Number},",
            "    maxRetentionDays: ${7:Number},",
            "    minRetentionDays: ${8:Number},",
            "  },",
            "  notifications: {",
            "    backupVaultEvents: [],",
            "    sNSTopicArn: \"${8:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: backup.CfnBackupVault",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-backup.CfnBackupVault",
            "Attributes: ",
            "  attrBackupVaultName",
            "  attrBackupVaultArn"
        ],
        "prefix": "l1-backup-backupvault",
        "scope": "javascript,typescript"
    },
    "backup.CfnFramework": {
        "body": [
            "new backup.CfnFramework(this, \"${1:id}\", {",
            "  frameworkControls: [], // Required",
            "  frameworkDescription: \"${3:string}\",",
            "  frameworkName: \"${4:string}\",",
            "  frameworkTags: [],",
            "})"
        ],
        "description": [
            "Construct: backup.CfnFramework",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-backup.CfnFramework",
            "Attributes: ",
            "  attrFrameworkArn",
            "  attrDeploymentStatus",
            "  attrCreationTime",
            "  attrFrameworkStatus"
        ],
        "prefix": "l1-backup-framework",
        "scope": "javascript,typescript"
    },
    "backup.CfnReportPlan": {
        "body": [
            "new backup.CfnReportPlan(this, \"${1:id}\", {",
            "  reportDeliveryChannel: ${2:JSON}, // Required",
            "  reportPlanDescription: \"${3:string}\",",
            "  reportPlanName: \"${4:string}\",",
            "  reportPlanTags: [],",
            "  reportSetting: ${6:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: backup.CfnReportPlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-backup.CfnReportPlan",
            "Attributes: ",
            "  attrReportPlanArn"
        ],
        "prefix": "l1-backup-reportplan",
        "scope": "javascript,typescript"
    },
    "batch.CfnComputeEnvironment": {
        "body": [
            "new batch.CfnComputeEnvironment(this, \"${1:id}\", {",
            "  computeEnvironmentName: \"${2:string}\",",
            "  computeResources: {",
            "    allocationStrategy: \"${3:string}\",",
            "    bidPercentage: ${4:Number},",
            "    desiredvCpus: ${5:Number},",
            "    ec2Configuration: [],",
            "    ec2KeyPair: \"${7:string}\",",
            "    imageId: \"${8:string}\",",
            "    instanceRole: \"${9:string}\",",
            "    instanceTypes: [],",
            "    maxvCpus: ${12:Number},",
            "    minvCpus: ${13:Number},",
            "    placementGroup: \"${14:string}\",",
            "    securityGroupIds: [],",
            "    spotIamFleetRole: \"${16:string}\",",
            "    subnets: [],",
            "    type: \"${19:string}\",",
            "    updateToLatestImageVersion: ${20|false,true|},",
            "  },",
            "  replaceComputeEnvironment: ${4|false,true|},",
            "  serviceRole: \"${5:string}\",",
            "  state: \"${6:string}\",",
            "  tags: {",
            "  },",
            "  type: \"${8:string}\", // Required",
            "  unmanagedvCpus: ${9:Number},",
            "  updatePolicy: {",
            "    jobExecutionTimeoutMinutes: ${10:Number},",
            "    terminateJobsOnUpdate: ${11|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: batch.CfnComputeEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-batch.CfnComputeEnvironment",
            "Attributes: ",
            "  attrComputeEnvironmentArn"
        ],
        "prefix": "l1-batch-computeenvironment",
        "scope": "javascript,typescript"
    },
    "batch.CfnJobDefinition": {
        "body": [
            "new batch.CfnJobDefinition(this, \"${1:id}\", {",
            "  containerProperties: {",
            "    command: [],",
            "    environment: [],",
            "    executionRoleArn: \"${4:string}\",",
            "    image: \"${6:string}\",",
            "    instanceType: \"${7:string}\",",
            "    jobRoleArn: \"${8:string}\",",
            "    memory: ${11:Number},",
            "    mountPoints: [],",
            "    privileged: ${14|false,true|},",
            "    readonlyRootFilesystem: ${15|false,true|},",
            "    resourceRequirements: [],",
            "    secrets: [],",
            "    ulimits: [],",
            "    user: \"${19:string}\",",
            "    vcpus: ${20:Number},",
            "    volumes: [],",
            "  },",
            "  jobDefinitionName: \"${3:string}\",",
            "  nodeProperties: {",
            "    mainNode: ${4:Number},",
            "    nodeRangeProperties: [],",
            "    numNodes: ${6:Number},",
            "  },",
            "  parameters: ${5:JSON},",
            "  platformCapabilities: [],",
            "  propagateTags: ${7|false,true|},",
            "  retryStrategy: {",
            "    attempts: ${8:Number},",
            "    evaluateOnExit: [],",
            "  },",
            "  schedulingPriority: ${9:Number},",
            "  tags: ${10:JSON},",
            "  timeout: {",
            "    attemptDurationSeconds: ${11:Number},",
            "  },",
            "  type: \"${12:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: batch.CfnJobDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-batch.CfnJobDefinition"
        ],
        "prefix": "l1-batch-jobdefinition",
        "scope": "javascript,typescript"
    },
    "batch.CfnJobQueue": {
        "body": [
            "new batch.CfnJobQueue(this, \"${1:id}\", {",
            "  computeEnvironmentOrder: [], // Required",
            "  jobQueueName: \"${3:string}\",",
            "  priority: ${4:Number}, // Required",
            "  schedulingPolicyArn: \"${5:string}\",",
            "  state: \"${6:string}\",",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: batch.CfnJobQueue",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-batch.CfnJobQueue",
            "Attributes: ",
            "  attrJobQueueArn"
        ],
        "prefix": "l1-batch-jobqueue",
        "scope": "javascript,typescript"
    },
    "batch.CfnSchedulingPolicy": {
        "body": [
            "new batch.CfnSchedulingPolicy(this, \"${1:id}\", {",
            "  fairsharePolicy: {",
            "    computeReservation: ${2:Number},",
            "    shareDecaySeconds: ${3:Number},",
            "    shareDistribution: [],",
            "  },",
            "  name: \"${3:string}\",",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: batch.CfnSchedulingPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-batch.CfnSchedulingPolicy",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-batch-schedulingpolicy",
        "scope": "javascript,typescript"
    },
    "billingconductor.CfnBillingGroup": {
        "body": [
            "new billingconductor.CfnBillingGroup(this, \"${1:id}\", {",
            "  accountGrouping: {",
            "    linkedAccountIds: [],",
            "  },",
            "  computationPreference: {",
            "    pricingPlanArn: \"${3:string}\",",
            "  },",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\", // Required",
            "  primaryAccountId: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: billingconductor.CfnBillingGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-billingconductor.CfnBillingGroup",
            "Attributes: ",
            "  attrArn",
            "  attrSize",
            "  attrStatus",
            "  attrStatusReason",
            "  attrCreationTime",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-billingconductor-billinggroup",
        "scope": "javascript,typescript"
    },
    "billingconductor.CfnCustomLineItem": {
        "body": [
            "new billingconductor.CfnCustomLineItem(this, \"${1:id}\", {",
            "  billingGroupArn: \"${2:string}\", // Required",
            "  billingPeriodRange: {",
            "    exclusiveEndBillingPeriod: \"${3:string}\",",
            "    inclusiveStartBillingPeriod: \"${4:string}\",",
            "  },",
            "  customLineItemChargeDetails: {",
            "    type: \"${6:string}\",",
            "  },",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: billingconductor.CfnCustomLineItem",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-billingconductor.CfnCustomLineItem",
            "Attributes: ",
            "  attrArn",
            "  attrCreationTime",
            "  attrLastModifiedTime",
            "  attrAssociationSize",
            "  attrProductCode",
            "  attrCurrencyCode"
        ],
        "prefix": "l1-billingconductor-customlineitem",
        "scope": "javascript,typescript"
    },
    "billingconductor.CfnPricingPlan": {
        "body": [
            "new billingconductor.CfnPricingPlan(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  pricingRuleArns: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: billingconductor.CfnPricingPlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-billingconductor.CfnPricingPlan",
            "Attributes: ",
            "  attrArn",
            "  attrSize",
            "  attrCreationTime",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-billingconductor-pricingplan",
        "scope": "javascript,typescript"
    },
    "billingconductor.CfnPricingRule": {
        "body": [
            "new billingconductor.CfnPricingRule(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  modifierPercentage: ${3:Number}, // Required",
            "  name: \"${4:string}\", // Required",
            "  scope: \"${5:string}\", // Required",
            "  service: \"${6:string}\",",
            "  tags: [],",
            "  type: \"${8:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: billingconductor.CfnPricingRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-billingconductor.CfnPricingRule",
            "Attributes: ",
            "  attrArn",
            "  attrAssociatedPricingPlanCount",
            "  attrCreationTime",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-billingconductor-pricingrule",
        "scope": "javascript,typescript"
    },
    "budgets.CfnBudget": {
        "body": [
            "new budgets.CfnBudget(this, \"${1:id}\", {",
            "  budget: {",
            "    budgetName: \"${3:string}\",",
            "    budgetType: \"${4:string}\",",
            "    costFilters: ${5:JSON},",
            "    plannedBudgetLimits: ${7:JSON},",
            "    timeUnit: \"${9:string}\",",
            "  },",
            "  notificationsWithSubscribers: [],",
            "})"
        ],
        "description": [
            "Construct: budgets.CfnBudget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-budgets.CfnBudget"
        ],
        "prefix": "l1-budgets-budget",
        "scope": "javascript,typescript"
    },
    "budgets.CfnBudgetsAction": {
        "body": [
            "new budgets.CfnBudgetsAction(this, \"${1:id}\", {",
            "  actionThreshold: {",
            "    type: \"${2:string}\",",
            "    value: ${3:Number},",
            "  },",
            "  actionType: \"${3:string}\", // Required",
            "  approvalModel: \"${4:string}\",",
            "  budgetName: \"${5:string}\", // Required",
            "  definition: {",
            "  },",
            "  executionRoleArn: \"${7:string}\", // Required",
            "  notificationType: \"${8:string}\", // Required",
            "  subscribers: [], // Required",
            "})"
        ],
        "description": [
            "Construct: budgets.CfnBudgetsAction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-budgets.CfnBudgetsAction",
            "Attributes: ",
            "  attrActionId"
        ],
        "prefix": "l1-budgets-budgetsaction",
        "scope": "javascript,typescript"
    },
    "cassandra.CfnKeyspace": {
        "body": [
            "new cassandra.CfnKeyspace(this, \"${1:id}\", {",
            "  keyspaceName: \"${2:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: cassandra.CfnKeyspace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cassandra.CfnKeyspace"
        ],
        "prefix": "l1-cassandra-keyspace",
        "scope": "javascript,typescript"
    },
    "cassandra.CfnTable": {
        "body": [
            "new cassandra.CfnTable(this, \"${1:id}\", {",
            "  billingMode: {",
            "    mode: \"${2:string}\",",
            "  },",
            "  clusteringKeyColumns: [],",
            "  defaultTimeToLive: ${4:Number},",
            "  encryptionSpecification: {",
            "    encryptionType: \"${5:string}\",",
            "    kmsKeyIdentifier: \"${6:string}\",",
            "  },",
            "  keyspaceName: \"${6:string}\", // Required",
            "  partitionKeyColumns: [], // Required",
            "  pointInTimeRecoveryEnabled: ${8|false,true|},",
            "  regularColumns: [],",
            "  tableName: \"${10:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: cassandra.CfnTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cassandra.CfnTable"
        ],
        "prefix": "l1-cassandra-table",
        "scope": "javascript,typescript"
    },
    "ce.CfnAnomalyMonitor": {
        "body": [
            "new ce.CfnAnomalyMonitor(this, \"${1:id}\", {",
            "  monitorDimension: \"${2:string}\",",
            "  monitorName: \"${3:string}\", // Required",
            "  monitorSpecification: \"${4:string}\",",
            "  monitorType: \"${5:string}\", // Required",
            "  resourceTags: [],",
            "})"
        ],
        "description": [
            "Construct: ce.CfnAnomalyMonitor",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ce.CfnAnomalyMonitor",
            "Attributes: ",
            "  attrMonitorArn",
            "  attrCreationDate",
            "  attrLastEvaluatedDate",
            "  attrLastUpdatedDate",
            "  attrDimensionalValueCount"
        ],
        "prefix": "l1-ce-anomalymonitor",
        "scope": "javascript,typescript"
    },
    "ce.CfnAnomalySubscription": {
        "body": [
            "new ce.CfnAnomalySubscription(this, \"${1:id}\", {",
            "  frequency: \"${2:string}\", // Required",
            "  monitorArnList: [], // Required",
            "  resourceTags: [],",
            "  subscribers: [], // Required",
            "  subscriptionName: \"${6:string}\", // Required",
            "  threshold: ${7:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: ce.CfnAnomalySubscription",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ce.CfnAnomalySubscription",
            "Attributes: ",
            "  attrSubscriptionArn",
            "  attrAccountId"
        ],
        "prefix": "l1-ce-anomalysubscription",
        "scope": "javascript,typescript"
    },
    "ce.CfnCostCategory": {
        "body": [
            "new ce.CfnCostCategory(this, \"${1:id}\", {",
            "  defaultValue: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  ruleVersion: \"${4:string}\", // Required",
            "  rules: \"${5:string}\", // Required",
            "  splitChargeRules: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: ce.CfnCostCategory",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ce.CfnCostCategory",
            "Attributes: ",
            "  attrArn",
            "  attrEffectiveStart"
        ],
        "prefix": "l1-ce-costcategory",
        "scope": "javascript,typescript"
    },
    "certificatemanager.CfnAccount": {
        "body": [
            "new certificatemanager.CfnAccount(this, \"${1:id}\", {",
            "  expiryEventsConfiguration: {",
            "    daysBeforeExpiry: ${2:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: certificatemanager.CfnAccount",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-certificatemanager.CfnAccount",
            "Attributes: ",
            "  attrAccountId"
        ],
        "prefix": "l1-certificatemanager-account",
        "scope": "javascript,typescript"
    },
    "certificatemanager.CfnCertificate": {
        "body": [
            "new certificatemanager.CfnCertificate(this, \"${1:id}\", {",
            "  certificateAuthorityArn: \"${2:string}\",",
            "  certificateTransparencyLoggingPreference: \"${3:string}\",",
            "  domainName: \"${4:string}\", // Required",
            "  domainValidationOptions: [],",
            "  subjectAlternativeNames: [],",
            "  tags: [],",
            "  validationMethod: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: certificatemanager.CfnCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-certificatemanager.CfnCertificate"
        ],
        "prefix": "l1-certificatemanager-certificate",
        "scope": "javascript,typescript"
    },
    "chatbot.CfnSlackChannelConfiguration": {
        "body": [
            "new chatbot.CfnSlackChannelConfiguration(this, \"${1:id}\", {",
            "  configurationName: \"${2:string}\", // Required",
            "  guardrailPolicies: [],",
            "  iamRoleArn: \"${4:string}\", // Required",
            "  loggingLevel: \"${5:string}\",",
            "  slackChannelId: \"${6:string}\", // Required",
            "  slackWorkspaceId: \"${7:string}\", // Required",
            "  snsTopicArns: [],",
            "  userRoleRequired: ${9|false,true|},",
            "})"
        ],
        "description": [
            "Construct: chatbot.CfnSlackChannelConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-chatbot.CfnSlackChannelConfiguration",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-chatbot-slackchannelconfiguration",
        "scope": "javascript,typescript"
    },
    "cloud9.CfnEnvironmentEC2": {
        "body": [
            "new cloud9.CfnEnvironmentEC2(this, \"${1:id}\", {",
            "  automaticStopTimeMinutes: ${2:Number},",
            "  connectionType: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  imageId: \"${5:string}\",",
            "  instanceType: \"${6:string}\", // Required",
            "  name: \"${7:string}\",",
            "  ownerArn: \"${8:string}\",",
            "  repositories: [],",
            "  subnetId: \"${10:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: cloud9.CfnEnvironmentEC2",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloud9.CfnEnvironmentEC2",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-cloud9-environmentec2",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnCustomResource": {
        "body": [
            "new cloudformation.CfnCustomResource(this, \"${1:id}\", {",
            "  serviceToken: \"${2:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnCustomResource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnCustomResource"
        ],
        "prefix": "l1-cloudformation-customresource",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnHookDefaultVersion": {
        "body": [
            "new cloudformation.CfnHookDefaultVersion(this, \"${1:id}\", {",
            "  typeName: \"${2:string}\",",
            "  typeVersionArn: \"${3:string}\",",
            "  versionId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnHookDefaultVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnHookDefaultVersion",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudformation-hookdefaultversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnHookTypeConfig": {
        "body": [
            "new cloudformation.CfnHookTypeConfig(this, \"${1:id}\", {",
            "  configuration: \"${2:string}\", // Required",
            "  configurationAlias: \"${3:string}\",",
            "  typeArn: \"${4:string}\",",
            "  typeName: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnHookTypeConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnHookTypeConfig",
            "Attributes: ",
            "  attrConfigurationArn"
        ],
        "prefix": "l1-cloudformation-hooktypeconfig",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnHookVersion": {
        "body": [
            "new cloudformation.CfnHookVersion(this, \"${1:id}\", {",
            "  executionRoleArn: \"${2:string}\",",
            "  loggingConfig: {",
            "    logGroupName: \"${3:string}\",",
            "    logRoleArn: \"${4:string}\",",
            "  },",
            "  schemaHandlerPackage: \"${4:string}\", // Required",
            "  typeName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnHookVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnHookVersion",
            "Attributes: ",
            "  attrArn",
            "  attrTypeArn",
            "  attrIsDefaultVersion",
            "  attrVersionId",
            "  attrVisibility"
        ],
        "prefix": "l1-cloudformation-hookversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnMacro": {
        "body": [
            "new cloudformation.CfnMacro(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  functionName: \"${3:string}\", // Required",
            "  logGroupName: \"${4:string}\",",
            "  logRoleARN: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnMacro",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnMacro"
        ],
        "prefix": "l1-cloudformation-macro",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnModuleDefaultVersion": {
        "body": [
            "new cloudformation.CfnModuleDefaultVersion(this, \"${1:id}\", {",
            "  arn: \"${2:string}\",",
            "  moduleName: \"${3:string}\",",
            "  versionId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnModuleDefaultVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnModuleDefaultVersion"
        ],
        "prefix": "l1-cloudformation-moduledefaultversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnModuleVersion": {
        "body": [
            "new cloudformation.CfnModuleVersion(this, \"${1:id}\", {",
            "  moduleName: \"${2:string}\", // Required",
            "  modulePackage: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnModuleVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnModuleVersion",
            "Attributes: ",
            "  attrArn",
            "  attrDescription",
            "  attrDocumentationUrl",
            "  attrIsDefaultVersion",
            "  attrSchema",
            "  attrTimeCreated",
            "  attrVersionId",
            "  attrVisibility"
        ],
        "prefix": "l1-cloudformation-moduleversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnPublicTypeVersion": {
        "body": [
            "new cloudformation.CfnPublicTypeVersion(this, \"${1:id}\", {",
            "  arn: \"${2:string}\",",
            "  logDeliveryBucket: \"${3:string}\",",
            "  publicVersionNumber: \"${4:string}\",",
            "  type: \"${5:string}\",",
            "  typeName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnPublicTypeVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnPublicTypeVersion",
            "Attributes: ",
            "  attrTypeVersionArn",
            "  attrPublisherId",
            "  attrPublicTypeArn"
        ],
        "prefix": "l1-cloudformation-publictypeversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnPublisher": {
        "body": [
            "new cloudformation.CfnPublisher(this, \"${1:id}\", {",
            "  acceptTermsAndConditions: ${2|false,true|}, // Required",
            "  connectionArn: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnPublisher",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnPublisher",
            "Attributes: ",
            "  attrPublisherId",
            "  attrPublisherStatus",
            "  attrPublisherProfile",
            "  attrIdentityProvider"
        ],
        "prefix": "l1-cloudformation-publisher",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnResourceDefaultVersion": {
        "body": [
            "new cloudformation.CfnResourceDefaultVersion(this, \"${1:id}\", {",
            "  typeName: \"${2:string}\",",
            "  typeVersionArn: \"${3:string}\",",
            "  versionId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnResourceDefaultVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnResourceDefaultVersion",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudformation-resourcedefaultversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnResourceVersion": {
        "body": [
            "new cloudformation.CfnResourceVersion(this, \"${1:id}\", {",
            "  executionRoleArn: \"${2:string}\",",
            "  loggingConfig: {",
            "    logGroupName: \"${3:string}\",",
            "    logRoleArn: \"${4:string}\",",
            "  },",
            "  schemaHandlerPackage: \"${4:string}\", // Required",
            "  typeName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnResourceVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnResourceVersion",
            "Attributes: ",
            "  attrArn",
            "  attrTypeArn",
            "  attrIsDefaultVersion",
            "  attrProvisioningType",
            "  attrVersionId",
            "  attrVisibility"
        ],
        "prefix": "l1-cloudformation-resourceversion",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnStack": {
        "body": [
            "new cloudformation.CfnStack(this, \"${1:id}\", {",
            "  notificationARNs: [],",
            "  parameters: {",
            "  },",
            "  tags: [],",
            "  templateURL: \"${5:string}\", // Required",
            "  timeoutInMinutes: ${6:Number},",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnStack",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnStack"
        ],
        "prefix": "l1-cloudformation-stack",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnStackSet": {
        "body": [
            "new cloudformation.CfnStackSet(this, \"${1:id}\", {",
            "  administrationRoleARN: \"${2:string}\",",
            "  autoDeployment: {",
            "    enabled: ${3|false,true|},",
            "    retainStacksOnAccountRemoval: ${4|false,true|},",
            "  },",
            "  callAs: \"${4:string}\",",
            "  capabilities: [],",
            "  description: \"${6:string}\",",
            "  executionRoleName: \"${7:string}\",",
            "  managedExecution: ${8:JSON},",
            "  operationPreferences: {",
            "    failureToleranceCount: ${9:Number},",
            "    failureTolerancePercentage: ${10:Number},",
            "    maxConcurrentCount: ${11:Number},",
            "    maxConcurrentPercentage: ${12:Number},",
            "    regionConcurrencyType: \"${13:string}\",",
            "    regionOrder: [],",
            "  },",
            "  parameters: [],",
            "  permissionModel: \"${11:string}\", // Required",
            "  stackInstancesGroup: [],",
            "  stackSetName: \"${13:string}\", // Required",
            "  tags: [],",
            "  templateBody: \"${15:string}\",",
            "  templateURL: \"${16:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnStackSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnStackSet",
            "Attributes: ",
            "  attrStackSetId"
        ],
        "prefix": "l1-cloudformation-stackset",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnTypeActivation": {
        "body": [
            "new cloudformation.CfnTypeActivation(this, \"${1:id}\", {",
            "  autoUpdate: ${2|false,true|},",
            "  executionRoleArn: \"${3:string}\",",
            "  loggingConfig: {",
            "    logGroupName: \"${4:string}\",",
            "    logRoleArn: \"${5:string}\",",
            "  },",
            "  majorVersion: \"${5:string}\",",
            "  publicTypeArn: \"${6:string}\",",
            "  publisherId: \"${7:string}\",",
            "  type: \"${8:string}\",",
            "  typeName: \"${9:string}\",",
            "  typeNameAlias: \"${10:string}\",",
            "  versionBump: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnTypeActivation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnTypeActivation",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudformation-typeactivation",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnWaitCondition": {
        "body": [
            "new cloudformation.CfnWaitCondition(this, \"${1:id}\", {",
            "  count: ${2:Number},",
            "  handle: \"${3:string}\",",
            "  timeout: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnWaitCondition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnWaitCondition",
            "Attributes: ",
            "  attrData"
        ],
        "prefix": "l1-cloudformation-waitcondition",
        "scope": "javascript,typescript"
    },
    "cloudformation.CfnWaitConditionHandle": {
        "body": [
            "})"
        ],
        "description": [
            "Construct: cloudformation.CfnWaitConditionHandle",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudformation.CfnWaitConditionHandle"
        ],
        "prefix": "l1-cloudformation-waitconditionhandle",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnCachePolicy": {
        "body": [
            "new cloudfront.CfnCachePolicy(this, \"${1:id}\", {",
            "  cachePolicyConfig: {",
            "    comment: \"${2:string}\",",
            "    defaultTTL: ${3:Number},",
            "    maxTTL: ${4:Number},",
            "    minTTL: ${5:Number},",
            "    name: \"${6:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnCachePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnCachePolicy",
            "Attributes: ",
            "  attrId",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-cloudfront-cachepolicy",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnCloudFrontOriginAccessIdentity": {
        "body": [
            "new cloudfront.CfnCloudFrontOriginAccessIdentity(this, \"${1:id}\", {",
            "  cloudFrontOriginAccessIdentityConfig: {",
            "    comment: \"${2:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnCloudFrontOriginAccessIdentity",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnCloudFrontOriginAccessIdentity",
            "Attributes: ",
            "  attrId",
            "  attrS3CanonicalUserId"
        ],
        "prefix": "l1-cloudfront-cloudfrontoriginaccessidentity",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnDistribution": {
        "body": [
            "new cloudfront.CfnDistribution(this, \"${1:id}\", {",
            "  distributionConfig: {",
            "    aliases: [],",
            "    cNAMEs: [],",
            "    cacheBehaviors: [],",
            "    comment: \"${5:string}\",",
            "    customErrorResponses: [],",
            "    defaultRootObject: \"${9:string}\",",
            "    enabled: ${10|false,true|},",
            "    httpVersion: \"${11:string}\",",
            "    iPV6Enabled: ${12|false,true|},",
            "    origins: [],",
            "    priceClass: \"${16:string}\",",
            "    webACLId: \"${20:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnDistribution",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnDistribution",
            "Attributes: ",
            "  attrDomainName",
            "  attrId"
        ],
        "prefix": "l1-cloudfront-distribution",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnFunction": {
        "body": [
            "new cloudfront.CfnFunction(this, \"${1:id}\", {",
            "  autoPublish: ${2|false,true|},",
            "  functionCode: \"${3:string}\",",
            "  functionConfig: {",
            "    comment: \"${4:string}\",",
            "    runtime: \"${5:string}\",",
            "  },",
            "  name: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnFunction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnFunction",
            "Attributes: ",
            "  attrFunctionARN",
            "  attrFunctionMetadata.FunctionARN",
            "  attrStage"
        ],
        "prefix": "l1-cloudfront-function",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnKeyGroup": {
        "body": [
            "new cloudfront.CfnKeyGroup(this, \"${1:id}\", {",
            "  keyGroupConfig: {",
            "    comment: \"${2:string}\",",
            "    items: [],",
            "    name: \"${4:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnKeyGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnKeyGroup",
            "Attributes: ",
            "  attrId",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-cloudfront-keygroup",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnOriginRequestPolicy": {
        "body": [
            "new cloudfront.CfnOriginRequestPolicy(this, \"${1:id}\", {",
            "  originRequestPolicyConfig: {",
            "    comment: \"${2:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnOriginRequestPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnOriginRequestPolicy",
            "Attributes: ",
            "  attrId",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-cloudfront-originrequestpolicy",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnPublicKey": {
        "body": [
            "new cloudfront.CfnPublicKey(this, \"${1:id}\", {",
            "  publicKeyConfig: {",
            "    callerReference: \"${2:string}\",",
            "    comment: \"${3:string}\",",
            "    encodedKey: \"${4:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnPublicKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnPublicKey",
            "Attributes: ",
            "  attrCreatedTime",
            "  attrId"
        ],
        "prefix": "l1-cloudfront-publickey",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnRealtimeLogConfig": {
        "body": [
            "new cloudfront.CfnRealtimeLogConfig(this, \"${1:id}\", {",
            "  endPoints: [], // Required",
            "  fields: [], // Required",
            "  name: \"${4:string}\", // Required",
            "  samplingRate: ${5:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnRealtimeLogConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnRealtimeLogConfig",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudfront-realtimelogconfig",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnResponseHeadersPolicy": {
        "body": [
            "new cloudfront.CfnResponseHeadersPolicy(this, \"${1:id}\", {",
            "  responseHeadersPolicyConfig: {",
            "    comment: \"${2:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnResponseHeadersPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnResponseHeadersPolicy",
            "Attributes: ",
            "  attrId",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-cloudfront-responseheaderspolicy",
        "scope": "javascript,typescript"
    },
    "cloudfront.CfnStreamingDistribution": {
        "body": [
            "new cloudfront.CfnStreamingDistribution(this, \"${1:id}\", {",
            "  streamingDistributionConfig: {",
            "    aliases: [],",
            "    comment: \"${3:string}\",",
            "    enabled: ${4|false,true|},",
            "    priceClass: \"${6:string}\",",
            "  },",
            "  tags: [], // Required",
            "})"
        ],
        "description": [
            "Construct: cloudfront.CfnStreamingDistribution",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudfront.CfnStreamingDistribution",
            "Attributes: ",
            "  attrDomainName"
        ],
        "prefix": "l1-cloudfront-streamingdistribution",
        "scope": "javascript,typescript"
    },
    "cloudtrail.CfnTrail": {
        "body": [
            "new cloudtrail.CfnTrail(this, \"${1:id}\", {",
            "  cloudWatchLogsLogGroupArn: \"${2:string}\",",
            "  cloudWatchLogsRoleArn: \"${3:string}\",",
            "  enableLogFileValidation: ${4|false,true|},",
            "  eventSelectors: [],",
            "  includeGlobalServiceEvents: ${6|false,true|},",
            "  insightSelectors: [],",
            "  isLogging: ${8|false,true|}, // Required",
            "  isMultiRegionTrail: ${9|false,true|},",
            "  isOrganizationTrail: ${10|false,true|},",
            "  kMSKeyId: \"${11:string}\",",
            "  s3BucketName: \"${12:string}\", // Required",
            "  s3KeyPrefix: \"${13:string}\",",
            "  snsTopicName: \"${14:string}\",",
            "  tags: [],",
            "  trailName: \"${16:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudtrail.CfnTrail",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudtrail.CfnTrail",
            "Attributes: ",
            "  attrArn",
            "  attrSnsTopicArn"
        ],
        "prefix": "l1-cloudtrail-trail",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnAlarm": {
        "body": [
            "new cloudwatch.CfnAlarm(this, \"${1:id}\", {",
            "  actionsEnabled: ${2|false,true|},",
            "  alarmActions: [],",
            "  alarmDescription: \"${4:string}\",",
            "  alarmName: \"${5:string}\",",
            "  comparisonOperator: \"${6:string}\", // Required",
            "  datapointsToAlarm: ${7:Number},",
            "  dimensions: [],",
            "  evaluateLowSampleCountPercentile: \"${9:string}\",",
            "  evaluationPeriods: ${10:Number}, // Required",
            "  extendedStatistic: \"${11:string}\",",
            "  insufficientDataActions: [],",
            "  metricName: \"${13:string}\",",
            "  metrics: [],",
            "  namespace: \"${15:string}\",",
            "  oKActions: [],",
            "  period: ${17:Number},",
            "  statistic: \"${18:string}\",",
            "  threshold: ${19:Number},",
            "  thresholdMetricId: \"${20:string}\",",
            "  treatMissingData: \"${21:string}\",",
            "  unit: \"${22:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnAlarm",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnAlarm",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudwatch-alarm",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnAnomalyDetector": {
        "body": [
            "new cloudwatch.CfnAnomalyDetector(this, \"${1:id}\", {",
            "  configuration: {",
            "    excludedTimeRanges: [],",
            "    metricTimeZone: \"${3:string}\",",
            "  },",
            "  dimensions: [],",
            "  metricMathAnomalyDetector: {",
            "    metricDataQueries: [],",
            "  },",
            "  metricName: \"${5:string}\",",
            "  namespace: \"${6:string}\",",
            "  singleMetricAnomalyDetector: {",
            "    dimensions: [],",
            "    metricName: \"${8:string}\",",
            "    namespace: \"${9:string}\",",
            "    stat: \"${10:string}\",",
            "  },",
            "  stat: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnAnomalyDetector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnAnomalyDetector"
        ],
        "prefix": "l1-cloudwatch-anomalydetector",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnCompositeAlarm": {
        "body": [
            "new cloudwatch.CfnCompositeAlarm(this, \"${1:id}\", {",
            "  actionsEnabled: ${2|false,true|},",
            "  alarmActions: [],",
            "  alarmDescription: \"${4:string}\",",
            "  alarmName: \"${5:string}\", // Required",
            "  alarmRule: \"${6:string}\", // Required",
            "  insufficientDataActions: [],",
            "  oKActions: [],",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnCompositeAlarm",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnCompositeAlarm",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-cloudwatch-compositealarm",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnDashboard": {
        "body": [
            "new cloudwatch.CfnDashboard(this, \"${1:id}\", {",
            "  dashboardBody: \"${2:string}\", // Required",
            "  dashboardName: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnDashboard",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnDashboard"
        ],
        "prefix": "l1-cloudwatch-dashboard",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnInsightRule": {
        "body": [
            "new cloudwatch.CfnInsightRule(this, \"${1:id}\", {",
            "  ruleBody: \"${2:string}\", // Required",
            "  ruleName: \"${3:string}\", // Required",
            "  ruleState: \"${4:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnInsightRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnInsightRule",
            "Attributes: ",
            "  attrArn",
            "  attrRuleName"
        ],
        "prefix": "l1-cloudwatch-insightrule",
        "scope": "javascript,typescript"
    },
    "cloudwatch.CfnMetricStream": {
        "body": [
            "new cloudwatch.CfnMetricStream(this, \"${1:id}\", {",
            "  excludeFilters: [],",
            "  firehoseArn: \"${3:string}\", // Required",
            "  includeFilters: [],",
            "  name: \"${5:string}\",",
            "  outputFormat: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\", // Required",
            "  statisticsConfigurations: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: cloudwatch.CfnMetricStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cloudwatch.CfnMetricStream",
            "Attributes: ",
            "  attrArn",
            "  attrCreationDate",
            "  attrLastUpdateDate",
            "  attrState"
        ],
        "prefix": "l1-cloudwatch-metricstream",
        "scope": "javascript,typescript"
    },
    "codeartifact.CfnDomain": {
        "body": [
            "new codeartifact.CfnDomain(this, \"${1:id}\", {",
            "  domainName: \"${2:string}\", // Required",
            "  encryptionKey: \"${3:string}\",",
            "  permissionsPolicyDocument: ${4:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: codeartifact.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codeartifact.CfnDomain",
            "Attributes: ",
            "  attrName",
            "  attrOwner",
            "  attrEncryptionKey",
            "  attrArn"
        ],
        "prefix": "l1-codeartifact-domain",
        "scope": "javascript,typescript"
    },
    "codeartifact.CfnRepository": {
        "body": [
            "new codeartifact.CfnRepository(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  domainName: \"${3:string}\", // Required",
            "  domainOwner: \"${4:string}\",",
            "  externalConnections: [],",
            "  permissionsPolicyDocument: ${6:JSON},",
            "  repositoryName: \"${7:string}\", // Required",
            "  tags: [],",
            "  upstreams: [],",
            "})"
        ],
        "description": [
            "Construct: codeartifact.CfnRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codeartifact.CfnRepository",
            "Attributes: ",
            "  attrName",
            "  attrDomainName",
            "  attrDomainOwner",
            "  attrArn"
        ],
        "prefix": "l1-codeartifact-repository",
        "scope": "javascript,typescript"
    },
    "codebuild.CfnProject": {
        "body": [
            "new codebuild.CfnProject(this, \"${1:id}\", {",
            "  artifacts: {",
            "    artifactIdentifier: \"${2:string}\",",
            "    encryptionDisabled: ${3|false,true|},",
            "    location: \"${4:string}\",",
            "    name: \"${5:string}\",",
            "    namespaceType: \"${6:string}\",",
            "    overrideArtifactName: ${7|false,true|},",
            "    packaging: \"${8:string}\",",
            "    path: \"${9:string}\",",
            "    type: \"${10:string}\",",
            "  },",
            "  badgeEnabled: ${3|false,true|},",
            "  buildBatchConfig: {",
            "    batchReportMode: \"${4:string}\",",
            "    combineArtifacts: ${5|false,true|},",
            "    serviceRole: \"${7:string}\",",
            "    timeoutInMins: ${8:Number},",
            "  },",
            "  cache: {",
            "    location: \"${5:string}\",",
            "    modes: [],",
            "    type: \"${7:string}\",",
            "  },",
            "  concurrentBuildLimit: ${6:Number},",
            "  description: \"${7:string}\",",
            "  encryptionKey: \"${8:string}\",",
            "  environment: {",
            "    certificate: \"${9:string}\",",
            "    computeType: \"${10:string}\",",
            "    environmentVariables: [],",
            "    image: \"${12:string}\",",
            "    imagePullCredentialsType: \"${13:string}\",",
            "    privilegedMode: ${14|false,true|},",
            "    type: \"${16:string}\",",
            "  },",
            "  fileSystemLocations: [],",
            "  logsConfig: {",
            "  },",
            "  name: \"${12:string}\",",
            "  queuedTimeoutInMinutes: ${13:Number},",
            "  resourceAccessRole: \"${14:string}\",",
            "  secondaryArtifacts: [],",
            "  secondarySourceVersions: [],",
            "  secondarySources: [],",
            "  serviceRole: \"${18:string}\", // Required",
            "  source: {",
            "    buildSpec: \"${20:string}\",",
            "    gitCloneDepth: ${22:Number},",
            "    insecureSsl: ${24|false,true|},",
            "    location: \"${25:string}\",",
            "    reportBuildStatus: ${26|false,true|},",
            "    sourceIdentifier: \"${27:string}\",",
            "    type: \"${28:string}\",",
            "  },",
            "  sourceVersion: \"${20:string}\",",
            "  tags: [],",
            "  timeoutInMinutes: ${22:Number},",
            "  triggers: {",
            "    buildType: \"${23:string}\",",
            "    filterGroups: [],",
            "    webhook: ${25|false,true|},",
            "  },",
            "  visibility: \"${24:string}\",",
            "  vpcConfig: {",
            "    securityGroupIds: [],",
            "    subnets: [],",
            "    vpcId: \"${27:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: codebuild.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codebuild.CfnProject",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-codebuild-project",
        "scope": "javascript,typescript"
    },
    "codebuild.CfnReportGroup": {
        "body": [
            "new codebuild.CfnReportGroup(this, \"${1:id}\", {",
            "  deleteReports: ${2|false,true|},",
            "  exportConfig: {",
            "    exportConfigType: \"${3:string}\",",
            "  },",
            "  name: \"${4:string}\",",
            "  tags: [],",
            "  type: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: codebuild.CfnReportGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codebuild.CfnReportGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-codebuild-reportgroup",
        "scope": "javascript,typescript"
    },
    "codebuild.CfnSourceCredential": {
        "body": [
            "new codebuild.CfnSourceCredential(this, \"${1:id}\", {",
            "  authType: \"${2:string}\", // Required",
            "  serverType: \"${3:string}\", // Required",
            "  token: \"${4:string}\", // Required",
            "  username: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: codebuild.CfnSourceCredential",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codebuild.CfnSourceCredential"
        ],
        "prefix": "l1-codebuild-sourcecredential",
        "scope": "javascript,typescript"
    },
    "codecommit.CfnRepository": {
        "body": [
            "new codecommit.CfnRepository(this, \"${1:id}\", {",
            "  code: {",
            "    branchName: \"${2:string}\",",
            "  },",
            "  repositoryDescription: \"${3:string}\",",
            "  repositoryName: \"${4:string}\", // Required",
            "  tags: [],",
            "  triggers: [],",
            "})"
        ],
        "description": [
            "Construct: codecommit.CfnRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codecommit.CfnRepository",
            "Attributes: ",
            "  attrCloneUrlHttp",
            "  attrCloneUrlSsh",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-codecommit-repository",
        "scope": "javascript,typescript"
    },
    "codedeploy.CfnApplication": {
        "body": [
            "new codedeploy.CfnApplication(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\",",
            "  computePlatform: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: codedeploy.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codedeploy.CfnApplication"
        ],
        "prefix": "l1-codedeploy-application",
        "scope": "javascript,typescript"
    },
    "codedeploy.CfnDeploymentConfig": {
        "body": [
            "new codedeploy.CfnDeploymentConfig(this, \"${1:id}\", {",
            "  computePlatform: \"${2:string}\",",
            "  deploymentConfigName: \"${3:string}\",",
            "  minimumHealthyHosts: {",
            "    type: \"${4:string}\",",
            "    value: ${5:Number},",
            "  },",
            "  trafficRoutingConfig: {",
            "    type: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: codedeploy.CfnDeploymentConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codedeploy.CfnDeploymentConfig"
        ],
        "prefix": "l1-codedeploy-deploymentconfig",
        "scope": "javascript,typescript"
    },
    "codedeploy.CfnDeploymentGroup": {
        "body": [
            "new codedeploy.CfnDeploymentGroup(this, \"${1:id}\", {",
            "  alarmConfiguration: {",
            "    alarms: [],",
            "    enabled: ${3|false,true|},",
            "    ignorePollAlarmFailure: ${4|false,true|},",
            "  },",
            "  applicationName: \"${3:string}\", // Required",
            "  autoRollbackConfiguration: {",
            "    enabled: ${4|false,true|},",
            "    events: [],",
            "  },",
            "  autoScalingGroups: [],",
            "  blueGreenDeploymentConfiguration: {",
            "  },",
            "  deployment: {",
            "    description: \"${7:string}\",",
            "    ignoreApplicationStopFailures: ${8|false,true|},",
            "  },",
            "  deploymentConfigName: \"${8:string}\",",
            "  deploymentGroupName: \"${9:string}\",",
            "  deploymentStyle: {",
            "    deploymentOption: \"${10:string}\",",
            "    deploymentType: \"${11:string}\",",
            "  },",
            "  eCSServices: [],",
            "  ec2TagFilters: [],",
            "  ec2TagSet: {",
            "    ec2TagSetList: [],",
            "  },",
            "  loadBalancerInfo: {",
            "    elbInfoList: [],",
            "    targetGroupInfoList: [],",
            "    targetGroupPairInfoList: [],",
            "  },",
            "  onPremisesInstanceTagFilters: [],",
            "  onPremisesTagSet: {",
            "    onPremisesTagSetList: [],",
            "  },",
            "  outdatedInstancesStrategy: \"${17:string}\",",
            "  serviceRoleArn: \"${18:string}\", // Required",
            "  tags: [],",
            "  triggerConfigurations: [],",
            "})"
        ],
        "description": [
            "Construct: codedeploy.CfnDeploymentGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codedeploy.CfnDeploymentGroup"
        ],
        "prefix": "l1-codedeploy-deploymentgroup",
        "scope": "javascript,typescript"
    },
    "codeguruprofiler.CfnProfilingGroup": {
        "body": [
            "new codeguruprofiler.CfnProfilingGroup(this, \"${1:id}\", {",
            "  agentPermissions: ${2:JSON},",
            "  anomalyDetectionNotificationConfiguration: [],",
            "  computePlatform: \"${4:string}\",",
            "  profilingGroupName: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: codeguruprofiler.CfnProfilingGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codeguruprofiler.CfnProfilingGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-codeguruprofiler-profilinggroup",
        "scope": "javascript,typescript"
    },
    "codegurureviewer.CfnRepositoryAssociation": {
        "body": [
            "new codegurureviewer.CfnRepositoryAssociation(this, \"${1:id}\", {",
            "  bucketName: \"${2:string}\",",
            "  connectionArn: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  owner: \"${5:string}\",",
            "  tags: [],",
            "  type: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: codegurureviewer.CfnRepositoryAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codegurureviewer.CfnRepositoryAssociation",
            "Attributes: ",
            "  attrAssociationArn"
        ],
        "prefix": "l1-codegurureviewer-repositoryassociation",
        "scope": "javascript,typescript"
    },
    "codepipeline.CfnCustomActionType": {
        "body": [
            "new codepipeline.CfnCustomActionType(this, \"${1:id}\", {",
            "  category: \"${2:string}\", // Required",
            "  configurationProperties: [],",
            "  inputArtifactDetails: {",
            "    maximumCount: ${4:Number},",
            "    minimumCount: ${5:Number},",
            "  },",
            "  outputArtifactDetails: {",
            "    maximumCount: ${5:Number},",
            "    minimumCount: ${6:Number},",
            "  },",
            "  provider: \"${6:string}\", // Required",
            "  settings: {",
            "    entityUrlTemplate: \"${7:string}\",",
            "    executionUrlTemplate: \"${8:string}\",",
            "    revisionUrlTemplate: \"${9:string}\",",
            "    thirdPartyConfigurationUrl: \"${10:string}\",",
            "  },",
            "  tags: [],",
            "  version: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: codepipeline.CfnCustomActionType",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codepipeline.CfnCustomActionType"
        ],
        "prefix": "l1-codepipeline-customactiontype",
        "scope": "javascript,typescript"
    },
    "codepipeline.CfnPipeline": {
        "body": [
            "new codepipeline.CfnPipeline(this, \"${1:id}\", {",
            "  artifactStore: {",
            "    location: \"${3:string}\",",
            "    type: \"${4:string}\",",
            "  },",
            "  artifactStores: [],",
            "  disableInboundStageTransitions: [],",
            "  name: \"${5:string}\",",
            "  restartExecutionOnUpdate: ${6|false,true|},",
            "  roleArn: \"${7:string}\", // Required",
            "  stages: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: codepipeline.CfnPipeline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codepipeline.CfnPipeline",
            "Attributes: ",
            "  attrVersion"
        ],
        "prefix": "l1-codepipeline-pipeline",
        "scope": "javascript,typescript"
    },
    "codepipeline.CfnWebhook": {
        "body": [
            "new codepipeline.CfnWebhook(this, \"${1:id}\", {",
            "  authentication: \"${2:string}\", // Required",
            "  authenticationConfiguration: {",
            "    allowedIPRange: \"${3:string}\",",
            "    secretToken: \"${4:string}\",",
            "  },",
            "  filters: [], // Required",
            "  name: \"${5:string}\",",
            "  registerWithThirdParty: ${6|false,true|},",
            "  targetAction: \"${7:string}\", // Required",
            "  targetPipeline: \"${8:string}\", // Required",
            "  targetPipelineVersion: ${9:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: codepipeline.CfnWebhook",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codepipeline.CfnWebhook",
            "Attributes: ",
            "  attrUrl"
        ],
        "prefix": "l1-codepipeline-webhook",
        "scope": "javascript,typescript"
    },
    "codestar.CfnGitHubRepository": {
        "body": [
            "new codestar.CfnGitHubRepository(this, \"${1:id}\", {",
            "  code: {",
            "  },",
            "  connectionArn: \"${3:string}\",",
            "  enableIssues: ${4|false,true|},",
            "  isPrivate: ${5|false,true|},",
            "  repositoryAccessToken: \"${6:string}\",",
            "  repositoryDescription: \"${7:string}\",",
            "  repositoryName: \"${8:string}\", // Required",
            "  repositoryOwner: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: codestar.CfnGitHubRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codestar.CfnGitHubRepository"
        ],
        "prefix": "l1-codestar-githubrepository",
        "scope": "javascript,typescript"
    },
    "codestarconnections.CfnConnection": {
        "body": [
            "new codestarconnections.CfnConnection(this, \"${1:id}\", {",
            "  connectionName: \"${2:string}\", // Required",
            "  hostArn: \"${3:string}\",",
            "  providerType: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: codestarconnections.CfnConnection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codestarconnections.CfnConnection",
            "Attributes: ",
            "  attrConnectionArn",
            "  attrConnectionStatus",
            "  attrOwnerAccountId"
        ],
        "prefix": "l1-codestarconnections-connection",
        "scope": "javascript,typescript"
    },
    "codestarnotifications.CfnNotificationRule": {
        "body": [
            "new codestarnotifications.CfnNotificationRule(this, \"${1:id}\", {",
            "  createdBy: \"${2:string}\",",
            "  detailType: \"${3:string}\", // Required",
            "  eventTypeId: \"${4:string}\",",
            "  eventTypeIds: [], // Required",
            "  name: \"${6:string}\", // Required",
            "  resource: \"${7:string}\", // Required",
            "  status: \"${8:string}\",",
            "  tags: ${9:JSON},",
            "  targetAddress: \"${10:string}\",",
            "  targets: [], // Required",
            "})"
        ],
        "description": [
            "Construct: codestarnotifications.CfnNotificationRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codestarnotifications.CfnNotificationRule",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-codestarnotifications-notificationrule",
        "scope": "javascript,typescript"
    },
    "cognito.CfnIdentityPool": {
        "body": [
            "new cognito.CfnIdentityPool(this, \"${1:id}\", {",
            "  allowClassicFlow: ${2|false,true|},",
            "  allowUnauthenticatedIdentities: ${3|false,true|}, // Required",
            "  cognitoEvents: ${4:JSON},",
            "  cognitoIdentityProviders: [],",
            "  cognitoStreams: {",
            "    roleArn: \"${6:string}\",",
            "    streamName: \"${7:string}\",",
            "    streamingStatus: \"${8:string}\",",
            "  },",
            "  developerProviderName: \"${7:string}\",",
            "  identityPoolName: \"${8:string}\",",
            "  openIdConnectProviderARNs: [],",
            "  pushSync: {",
            "    applicationArns: [],",
            "    roleArn: \"${11:string}\",",
            "  },",
            "  samlProviderARNs: [],",
            "  supportedLoginProviders: ${12:JSON},",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnIdentityPool",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnIdentityPool",
            "Attributes: ",
            "  attrName"
        ],
        "prefix": "l1-cognito-identitypool",
        "scope": "javascript,typescript"
    },
    "cognito.CfnIdentityPoolRoleAttachment": {
        "body": [
            "new cognito.CfnIdentityPoolRoleAttachment(this, \"${1:id}\", {",
            "  identityPoolId: \"${2:string}\", // Required",
            "  roleMappings: ${3:JSON},",
            "  roles: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnIdentityPoolRoleAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnIdentityPoolRoleAttachment"
        ],
        "prefix": "l1-cognito-identitypoolroleattachment",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPool": {
        "body": [
            "new cognito.CfnUserPool(this, \"${1:id}\", {",
            "  accountRecoverySetting: {",
            "    recoveryMechanisms: [],",
            "  },",
            "  adminCreateUserConfig: {",
            "    allowAdminCreateUserOnly: ${3|false,true|},",
            "    unusedAccountValidityDays: ${5:Number},",
            "  },",
            "  aliasAttributes: [],",
            "  autoVerifiedAttributes: [],",
            "  deviceConfiguration: {",
            "    challengeRequiredOnNewDevice: ${6|false,true|},",
            "    deviceOnlyRememberedOnUserPrompt: ${7|false,true|},",
            "  },",
            "  emailConfiguration: {",
            "    configurationSet: \"${7:string}\",",
            "    emailSendingAccount: \"${8:string}\",",
            "    from: \"${9:string}\",",
            "    replyToEmailAddress: \"${10:string}\",",
            "    sourceArn: \"${11:string}\",",
            "  },",
            "  emailVerificationMessage: \"${8:string}\",",
            "  emailVerificationSubject: \"${9:string}\",",
            "  enabledMfas: [],",
            "  lambdaConfig: {",
            "    createAuthChallenge: \"${11:string}\",",
            "    customMessage: \"${13:string}\",",
            "    defineAuthChallenge: \"${15:string}\",",
            "    kMSKeyID: \"${16:string}\",",
            "    postAuthentication: \"${17:string}\",",
            "    postConfirmation: \"${18:string}\",",
            "    preAuthentication: \"${19:string}\",",
            "    preSignUp: \"${20:string}\",",
            "    preTokenGeneration: \"${21:string}\",",
            "    userMigration: \"${22:string}\",",
            "    verifyAuthChallengeResponse: \"${23:string}\",",
            "  },",
            "  mfaConfiguration: \"${12:string}\",",
            "  policies: {",
            "  },",
            "  schema: [],",
            "  smsAuthenticationMessage: \"${15:string}\",",
            "  smsConfiguration: {",
            "    externalId: \"${16:string}\",",
            "    snsCallerArn: \"${17:string}\",",
            "    snsRegion: \"${18:string}\",",
            "  },",
            "  smsVerificationMessage: \"${17:string}\",",
            "  userPoolAddOns: {",
            "    advancedSecurityMode: \"${18:string}\",",
            "  },",
            "  userPoolName: \"${19:string}\",",
            "  userPoolTags: ${20:JSON},",
            "  usernameAttributes: [],",
            "  usernameConfiguration: {",
            "    caseSensitive: ${22|false,true|},",
            "  },",
            "  verificationMessageTemplate: {",
            "    defaultEmailOption: \"${23:string}\",",
            "    emailMessage: \"${24:string}\",",
            "    emailMessageByLink: \"${25:string}\",",
            "    emailSubject: \"${26:string}\",",
            "    emailSubjectByLink: \"${27:string}\",",
            "    smsMessage: \"${28:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPool",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPool",
            "Attributes: ",
            "  attrProviderName",
            "  attrProviderURL",
            "  attrArn"
        ],
        "prefix": "l1-cognito-userpool",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolClient": {
        "body": [
            "new cognito.CfnUserPoolClient(this, \"${1:id}\", {",
            "  accessTokenValidity: ${2:Number},",
            "  allowedOAuthFlows: [],",
            "  allowedOAuthFlowsUserPoolClient: ${4|false,true|},",
            "  allowedOAuthScopes: [],",
            "  analyticsConfiguration: {",
            "    applicationArn: \"${6:string}\",",
            "    applicationId: \"${7:string}\",",
            "    externalId: \"${8:string}\",",
            "    roleArn: \"${9:string}\",",
            "    userDataShared: ${10|false,true|},",
            "  },",
            "  callbackURLs: [],",
            "  clientName: \"${8:string}\",",
            "  defaultRedirectURI: \"${9:string}\",",
            "  enableTokenRevocation: ${10|false,true|},",
            "  explicitAuthFlows: [],",
            "  generateSecret: ${12|false,true|},",
            "  idTokenValidity: ${13:Number},",
            "  logoutURLs: [],",
            "  preventUserExistenceErrors: \"${15:string}\",",
            "  readAttributes: [],",
            "  refreshTokenValidity: ${17:Number},",
            "  supportedIdentityProviders: [],",
            "  tokenValidityUnits: {",
            "    accessToken: \"${19:string}\",",
            "    idToken: \"${20:string}\",",
            "    refreshToken: \"${21:string}\",",
            "  },",
            "  userPoolId: \"${20:string}\", // Required",
            "  writeAttributes: [],",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolClient",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolClient",
            "Attributes: ",
            "  attrClientSecret",
            "  attrName"
        ],
        "prefix": "l1-cognito-userpoolclient",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolDomain": {
        "body": [
            "new cognito.CfnUserPoolDomain(this, \"${1:id}\", {",
            "  customDomainConfig: {",
            "    certificateArn: \"${2:string}\",",
            "  },",
            "  domain: \"${3:string}\", // Required",
            "  userPoolId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolDomain"
        ],
        "prefix": "l1-cognito-userpooldomain",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolGroup": {
        "body": [
            "new cognito.CfnUserPoolGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  groupName: \"${3:string}\",",
            "  precedence: ${4:Number},",
            "  roleArn: \"${5:string}\",",
            "  userPoolId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolGroup"
        ],
        "prefix": "l1-cognito-userpoolgroup",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolIdentityProvider": {
        "body": [
            "new cognito.CfnUserPoolIdentityProvider(this, \"${1:id}\", {",
            "  attributeMapping: ${2:JSON},",
            "  idpIdentifiers: [],",
            "  providerDetails: ${4:JSON},",
            "  providerName: \"${5:string}\", // Required",
            "  providerType: \"${6:string}\", // Required",
            "  userPoolId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolIdentityProvider",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolIdentityProvider"
        ],
        "prefix": "l1-cognito-userpoolidentityprovider",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolResourceServer": {
        "body": [
            "new cognito.CfnUserPoolResourceServer(this, \"${1:id}\", {",
            "  identifier: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  scopes: [],",
            "  userPoolId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolResourceServer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolResourceServer"
        ],
        "prefix": "l1-cognito-userpoolresourceserver",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolRiskConfigurationAttachment": {
        "body": [
            "new cognito.CfnUserPoolRiskConfigurationAttachment(this, \"${1:id}\", {",
            "  accountTakeoverRiskConfiguration: {",
            "  },",
            "  clientId: \"${3:string}\", // Required",
            "  compromisedCredentialsRiskConfiguration: {",
            "    eventFilter: [],",
            "  },",
            "  riskExceptionConfiguration: {",
            "    blockedIPRangeList: [],",
            "    skippedIPRangeList: [],",
            "  },",
            "  userPoolId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolRiskConfigurationAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolRiskConfigurationAttachment"
        ],
        "prefix": "l1-cognito-userpoolriskconfigurationattachment",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolUICustomizationAttachment": {
        "body": [
            "new cognito.CfnUserPoolUICustomizationAttachment(this, \"${1:id}\", {",
            "  cSS: \"${2:string}\",",
            "  clientId: \"${3:string}\", // Required",
            "  userPoolId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolUICustomizationAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolUICustomizationAttachment"
        ],
        "prefix": "l1-cognito-userpooluicustomizationattachment",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolUser": {
        "body": [
            "new cognito.CfnUserPoolUser(this, \"${1:id}\", {",
            "  clientMetadata: ${2:JSON},",
            "  desiredDeliveryMediums: [],",
            "  forceAliasCreation: ${4|false,true|},",
            "  messageAction: \"${5:string}\",",
            "  userAttributes: [],",
            "  userPoolId: \"${7:string}\", // Required",
            "  username: \"${8:string}\",",
            "  validationData: [],",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolUser"
        ],
        "prefix": "l1-cognito-userpooluser",
        "scope": "javascript,typescript"
    },
    "cognito.CfnUserPoolUserToGroupAttachment": {
        "body": [
            "new cognito.CfnUserPoolUserToGroupAttachment(this, \"${1:id}\", {",
            "  groupName: \"${2:string}\", // Required",
            "  userPoolId: \"${3:string}\", // Required",
            "  username: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cognito.CfnUserPoolUserToGroupAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cognito.CfnUserPoolUserToGroupAttachment"
        ],
        "prefix": "l1-cognito-userpoolusertogroupattachment",
        "scope": "javascript,typescript"
    },
    "config.CfnAggregationAuthorization": {
        "body": [
            "new config.CfnAggregationAuthorization(this, \"${1:id}\", {",
            "  authorizedAccountId: \"${2:string}\", // Required",
            "  authorizedAwsRegion: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: config.CfnAggregationAuthorization",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnAggregationAuthorization",
            "Attributes: ",
            "  attrAggregationAuthorizationArn"
        ],
        "prefix": "l1-config-aggregationauthorization",
        "scope": "javascript,typescript"
    },
    "config.CfnConfigRule": {
        "body": [
            "new config.CfnConfigRule(this, \"${1:id}\", {",
            "  configRuleName: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  inputParameters: ${4:JSON},",
            "  maximumExecutionFrequency: \"${5:string}\",",
            "  scope: {",
            "    complianceResourceId: \"${6:string}\",",
            "    complianceResourceTypes: [],",
            "    tagKey: \"${8:string}\",",
            "    tagValue: \"${9:string}\",",
            "  },",
            "  source: {",
            "    owner: \"${7:string}\",",
            "    sourceDetails: [],",
            "    sourceIdentifier: \"${9:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: config.CfnConfigRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnConfigRule",
            "Attributes: ",
            "  attrArn",
            "  attrCompliance.Type",
            "  attrConfigRuleId"
        ],
        "prefix": "l1-config-configrule",
        "scope": "javascript,typescript"
    },
    "config.CfnConfigurationAggregator": {
        "body": [
            "new config.CfnConfigurationAggregator(this, \"${1:id}\", {",
            "  accountAggregationSources: [],",
            "  configurationAggregatorName: \"${3:string}\",",
            "  organizationAggregationSource: {",
            "    allAwsRegions: ${4|false,true|},",
            "    awsRegions: [],",
            "    roleArn: \"${6:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: config.CfnConfigurationAggregator",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnConfigurationAggregator",
            "Attributes: ",
            "  attrConfigurationAggregatorArn"
        ],
        "prefix": "l1-config-configurationaggregator",
        "scope": "javascript,typescript"
    },
    "config.CfnConfigurationRecorder": {
        "body": [
            "new config.CfnConfigurationRecorder(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  recordingGroup: {",
            "    allSupported: ${3|false,true|},",
            "    includeGlobalResourceTypes: ${4|false,true|},",
            "    resourceTypes: [],",
            "  },",
            "  roleARN: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: config.CfnConfigurationRecorder",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnConfigurationRecorder"
        ],
        "prefix": "l1-config-configurationrecorder",
        "scope": "javascript,typescript"
    },
    "config.CfnConformancePack": {
        "body": [
            "new config.CfnConformancePack(this, \"${1:id}\", {",
            "  conformancePackInputParameters: [],",
            "  conformancePackName: \"${3:string}\", // Required",
            "  deliveryS3Bucket: \"${4:string}\",",
            "  deliveryS3KeyPrefix: \"${5:string}\",",
            "  templateBody: \"${6:string}\",",
            "  templateS3Uri: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: config.CfnConformancePack",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnConformancePack"
        ],
        "prefix": "l1-config-conformancepack",
        "scope": "javascript,typescript"
    },
    "config.CfnDeliveryChannel": {
        "body": [
            "new config.CfnDeliveryChannel(this, \"${1:id}\", {",
            "  configSnapshotDeliveryProperties: {",
            "    deliveryFrequency: \"${2:string}\",",
            "  },",
            "  name: \"${3:string}\",",
            "  s3BucketName: \"${4:string}\", // Required",
            "  s3KeyPrefix: \"${5:string}\",",
            "  s3KmsKeyArn: \"${6:string}\",",
            "  snsTopicARN: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: config.CfnDeliveryChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnDeliveryChannel"
        ],
        "prefix": "l1-config-deliverychannel",
        "scope": "javascript,typescript"
    },
    "config.CfnOrganizationConfigRule": {
        "body": [
            "new config.CfnOrganizationConfigRule(this, \"${1:id}\", {",
            "  excludedAccounts: [],",
            "  organizationConfigRuleName: \"${3:string}\", // Required",
            "  organizationCustomCodeRuleMetadata: {",
            "    codeText: \"${4:string}\",",
            "    debugLogDeliveryAccounts: [],",
            "    description: \"${6:string}\",",
            "    inputParameters: \"${7:string}\",",
            "    maximumExecutionFrequency: \"${8:string}\",",
            "    organizationConfigRuleTriggerTypes: [],",
            "    resourceIdScope: \"${10:string}\",",
            "    resourceTypesScope: [],",
            "    runtime: \"${12:string}\",",
            "    tagKeyScope: \"${13:string}\",",
            "    tagValueScope: \"${14:string}\",",
            "  },",
            "  organizationCustomRuleMetadata: {",
            "    description: \"${5:string}\",",
            "    inputParameters: \"${6:string}\",",
            "    lambdaFunctionArn: \"${7:string}\",",
            "    maximumExecutionFrequency: \"${8:string}\",",
            "    organizationConfigRuleTriggerTypes: [],",
            "    resourceIdScope: \"${10:string}\",",
            "    resourceTypesScope: [],",
            "    tagKeyScope: \"${12:string}\",",
            "    tagValueScope: \"${13:string}\",",
            "  },",
            "  organizationManagedRuleMetadata: {",
            "    description: \"${6:string}\",",
            "    inputParameters: \"${7:string}\",",
            "    maximumExecutionFrequency: \"${8:string}\",",
            "    resourceIdScope: \"${9:string}\",",
            "    resourceTypesScope: [],",
            "    ruleIdentifier: \"${11:string}\",",
            "    tagKeyScope: \"${12:string}\",",
            "    tagValueScope: \"${13:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: config.CfnOrganizationConfigRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnOrganizationConfigRule"
        ],
        "prefix": "l1-config-organizationconfigrule",
        "scope": "javascript,typescript"
    },
    "config.CfnOrganizationConformancePack": {
        "body": [
            "new config.CfnOrganizationConformancePack(this, \"${1:id}\", {",
            "  conformancePackInputParameters: [],",
            "  deliveryS3Bucket: \"${3:string}\",",
            "  deliveryS3KeyPrefix: \"${4:string}\",",
            "  excludedAccounts: [],",
            "  organizationConformancePackName: \"${6:string}\", // Required",
            "  templateBody: \"${7:string}\",",
            "  templateS3Uri: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: config.CfnOrganizationConformancePack",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnOrganizationConformancePack"
        ],
        "prefix": "l1-config-organizationconformancepack",
        "scope": "javascript,typescript"
    },
    "config.CfnRemediationConfiguration": {
        "body": [
            "new config.CfnRemediationConfiguration(this, \"${1:id}\", {",
            "  automatic: ${2|false,true|},",
            "  configRuleName: \"${3:string}\", // Required",
            "  executionControls: {",
            "  },",
            "  maximumAutomaticAttempts: ${5:Number},",
            "  parameters: ${6:JSON},",
            "  resourceType: \"${7:string}\",",
            "  retryAttemptSeconds: ${8:Number},",
            "  targetId: \"${9:string}\", // Required",
            "  targetType: \"${10:string}\", // Required",
            "  targetVersion: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: config.CfnRemediationConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnRemediationConfiguration"
        ],
        "prefix": "l1-config-remediationconfiguration",
        "scope": "javascript,typescript"
    },
    "config.CfnStoredQuery": {
        "body": [
            "new config.CfnStoredQuery(this, \"${1:id}\", {",
            "  queryDescription: \"${2:string}\",",
            "  queryExpression: \"${3:string}\", // Required",
            "  queryName: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: config.CfnStoredQuery",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-config.CfnStoredQuery",
            "Attributes: ",
            "  attrQueryArn",
            "  attrQueryId"
        ],
        "prefix": "l1-config-storedquery",
        "scope": "javascript,typescript"
    },
    "connect.CfnContactFlow": {
        "body": [
            "new connect.CfnContactFlow(this, \"${1:id}\", {",
            "  content: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  instanceArn: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  state: \"${6:string}\",",
            "  tags: [],",
            "  type: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: connect.CfnContactFlow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnContactFlow",
            "Attributes: ",
            "  attrContactFlowArn"
        ],
        "prefix": "l1-connect-contactflow",
        "scope": "javascript,typescript"
    },
    "connect.CfnContactFlowModule": {
        "body": [
            "new connect.CfnContactFlowModule(this, \"${1:id}\", {",
            "  content: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  instanceArn: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  state: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: connect.CfnContactFlowModule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnContactFlowModule",
            "Attributes: ",
            "  attrContactFlowModuleArn",
            "  attrStatus"
        ],
        "prefix": "l1-connect-contactflowmodule",
        "scope": "javascript,typescript"
    },
    "connect.CfnHoursOfOperation": {
        "body": [
            "new connect.CfnHoursOfOperation(this, \"${1:id}\", {",
            "  config: [], // Required",
            "  description: \"${3:string}\",",
            "  instanceArn: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "  timeZone: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: connect.CfnHoursOfOperation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnHoursOfOperation",
            "Attributes: ",
            "  attrHoursOfOperationArn"
        ],
        "prefix": "l1-connect-hoursofoperation",
        "scope": "javascript,typescript"
    },
    "connect.CfnPhoneNumber": {
        "body": [
            "new connect.CfnPhoneNumber(this, \"${1:id}\", {",
            "  countryCode: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  prefix: \"${4:string}\",",
            "  tags: [],",
            "  targetArn: \"${6:string}\", // Required",
            "  type: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: connect.CfnPhoneNumber",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnPhoneNumber",
            "Attributes: ",
            "  attrPhoneNumberArn",
            "  attrAddress"
        ],
        "prefix": "l1-connect-phonenumber",
        "scope": "javascript,typescript"
    },
    "connect.CfnQuickConnect": {
        "body": [
            "new connect.CfnQuickConnect(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  instanceArn: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  quickConnectConfig: {",
            "    quickConnectType: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: connect.CfnQuickConnect",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnQuickConnect",
            "Attributes: ",
            "  attrQuickConnectArn"
        ],
        "prefix": "l1-connect-quickconnect",
        "scope": "javascript,typescript"
    },
    "connect.CfnUser": {
        "body": [
            "new connect.CfnUser(this, \"${1:id}\", {",
            "  directoryUserId: \"${2:string}\",",
            "  hierarchyGroupArn: \"${3:string}\",",
            "  identityInfo: {",
            "    email: \"${4:string}\",",
            "    firstName: \"${5:string}\",",
            "    lastName: \"${6:string}\",",
            "  },",
            "  instanceArn: \"${5:string}\", // Required",
            "  password: \"${6:string}\",",
            "  phoneConfig: {",
            "    afterContactWorkTimeLimit: ${7:Number},",
            "    autoAccept: ${8|false,true|},",
            "    deskPhoneNumber: \"${9:string}\",",
            "    phoneType: \"${10:string}\",",
            "  },",
            "  routingProfileArn: \"${8:string}\", // Required",
            "  securityProfileArns: [], // Required",
            "  tags: [],",
            "  username: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: connect.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnUser",
            "Attributes: ",
            "  attrUserArn"
        ],
        "prefix": "l1-connect-user",
        "scope": "javascript,typescript"
    },
    "connect.CfnUserHierarchyGroup": {
        "body": [
            "new connect.CfnUserHierarchyGroup(this, \"${1:id}\", {",
            "  instanceArn: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  parentGroupArn: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: connect.CfnUserHierarchyGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-connect.CfnUserHierarchyGroup",
            "Attributes: ",
            "  attrUserHierarchyGroupArn"
        ],
        "prefix": "l1-connect-userhierarchygroup",
        "scope": "javascript,typescript"
    },
    "cur.CfnReportDefinition": {
        "body": [
            "new cur.CfnReportDefinition(this, \"${1:id}\", {",
            "  additionalArtifacts: [],",
            "  additionalSchemaElements: [],",
            "  billingViewArn: \"${4:string}\",",
            "  compression: \"${5:string}\", // Required",
            "  format: \"${6:string}\", // Required",
            "  refreshClosedReports: ${7|false,true|}, // Required",
            "  reportName: \"${8:string}\", // Required",
            "  reportVersioning: \"${9:string}\", // Required",
            "  s3Bucket: \"${10:string}\", // Required",
            "  s3Prefix: \"${11:string}\", // Required",
            "  s3Region: \"${12:string}\", // Required",
            "  timeUnit: \"${13:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: cur.CfnReportDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-cur.CfnReportDefinition"
        ],
        "prefix": "l1-cur-reportdefinition",
        "scope": "javascript,typescript"
    },
    "customerprofiles.CfnDomain": {
        "body": [
            "new customerprofiles.CfnDomain(this, \"${1:id}\", {",
            "  deadLetterQueueUrl: \"${2:string}\",",
            "  defaultEncryptionKey: \"${3:string}\",",
            "  defaultExpirationDays: ${4:Number},",
            "  domainName: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: customerprofiles.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-customerprofiles.CfnDomain",
            "Attributes: ",
            "  attrCreatedAt",
            "  attrLastUpdatedAt"
        ],
        "prefix": "l1-customerprofiles-domain",
        "scope": "javascript,typescript"
    },
    "customerprofiles.CfnIntegration": {
        "body": [
            "new customerprofiles.CfnIntegration(this, \"${1:id}\", {",
            "  domainName: \"${2:string}\", // Required",
            "  flowDefinition: {",
            "    description: \"${3:string}\",",
            "    flowName: \"${4:string}\",",
            "    kmsArn: \"${5:string}\",",
            "    tasks: [],",
            "  },",
            "  objectTypeName: \"${4:string}\",",
            "  objectTypeNames: [],",
            "  tags: [],",
            "  uri: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: customerprofiles.CfnIntegration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-customerprofiles.CfnIntegration",
            "Attributes: ",
            "  attrCreatedAt",
            "  attrLastUpdatedAt"
        ],
        "prefix": "l1-customerprofiles-integration",
        "scope": "javascript,typescript"
    },
    "customerprofiles.CfnObjectType": {
        "body": [
            "new customerprofiles.CfnObjectType(this, \"${1:id}\", {",
            "  allowProfileCreation: ${2|false,true|},",
            "  description: \"${3:string}\",",
            "  domainName: \"${4:string}\", // Required",
            "  encryptionKey: \"${5:string}\",",
            "  expirationDays: ${6:Number},",
            "  fields: [],",
            "  keys: [],",
            "  objectTypeName: \"${9:string}\",",
            "  tags: [],",
            "  templateId: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: customerprofiles.CfnObjectType",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-customerprofiles.CfnObjectType",
            "Attributes: ",
            "  attrCreatedAt",
            "  attrLastUpdatedAt"
        ],
        "prefix": "l1-customerprofiles-objecttype",
        "scope": "javascript,typescript"
    },
    "databrew.CfnDataset": {
        "body": [
            "new databrew.CfnDataset(this, \"${1:id}\", {",
            "  format: \"${2:string}\",",
            "  formatOptions: {",
            "  },",
            "  input: {",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  pathOptions: {",
            "    parameters: [],",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnDataset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnDataset"
        ],
        "prefix": "l1-databrew-dataset",
        "scope": "javascript,typescript"
    },
    "databrew.CfnJob": {
        "body": [
            "new databrew.CfnJob(this, \"${1:id}\", {",
            "  dataCatalogOutputs: [],",
            "  databaseOutputs: [],",
            "  datasetName: \"${4:string}\",",
            "  encryptionKeyArn: \"${5:string}\",",
            "  encryptionMode: \"${6:string}\",",
            "  jobSample: {",
            "    mode: \"${7:string}\",",
            "    size: ${8:Number},",
            "  },",
            "  logSubscription: \"${8:string}\",",
            "  maxCapacity: ${9:Number},",
            "  maxRetries: ${10:Number},",
            "  name: \"${11:string}\", // Required",
            "  outputLocation: {",
            "    bucket: \"${12:string}\",",
            "    bucketOwner: \"${13:string}\",",
            "    key: \"${14:string}\",",
            "  },",
            "  outputs: [],",
            "  profileConfiguration: {",
            "    columnStatisticsConfigurations: [],",
            "    profileColumns: [],",
            "  },",
            "  projectName: \"${15:string}\",",
            "  recipe: {",
            "    name: \"${16:string}\",",
            "    version: \"${17:string}\",",
            "  },",
            "  roleArn: \"${17:string}\", // Required",
            "  tags: [],",
            "  timeout: ${19:Number},",
            "  type: \"${20:string}\", // Required",
            "  validationConfigurations: [],",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnJob",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnJob"
        ],
        "prefix": "l1-databrew-job",
        "scope": "javascript,typescript"
    },
    "databrew.CfnProject": {
        "body": [
            "new databrew.CfnProject(this, \"${1:id}\", {",
            "  datasetName: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  recipeName: \"${4:string}\", // Required",
            "  roleArn: \"${5:string}\", // Required",
            "  sample: {",
            "    size: ${6:Number},",
            "    type: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnProject"
        ],
        "prefix": "l1-databrew-project",
        "scope": "javascript,typescript"
    },
    "databrew.CfnRecipe": {
        "body": [
            "new databrew.CfnRecipe(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  steps: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnRecipe",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnRecipe"
        ],
        "prefix": "l1-databrew-recipe",
        "scope": "javascript,typescript"
    },
    "databrew.CfnRuleset": {
        "body": [
            "new databrew.CfnRuleset(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  rules: [], // Required",
            "  tags: [],",
            "  targetArn: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnRuleset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnRuleset"
        ],
        "prefix": "l1-databrew-ruleset",
        "scope": "javascript,typescript"
    },
    "databrew.CfnSchedule": {
        "body": [
            "new databrew.CfnSchedule(this, \"${1:id}\", {",
            "  cronExpression: \"${2:string}\", // Required",
            "  jobNames: [],",
            "  name: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: databrew.CfnSchedule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-databrew.CfnSchedule"
        ],
        "prefix": "l1-databrew-schedule",
        "scope": "javascript,typescript"
    },
    "datapipeline.CfnPipeline": {
        "body": [
            "new datapipeline.CfnPipeline(this, \"${1:id}\", {",
            "  activate: ${2|false,true|},",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  parameterObjects: [], // Required",
            "  parameterValues: [],",
            "  pipelineObjects: [],",
            "  pipelineTags: [],",
            "})"
        ],
        "description": [
            "Construct: datapipeline.CfnPipeline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datapipeline.CfnPipeline"
        ],
        "prefix": "l1-datapipeline-pipeline",
        "scope": "javascript,typescript"
    },
    "datasync.CfnAgent": {
        "body": [
            "new datasync.CfnAgent(this, \"${1:id}\", {",
            "  activationKey: \"${2:string}\", // Required",
            "  agentName: \"${3:string}\",",
            "  securityGroupArns: [],",
            "  subnetArns: [],",
            "  tags: [],",
            "  vpcEndpointId: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnAgent",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnAgent",
            "Attributes: ",
            "  attrEndpointType",
            "  attrAgentArn"
        ],
        "prefix": "l1-datasync-agent",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationEFS": {
        "body": [
            "new datasync.CfnLocationEFS(this, \"${1:id}\", {",
            "  ec2Config: {",
            "    securityGroupArns: [],",
            "    subnetArn: \"${3:string}\",",
            "  },",
            "  efsFilesystemArn: \"${3:string}\", // Required",
            "  subdirectory: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationEFS",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationEFS",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationefs",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationFSxLustre": {
        "body": [
            "new datasync.CfnLocationFSxLustre(this, \"${1:id}\", {",
            "  fsxFilesystemArn: \"${2:string}\", // Required",
            "  securityGroupArns: [], // Required",
            "  subdirectory: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationFSxLustre",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationFSxLustre",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationfsxlustre",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationFSxOpenZFS": {
        "body": [
            "new datasync.CfnLocationFSxOpenZFS(this, \"${1:id}\", {",
            "  fsxFilesystemArn: \"${2:string}\", // Required",
            "  protocol: {",
            "  },",
            "  securityGroupArns: [], // Required",
            "  subdirectory: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationFSxOpenZFS",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationFSxOpenZFS",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationfsxopenzfs",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationFSxWindows": {
        "body": [
            "new datasync.CfnLocationFSxWindows(this, \"${1:id}\", {",
            "  domain: \"${2:string}\",",
            "  fsxFilesystemArn: \"${3:string}\", // Required",
            "  password: \"${4:string}\", // Required",
            "  securityGroupArns: [], // Required",
            "  subdirectory: \"${6:string}\",",
            "  tags: [],",
            "  user: \"${8:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationFSxWindows",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationFSxWindows",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationfsxwindows",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationHDFS": {
        "body": [
            "new datasync.CfnLocationHDFS(this, \"${1:id}\", {",
            "  agentArns: [], // Required",
            "  authenticationType: \"${3:string}\", // Required",
            "  blockSize: ${4:Number},",
            "  kerberosKeytab: \"${5:string}\",",
            "  kerberosKrb5Conf: \"${6:string}\",",
            "  kerberosPrincipal: \"${7:string}\",",
            "  kmsKeyProviderUri: \"${8:string}\",",
            "  nameNodes: [], // Required",
            "  qopConfiguration: {",
            "    dataTransferProtection: \"${10:string}\",",
            "    rpcProtection: \"${11:string}\",",
            "  },",
            "  replicationFactor: ${11:Number},",
            "  simpleUser: \"${12:string}\",",
            "  subdirectory: \"${13:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationHDFS",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationHDFS",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationhdfs",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationNFS": {
        "body": [
            "new datasync.CfnLocationNFS(this, \"${1:id}\", {",
            "  mountOptions: {",
            "    version: \"${2:string}\",",
            "  },",
            "  onPremConfig: {",
            "    agentArns: [],",
            "  },",
            "  serverHostname: \"${4:string}\", // Required",
            "  subdirectory: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationNFS",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationNFS",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationnfs",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationObjectStorage": {
        "body": [
            "new datasync.CfnLocationObjectStorage(this, \"${1:id}\", {",
            "  accessKey: \"${2:string}\",",
            "  agentArns: [], // Required",
            "  bucketName: \"${4:string}\", // Required",
            "  secretKey: \"${5:string}\",",
            "  serverHostname: \"${6:string}\", // Required",
            "  serverPort: ${7:Number},",
            "  serverProtocol: \"${8:string}\",",
            "  subdirectory: \"${9:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationObjectStorage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationObjectStorage",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationobjectstorage",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationS3": {
        "body": [
            "new datasync.CfnLocationS3(this, \"${1:id}\", {",
            "  s3BucketArn: \"${2:string}\", // Required",
            "  s3Config: {",
            "    bucketAccessRoleArn: \"${3:string}\",",
            "  },",
            "  s3StorageClass: \"${4:string}\",",
            "  subdirectory: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationS3",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationS3",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locations3",
        "scope": "javascript,typescript"
    },
    "datasync.CfnLocationSMB": {
        "body": [
            "new datasync.CfnLocationSMB(this, \"${1:id}\", {",
            "  agentArns: [], // Required",
            "  domain: \"${3:string}\",",
            "  mountOptions: {",
            "    version: \"${4:string}\",",
            "  },",
            "  password: \"${5:string}\", // Required",
            "  serverHostname: \"${6:string}\", // Required",
            "  subdirectory: \"${7:string}\", // Required",
            "  tags: [],",
            "  user: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnLocationSMB",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnLocationSMB",
            "Attributes: ",
            "  attrLocationArn",
            "  attrLocationUri"
        ],
        "prefix": "l1-datasync-locationsmb",
        "scope": "javascript,typescript"
    },
    "datasync.CfnTask": {
        "body": [
            "new datasync.CfnTask(this, \"${1:id}\", {",
            "  cloudWatchLogGroupArn: \"${2:string}\",",
            "  destinationLocationArn: \"${3:string}\", // Required",
            "  excludes: [],",
            "  includes: [],",
            "  name: \"${6:string}\",",
            "  options: {",
            "    atime: \"${7:string}\",",
            "    bytesPerSecond: ${8:Number},",
            "    gid: \"${9:string}\",",
            "    logLevel: \"${10:string}\",",
            "    mtime: \"${11:string}\",",
            "    overwriteMode: \"${12:string}\",",
            "    posixPermissions: \"${13:string}\",",
            "    preserveDeletedFiles: \"${14:string}\",",
            "    preserveDevices: \"${15:string}\",",
            "    securityDescriptorCopyFlags: \"${16:string}\",",
            "    taskQueueing: \"${17:string}\",",
            "    transferMode: \"${18:string}\",",
            "    uid: \"${19:string}\",",
            "    verifyMode: \"${20:string}\",",
            "  },",
            "  schedule: {",
            "    scheduleExpression: \"${8:string}\",",
            "  },",
            "  sourceLocationArn: \"${9:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: datasync.CfnTask",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-datasync.CfnTask",
            "Attributes: ",
            "  attrTaskArn",
            "  attrErrorCode",
            "  attrErrorDetail",
            "  attrStatus",
            "  attrSourceNetworkInterfaceArns",
            "  attrDestinationNetworkInterfaceArns"
        ],
        "prefix": "l1-datasync-task",
        "scope": "javascript,typescript"
    },
    "dax.CfnCluster": {
        "body": [
            "new dax.CfnCluster(this, \"${1:id}\", {",
            "  availabilityZones: [],",
            "  clusterEndpointEncryptionType: \"${3:string}\",",
            "  clusterName: \"${4:string}\",",
            "  description: \"${5:string}\",",
            "  iAMRoleARN: \"${6:string}\", // Required",
            "  nodeType: \"${7:string}\", // Required",
            "  notificationTopicARN: \"${8:string}\",",
            "  parameterGroupName: \"${9:string}\",",
            "  preferredMaintenanceWindow: \"${10:string}\",",
            "  replicationFactor: ${11:Number}, // Required",
            "  sSESpecification: {",
            "    sSEEnabled: ${12|false,true|},",
            "  },",
            "  securityGroupIds: [],",
            "  subnetGroupName: \"${14:string}\",",
            "  tags: ${15:JSON},",
            "})"
        ],
        "description": [
            "Construct: dax.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dax.CfnCluster",
            "Attributes: ",
            "  attrClusterDiscoveryEndpointURL",
            "  attrClusterDiscoveryEndpoint",
            "  attrArn"
        ],
        "prefix": "l1-dax-cluster",
        "scope": "javascript,typescript"
    },
    "dax.CfnParameterGroup": {
        "body": [
            "new dax.CfnParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  parameterGroupName: \"${3:string}\",",
            "  parameterNameValues: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: dax.CfnParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dax.CfnParameterGroup"
        ],
        "prefix": "l1-dax-parametergroup",
        "scope": "javascript,typescript"
    },
    "dax.CfnSubnetGroup": {
        "body": [
            "new dax.CfnSubnetGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  subnetGroupName: \"${3:string}\",",
            "  subnetIds: [], // Required",
            "})"
        ],
        "description": [
            "Construct: dax.CfnSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dax.CfnSubnetGroup"
        ],
        "prefix": "l1-dax-subnetgroup",
        "scope": "javascript,typescript"
    },
    "detective.CfnGraph": {
        "body": [
            "new detective.CfnGraph(this, \"${1:id}\", {",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: detective.CfnGraph",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-detective.CfnGraph",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-detective-graph",
        "scope": "javascript,typescript"
    },
    "detective.CfnMemberInvitation": {
        "body": [
            "new detective.CfnMemberInvitation(this, \"${1:id}\", {",
            "  disableEmailNotification: ${2|false,true|},",
            "  graphArn: \"${3:string}\", // Required",
            "  memberEmailAddress: \"${4:string}\", // Required",
            "  memberId: \"${5:string}\", // Required",
            "  message: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: detective.CfnMemberInvitation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-detective.CfnMemberInvitation"
        ],
        "prefix": "l1-detective-memberinvitation",
        "scope": "javascript,typescript"
    },
    "devopsguru.CfnNotificationChannel": {
        "body": [
            "new devopsguru.CfnNotificationChannel(this, \"${1:id}\", {",
            "  config: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: devopsguru.CfnNotificationChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-devopsguru.CfnNotificationChannel",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-devopsguru-notificationchannel",
        "scope": "javascript,typescript"
    },
    "devopsguru.CfnResourceCollection": {
        "body": [
            "new devopsguru.CfnResourceCollection(this, \"${1:id}\", {",
            "  resourceCollectionFilter: {",
            "    tags: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: devopsguru.CfnResourceCollection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-devopsguru.CfnResourceCollection",
            "Attributes: ",
            "  attrResourceCollectionType"
        ],
        "prefix": "l1-devopsguru-resourcecollection",
        "scope": "javascript,typescript"
    },
    "directoryservice.CfnMicrosoftAD": {
        "body": [
            "new directoryservice.CfnMicrosoftAD(this, \"${1:id}\", {",
            "  createAlias: ${2|false,true|},",
            "  edition: \"${3:string}\",",
            "  enableSso: ${4|false,true|},",
            "  name: \"${5:string}\", // Required",
            "  password: \"${6:string}\", // Required",
            "  shortName: \"${7:string}\",",
            "  vpcSettings: {",
            "    subnetIds: [],",
            "    vpcId: \"${9:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: directoryservice.CfnMicrosoftAD",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-directoryservice.CfnMicrosoftAD",
            "Attributes: ",
            "  attrAlias",
            "  attrDnsIpAddresses"
        ],
        "prefix": "l1-directoryservice-microsoftad",
        "scope": "javascript,typescript"
    },
    "directoryservice.CfnSimpleAD": {
        "body": [
            "new directoryservice.CfnSimpleAD(this, \"${1:id}\", {",
            "  createAlias: ${2|false,true|},",
            "  description: \"${3:string}\",",
            "  enableSso: ${4|false,true|},",
            "  name: \"${5:string}\", // Required",
            "  password: \"${6:string}\", // Required",
            "  shortName: \"${7:string}\",",
            "  size: \"${8:string}\", // Required",
            "  vpcSettings: {",
            "    subnetIds: [],",
            "    vpcId: \"${10:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: directoryservice.CfnSimpleAD",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-directoryservice.CfnSimpleAD",
            "Attributes: ",
            "  attrAlias",
            "  attrDnsIpAddresses"
        ],
        "prefix": "l1-directoryservice-simplead",
        "scope": "javascript,typescript"
    },
    "dlm.CfnLifecyclePolicy": {
        "body": [
            "new dlm.CfnLifecyclePolicy(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  executionRoleArn: \"${3:string}\",",
            "  policyDetails: {",
            "    actions: [],",
            "    policyType: \"${7:string}\",",
            "    resourceLocations: [],",
            "    resourceTypes: [],",
            "    schedules: [],",
            "    targetTags: [],",
            "  },",
            "  state: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: dlm.CfnLifecyclePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dlm.CfnLifecyclePolicy",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-dlm-lifecyclepolicy",
        "scope": "javascript,typescript"
    },
    "dms.CfnCertificate": {
        "body": [
            "new dms.CfnCertificate(this, \"${1:id}\", {",
            "  certificateIdentifier: \"${2:string}\",",
            "  certificatePem: \"${3:string}\",",
            "  certificateWallet: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: dms.CfnCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnCertificate"
        ],
        "prefix": "l1-dms-certificate",
        "scope": "javascript,typescript"
    },
    "dms.CfnEndpoint": {
        "body": [
            "new dms.CfnEndpoint(this, \"${1:id}\", {",
            "  certificateArn: \"${2:string}\",",
            "  databaseName: \"${3:string}\",",
            "  docDbSettings: {",
            "    docsToInvestigate: ${4:Number},",
            "    extractDocId: ${5|false,true|},",
            "    nestingLevel: \"${6:string}\",",
            "    secretsManagerAccessRoleArn: \"${7:string}\",",
            "    secretsManagerSecretId: \"${8:string}\",",
            "  },",
            "  dynamoDbSettings: {",
            "    serviceAccessRoleArn: \"${5:string}\",",
            "  },",
            "  elasticsearchSettings: {",
            "    endpointUri: \"${6:string}\",",
            "    errorRetryDuration: ${7:Number},",
            "    fullLoadErrorPercentage: ${8:Number},",
            "    serviceAccessRoleArn: \"${9:string}\",",
            "  },",
            "  endpointIdentifier: \"${7:string}\",",
            "  endpointType: \"${8:string}\", // Required",
            "  engineName: \"${9:string}\", // Required",
            "  extraConnectionAttributes: \"${10:string}\",",
            "  gcpMySQLSettings: {",
            "    afterConnectScript: \"${11:string}\",",
            "    cleanSourceMetadataOnMismatch: ${12|false,true|},",
            "    databaseName: \"${13:string}\",",
            "    eventsPollInterval: ${14:Number},",
            "    maxFileSize: ${15:Number},",
            "    parallelLoadThreads: ${16:Number},",
            "    password: \"${17:string}\",",
            "    port: ${18:Number},",
            "    secretsManagerAccessRoleArn: \"${19:string}\",",
            "    secretsManagerSecretId: \"${20:string}\",",
            "    serverName: \"${21:string}\",",
            "    serverTimezone: \"${22:string}\",",
            "    username: \"${23:string}\",",
            "  },",
            "  ibmDb2Settings: {",
            "    currentLsn: \"${12:string}\",",
            "    maxKBytesPerRead: ${13:Number},",
            "    secretsManagerAccessRoleArn: \"${14:string}\",",
            "    secretsManagerSecretId: \"${15:string}\",",
            "    setDataCaptureChanges: ${16|false,true|},",
            "  },",
            "  kafkaSettings: {",
            "    broker: \"${13:string}\",",
            "    includeControlDetails: ${14|false,true|},",
            "    includeNullAndEmpty: ${15|false,true|},",
            "    includePartitionValue: ${16|false,true|},",
            "    includeTableAlterOperations: ${17|false,true|},",
            "    includeTransactionDetails: ${18|false,true|},",
            "    messageFormat: \"${19:string}\",",
            "    messageMaxBytes: ${20:Number},",
            "    noHexPrefix: ${21|false,true|},",
            "    partitionIncludeSchemaTable: ${22|false,true|},",
            "    saslPassword: \"${23:string}\",",
            "    saslUserName: \"${24:string}\",",
            "    securityProtocol: \"${25:string}\",",
            "    sslCaCertificateArn: \"${26:string}\",",
            "    sslClientCertificateArn: \"${27:string}\",",
            "    sslClientKeyArn: \"${28:string}\",",
            "    sslClientKeyPassword: \"${29:string}\",",
            "    topic: \"${30:string}\",",
            "  },",
            "  kinesisSettings: {",
            "    includeControlDetails: ${14|false,true|},",
            "    includeNullAndEmpty: ${15|false,true|},",
            "    includePartitionValue: ${16|false,true|},",
            "    includeTableAlterOperations: ${17|false,true|},",
            "    includeTransactionDetails: ${18|false,true|},",
            "    messageFormat: \"${19:string}\",",
            "    noHexPrefix: ${20|false,true|},",
            "    partitionIncludeSchemaTable: ${21|false,true|},",
            "    serviceAccessRoleArn: \"${22:string}\",",
            "    streamArn: \"${23:string}\",",
            "  },",
            "  kmsKeyId: \"${15:string}\",",
            "  microsoftSqlServerSettings: {",
            "    bcpPacketSize: ${16:Number},",
            "    controlTablesFileGroup: \"${17:string}\",",
            "    querySingleAlwaysOnNode: ${18|false,true|},",
            "    readBackupOnly: ${19|false,true|},",
            "    safeguardPolicy: \"${20:string}\",",
            "    secretsManagerAccessRoleArn: \"${21:string}\",",
            "    secretsManagerSecretId: \"${22:string}\",",
            "    useBcpFullLoad: ${23|false,true|},",
            "    useThirdPartyBackupDevice: ${24|false,true|},",
            "  },",
            "  mongoDbSettings: {",
            "    authMechanism: \"${17:string}\",",
            "    authSource: \"${18:string}\",",
            "    authType: \"${19:string}\",",
            "    databaseName: \"${20:string}\",",
            "    docsToInvestigate: \"${21:string}\",",
            "    extractDocId: \"${22:string}\",",
            "    nestingLevel: \"${23:string}\",",
            "    password: \"${24:string}\",",
            "    port: ${25:Number},",
            "    secretsManagerAccessRoleArn: \"${26:string}\",",
            "    secretsManagerSecretId: \"${27:string}\",",
            "    serverName: \"${28:string}\",",
            "    username: \"${29:string}\",",
            "  },",
            "  mySqlSettings: {",
            "    afterConnectScript: \"${18:string}\",",
            "    cleanSourceMetadataOnMismatch: ${19|false,true|},",
            "    eventsPollInterval: ${20:Number},",
            "    maxFileSize: ${21:Number},",
            "    parallelLoadThreads: ${22:Number},",
            "    secretsManagerAccessRoleArn: \"${23:string}\",",
            "    secretsManagerSecretId: \"${24:string}\",",
            "    serverTimezone: \"${25:string}\",",
            "    targetDbType: \"${26:string}\",",
            "  },",
            "  neptuneSettings: {",
            "    errorRetryDuration: ${19:Number},",
            "    iamAuthEnabled: ${20|false,true|},",
            "    maxFileSize: ${21:Number},",
            "    maxRetryCount: ${22:Number},",
            "    s3BucketFolder: \"${23:string}\",",
            "    s3BucketName: \"${24:string}\",",
            "    serviceAccessRoleArn: \"${25:string}\",",
            "  },",
            "  oracleSettings: {",
            "    accessAlternateDirectly: ${20|false,true|},",
            "    addSupplementalLogging: ${21|false,true|},",
            "    additionalArchivedLogDestId: ${22:Number},",
            "    allowSelectNestedTables: ${23|false,true|},",
            "    archivedLogDestId: ${24:Number},",
            "    archivedLogsOnly: ${25|false,true|},",
            "    asmPassword: \"${26:string}\",",
            "    asmServer: \"${27:string}\",",
            "    asmUser: \"${28:string}\",",
            "    charLengthSemantics: \"${29:string}\",",
            "    directPathNoLog: ${30|false,true|},",
            "    directPathParallelLoad: ${31|false,true|},",
            "    enableHomogenousTablespace: ${32|false,true|},",
            "    extraArchivedLogDestIds: [],",
            "    failTasksOnLobTruncation: ${34|false,true|},",
            "    numberDatatypeScale: ${35:Number},",
            "    oraclePathPrefix: \"${36:string}\",",
            "    parallelAsmReadThreads: ${37:Number},",
            "    readAheadBlocks: ${38:Number},",
            "    readTableSpaceName: ${39|false,true|},",
            "    replacePathPrefix: ${40|false,true|},",
            "    retryInterval: ${41:Number},",
            "    secretsManagerAccessRoleArn: \"${42:string}\",",
            "    secretsManagerOracleAsmAccessRoleArn: \"${43:string}\",",
            "    secretsManagerOracleAsmSecretId: \"${44:string}\",",
            "    secretsManagerSecretId: \"${45:string}\",",
            "    securityDbEncryption: \"${46:string}\",",
            "    securityDbEncryptionName: \"${47:string}\",",
            "    spatialDataOptionToGeoJsonFunctionName: \"${48:string}\",",
            "    standbyDelayTime: ${49:Number},",
            "    useAlternateFolderForOnline: ${50|false,true|},",
            "    useBFile: ${51|false,true|},",
            "    useDirectPathFullLoad: ${52|false,true|},",
            "    useLogminerReader: ${53|false,true|},",
            "    usePathPrefix: \"${54:string}\",",
            "  },",
            "  password: \"${21:string}\",",
            "  port: ${22:Number},",
            "  postgreSqlSettings: {",
            "    afterConnectScript: \"${23:string}\",",
            "    captureDdls: ${24|false,true|},",
            "    ddlArtifactsSchema: \"${25:string}\",",
            "    executeTimeout: ${26:Number},",
            "    failTasksOnLobTruncation: ${27|false,true|},",
            "    heartbeatEnable: ${28|false,true|},",
            "    heartbeatFrequency: ${29:Number},",
            "    heartbeatSchema: \"${30:string}\",",
            "    maxFileSize: ${31:Number},",
            "    pluginName: \"${32:string}\",",
            "    secretsManagerAccessRoleArn: \"${33:string}\",",
            "    secretsManagerSecretId: \"${34:string}\",",
            "    slotName: \"${35:string}\",",
            "  },",
            "  redisSettings: {",
            "    authPassword: \"${24:string}\",",
            "    authType: \"${25:string}\",",
            "    authUserName: \"${26:string}\",",
            "    port: ${27:Number},",
            "    serverName: \"${28:string}\",",
            "    sslCaCertificateArn: \"${29:string}\",",
            "    sslSecurityProtocol: \"${30:string}\",",
            "  },",
            "  redshiftSettings: {",
            "    acceptAnyDate: ${25|false,true|},",
            "    afterConnectScript: \"${26:string}\",",
            "    bucketFolder: \"${27:string}\",",
            "    bucketName: \"${28:string}\",",
            "    caseSensitiveNames: ${29|false,true|},",
            "    compUpdate: ${30|false,true|},",
            "    connectionTimeout: ${31:Number},",
            "    dateFormat: \"${32:string}\",",
            "    emptyAsNull: ${33|false,true|},",
            "    encryptionMode: \"${34:string}\",",
            "    explicitIds: ${35|false,true|},",
            "    fileTransferUploadStreams: ${36:Number},",
            "    loadTimeout: ${37:Number},",
            "    maxFileSize: ${38:Number},",
            "    removeQuotes: ${39|false,true|},",
            "    replaceChars: \"${40:string}\",",
            "    replaceInvalidChars: \"${41:string}\",",
            "    secretsManagerAccessRoleArn: \"${42:string}\",",
            "    secretsManagerSecretId: \"${43:string}\",",
            "    serverSideEncryptionKmsKeyId: \"${44:string}\",",
            "    serviceAccessRoleArn: \"${45:string}\",",
            "    timeFormat: \"${46:string}\",",
            "    trimBlanks: ${47|false,true|},",
            "    truncateColumns: ${48|false,true|},",
            "    writeBufferSize: ${49:Number},",
            "  },",
            "  resourceIdentifier: \"${26:string}\",",
            "  s3Settings: {",
            "    addColumnName: ${27|false,true|},",
            "    bucketFolder: \"${28:string}\",",
            "    bucketName: \"${29:string}\",",
            "    cannedAclForObjects: \"${30:string}\",",
            "    cdcInsertsAndUpdates: ${31|false,true|},",
            "    cdcInsertsOnly: ${32|false,true|},",
            "    cdcMaxBatchInterval: ${33:Number},",
            "    cdcMinFileSize: ${34:Number},",
            "    cdcPath: \"${35:string}\",",
            "    compressionType: \"${36:string}\",",
            "    csvDelimiter: \"${37:string}\",",
            "    csvNoSupValue: \"${38:string}\",",
            "    csvNullValue: \"${39:string}\",",
            "    csvRowDelimiter: \"${40:string}\",",
            "    dataFormat: \"${41:string}\",",
            "    dataPageSize: ${42:Number},",
            "    datePartitionDelimiter: \"${43:string}\",",
            "    datePartitionEnabled: ${44|false,true|},",
            "    datePartitionSequence: \"${45:string}\",",
            "    datePartitionTimezone: \"${46:string}\",",
            "    dictPageSizeLimit: ${47:Number},",
            "    enableStatistics: ${48|false,true|},",
            "    encodingType: \"${49:string}\",",
            "    encryptionMode: \"${50:string}\",",
            "    externalTableDefinition: \"${51:string}\",",
            "    ignoreHeaderRows: ${52:Number},",
            "    includeOpForFullLoad: ${53|false,true|},",
            "    maxFileSize: ${54:Number},",
            "    parquetTimestampInMillisecond: ${55|false,true|},",
            "    parquetVersion: \"${56:string}\",",
            "    preserveTransactions: ${57|false,true|},",
            "    rfc4180: ${58|false,true|},",
            "    rowGroupLength: ${59:Number},",
            "    serverSideEncryptionKmsKeyId: \"${60:string}\",",
            "    serviceAccessRoleArn: \"${61:string}\",",
            "    timestampColumnName: \"${62:string}\",",
            "    useCsvNoSupValue: ${63|false,true|},",
            "    useTaskStartTimeForFullLoadTimestamp: ${64|false,true|},",
            "  },",
            "  serverName: \"${28:string}\",",
            "  sslMode: \"${29:string}\",",
            "  sybaseSettings: {",
            "    secretsManagerAccessRoleArn: \"${30:string}\",",
            "    secretsManagerSecretId: \"${31:string}\",",
            "  },",
            "  tags: [],",
            "  username: \"${32:string}\",",
            "})"
        ],
        "description": [
            "Construct: dms.CfnEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnEndpoint",
            "Attributes: ",
            "  attrExternalId"
        ],
        "prefix": "l1-dms-endpoint",
        "scope": "javascript,typescript"
    },
    "dms.CfnEventSubscription": {
        "body": [
            "new dms.CfnEventSubscription(this, \"${1:id}\", {",
            "  enabled: ${2|false,true|},",
            "  eventCategories: [],",
            "  snsTopicArn: \"${4:string}\", // Required",
            "  sourceIds: [],",
            "  sourceType: \"${6:string}\",",
            "  subscriptionName: \"${7:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: dms.CfnEventSubscription",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnEventSubscription"
        ],
        "prefix": "l1-dms-eventsubscription",
        "scope": "javascript,typescript"
    },
    "dms.CfnReplicationInstance": {
        "body": [
            "new dms.CfnReplicationInstance(this, \"${1:id}\", {",
            "  allocatedStorage: ${2:Number},",
            "  allowMajorVersionUpgrade: ${3|false,true|},",
            "  autoMinorVersionUpgrade: ${4|false,true|},",
            "  availabilityZone: \"${5:string}\",",
            "  engineVersion: \"${6:string}\",",
            "  kmsKeyId: \"${7:string}\",",
            "  multiAZ: ${8|false,true|},",
            "  preferredMaintenanceWindow: \"${9:string}\",",
            "  publiclyAccessible: ${10|false,true|},",
            "  replicationInstanceClass: \"${11:string}\", // Required",
            "  replicationInstanceIdentifier: \"${12:string}\",",
            "  replicationSubnetGroupIdentifier: \"${13:string}\",",
            "  resourceIdentifier: \"${14:string}\",",
            "  tags: [],",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: dms.CfnReplicationInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnReplicationInstance",
            "Attributes: ",
            "  attrReplicationInstancePublicIpAddresses",
            "  attrReplicationInstancePrivateIpAddresses"
        ],
        "prefix": "l1-dms-replicationinstance",
        "scope": "javascript,typescript"
    },
    "dms.CfnReplicationSubnetGroup": {
        "body": [
            "new dms.CfnReplicationSubnetGroup(this, \"${1:id}\", {",
            "  replicationSubnetGroupDescription: \"${2:string}\", // Required",
            "  replicationSubnetGroupIdentifier: \"${3:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: dms.CfnReplicationSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnReplicationSubnetGroup"
        ],
        "prefix": "l1-dms-replicationsubnetgroup",
        "scope": "javascript,typescript"
    },
    "dms.CfnReplicationTask": {
        "body": [
            "new dms.CfnReplicationTask(this, \"${1:id}\", {",
            "  cdcStartPosition: \"${2:string}\",",
            "  cdcStartTime: ${3:Number},",
            "  cdcStopPosition: \"${4:string}\",",
            "  migrationType: \"${5:string}\", // Required",
            "  replicationInstanceArn: \"${6:string}\", // Required",
            "  replicationTaskIdentifier: \"${7:string}\",",
            "  replicationTaskSettings: \"${8:string}\",",
            "  resourceIdentifier: \"${9:string}\",",
            "  sourceEndpointArn: \"${10:string}\", // Required",
            "  tableMappings: \"${11:string}\", // Required",
            "  tags: [],",
            "  targetEndpointArn: \"${13:string}\", // Required",
            "  taskData: \"${14:string}\",",
            "})"
        ],
        "description": [
            "Construct: dms.CfnReplicationTask",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dms.CfnReplicationTask"
        ],
        "prefix": "l1-dms-replicationtask",
        "scope": "javascript,typescript"
    },
    "docdb.CfnDBCluster": {
        "body": [
            "new docdb.CfnDBCluster(this, \"${1:id}\", {",
            "  availabilityZones: [],",
            "  backupRetentionPeriod: ${3:Number},",
            "  copyTagsToSnapshot: ${4|false,true|},",
            "  dBClusterIdentifier: \"${5:string}\",",
            "  dBClusterParameterGroupName: \"${6:string}\",",
            "  dBSubnetGroupName: \"${7:string}\",",
            "  deletionProtection: ${8|false,true|},",
            "  enableCloudwatchLogsExports: [],",
            "  engineVersion: \"${10:string}\",",
            "  kmsKeyId: \"${11:string}\",",
            "  masterUserPassword: \"${12:string}\",",
            "  masterUsername: \"${13:string}\",",
            "  port: ${14:Number},",
            "  preferredBackupWindow: \"${15:string}\",",
            "  preferredMaintenanceWindow: \"${16:string}\",",
            "  snapshotIdentifier: \"${17:string}\",",
            "  storageEncrypted: ${18|false,true|},",
            "  tags: [],",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: docdb.CfnDBCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-docdb.CfnDBCluster",
            "Attributes: ",
            "  attrClusterResourceId",
            "  attrEndpoint",
            "  attrPort",
            "  attrReadEndpoint"
        ],
        "prefix": "l1-docdb-dbcluster",
        "scope": "javascript,typescript"
    },
    "docdb.CfnDBClusterParameterGroup": {
        "body": [
            "new docdb.CfnDBClusterParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  family: \"${3:string}\", // Required",
            "  name: \"${4:string}\",",
            "  parameters: ${5:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: docdb.CfnDBClusterParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-docdb.CfnDBClusterParameterGroup"
        ],
        "prefix": "l1-docdb-dbclusterparametergroup",
        "scope": "javascript,typescript"
    },
    "docdb.CfnDBInstance": {
        "body": [
            "new docdb.CfnDBInstance(this, \"${1:id}\", {",
            "  autoMinorVersionUpgrade: ${2|false,true|},",
            "  availabilityZone: \"${3:string}\",",
            "  dBClusterIdentifier: \"${4:string}\", // Required",
            "  dBInstanceClass: \"${5:string}\", // Required",
            "  dBInstanceIdentifier: \"${6:string}\",",
            "  enablePerformanceInsights: ${7|false,true|},",
            "  preferredMaintenanceWindow: \"${8:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: docdb.CfnDBInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-docdb.CfnDBInstance",
            "Attributes: ",
            "  attrEndpoint",
            "  attrPort"
        ],
        "prefix": "l1-docdb-dbinstance",
        "scope": "javascript,typescript"
    },
    "docdb.CfnDBSubnetGroup": {
        "body": [
            "new docdb.CfnDBSubnetGroup(this, \"${1:id}\", {",
            "  dBSubnetGroupDescription: \"${2:string}\", // Required",
            "  dBSubnetGroupName: \"${3:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: docdb.CfnDBSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-docdb.CfnDBSubnetGroup"
        ],
        "prefix": "l1-docdb-dbsubnetgroup",
        "scope": "javascript,typescript"
    },
    "dynamodb.CfnGlobalTable": {
        "body": [
            "new dynamodb.CfnGlobalTable(this, \"${1:id}\", {",
            "  attributeDefinitions: [], // Required",
            "  billingMode: \"${3:string}\",",
            "  globalSecondaryIndexes: [],",
            "  keySchema: [], // Required",
            "  localSecondaryIndexes: [],",
            "  replicas: [], // Required",
            "  sSESpecification: {",
            "    sSEEnabled: ${8|false,true|},",
            "    sSEType: \"${9:string}\",",
            "  },",
            "  streamSpecification: {",
            "    streamViewType: \"${9:string}\",",
            "  },",
            "  tableName: \"${10:string}\",",
            "  timeToLiveSpecification: {",
            "    attributeName: \"${11:string}\",",
            "    enabled: ${12|false,true|},",
            "  },",
            "  writeProvisionedThroughputSettings: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: dynamodb.CfnGlobalTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dynamodb.CfnGlobalTable",
            "Attributes: ",
            "  attrArn",
            "  attrStreamArn",
            "  attrTableId"
        ],
        "prefix": "l1-dynamodb-globaltable",
        "scope": "javascript,typescript"
    },
    "dynamodb.CfnTable": {
        "body": [
            "new dynamodb.CfnTable(this, \"${1:id}\", {",
            "  attributeDefinitions: [],",
            "  billingMode: \"${3:string}\",",
            "  contributorInsightsSpecification: {",
            "    enabled: ${4|false,true|},",
            "  },",
            "  globalSecondaryIndexes: [],",
            "  keySchema: [], // Required",
            "  kinesisStreamSpecification: {",
            "    streamArn: \"${7:string}\",",
            "  },",
            "  localSecondaryIndexes: [],",
            "  pointInTimeRecoverySpecification: {",
            "    pointInTimeRecoveryEnabled: ${9|false,true|},",
            "  },",
            "  provisionedThroughput: {",
            "    readCapacityUnits: ${10:Number},",
            "    writeCapacityUnits: ${11:Number},",
            "  },",
            "  sSESpecification: {",
            "    kMSMasterKeyId: \"${11:string}\",",
            "    sSEEnabled: ${12|false,true|},",
            "    sSEType: \"${13:string}\",",
            "  },",
            "  streamSpecification: {",
            "    streamViewType: \"${12:string}\",",
            "  },",
            "  tableClass: \"${13:string}\",",
            "  tableName: \"${14:string}\",",
            "  tags: [],",
            "  timeToLiveSpecification: {",
            "    attributeName: \"${16:string}\",",
            "    enabled: ${17|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: dynamodb.CfnTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-dynamodb.CfnTable",
            "Attributes: ",
            "  attrArn",
            "  attrStreamArn"
        ],
        "prefix": "l1-dynamodb-table",
        "scope": "javascript,typescript"
    },
    "ec2.CfnCapacityReservation": {
        "body": [
            "new ec2.CfnCapacityReservation(this, \"${1:id}\", {",
            "  availabilityZone: \"${2:string}\", // Required",
            "  ebsOptimized: ${3|false,true|},",
            "  endDate: \"${4:string}\",",
            "  endDateType: \"${5:string}\",",
            "  ephemeralStorage: ${6|false,true|},",
            "  instanceCount: ${7:Number}, // Required",
            "  instanceMatchCriteria: \"${8:string}\",",
            "  instancePlatform: \"${9:string}\", // Required",
            "  instanceType: \"${10:string}\", // Required",
            "  outPostArn: \"${11:string}\",",
            "  placementGroupArn: \"${12:string}\",",
            "  tagSpecifications: [],",
            "  tenancy: \"${14:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnCapacityReservation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnCapacityReservation",
            "Attributes: ",
            "  attrTenancy",
            "  attrAvailableInstanceCount",
            "  attrAvailabilityZone",
            "  attrTotalInstanceCount",
            "  attrInstanceType"
        ],
        "prefix": "l1-ec2-capacityreservation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnCapacityReservationFleet": {
        "body": [
            "new ec2.CfnCapacityReservationFleet(this, \"${1:id}\", {",
            "  allocationStrategy: \"${2:string}\",",
            "  endDate: \"${3:string}\",",
            "  instanceMatchCriteria: \"${4:string}\",",
            "  instanceTypeSpecifications: [],",
            "  noRemoveEndDate: ${6|false,true|},",
            "  removeEndDate: ${7|false,true|},",
            "  tagSpecifications: [],",
            "  tenancy: \"${9:string}\",",
            "  totalTargetCapacity: ${10:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnCapacityReservationFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnCapacityReservationFleet",
            "Attributes: ",
            "  attrCapacityReservationFleetId"
        ],
        "prefix": "l1-ec2-capacityreservationfleet",
        "scope": "javascript,typescript"
    },
    "ec2.CfnCarrierGateway": {
        "body": [
            "new ec2.CfnCarrierGateway(this, \"${1:id}\", {",
            "  tags: [],",
            "  vpcId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnCarrierGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnCarrierGateway",
            "Attributes: ",
            "  attrCarrierGatewayId",
            "  attrState",
            "  attrOwnerId"
        ],
        "prefix": "l1-ec2-carriergateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnClientVpnAuthorizationRule": {
        "body": [
            "new ec2.CfnClientVpnAuthorizationRule(this, \"${1:id}\", {",
            "  accessGroupId: \"${2:string}\",",
            "  authorizeAllGroups: ${3|false,true|},",
            "  clientVpnEndpointId: \"${4:string}\", // Required",
            "  description: \"${5:string}\",",
            "  targetNetworkCidr: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnClientVpnAuthorizationRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnClientVpnAuthorizationRule"
        ],
        "prefix": "l1-ec2-clientvpnauthorizationrule",
        "scope": "javascript,typescript"
    },
    "ec2.CfnClientVpnEndpoint": {
        "body": [
            "new ec2.CfnClientVpnEndpoint(this, \"${1:id}\", {",
            "  authenticationOptions: [], // Required",
            "  clientCidrBlock: \"${3:string}\", // Required",
            "  clientConnectOptions: {",
            "    enabled: ${4|false,true|},",
            "    lambdaFunctionArn: \"${5:string}\",",
            "  },",
            "  clientLoginBannerOptions: {",
            "    bannerText: \"${5:string}\",",
            "    enabled: ${6|false,true|},",
            "  },",
            "  connectionLogOptions: {",
            "    cloudwatchLogGroup: \"${6:string}\",",
            "    cloudwatchLogStream: \"${7:string}\",",
            "    enabled: ${8|false,true|},",
            "  },",
            "  description: \"${7:string}\",",
            "  dnsServers: [],",
            "  securityGroupIds: [],",
            "  selfServicePortal: \"${10:string}\",",
            "  serverCertificateArn: \"${11:string}\", // Required",
            "  sessionTimeoutHours: ${12:Number},",
            "  splitTunnel: ${13|false,true|},",
            "  tagSpecifications: [],",
            "  transportProtocol: \"${15:string}\",",
            "  vpcId: \"${16:string}\",",
            "  vpnPort: ${17:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnClientVpnEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnClientVpnEndpoint"
        ],
        "prefix": "l1-ec2-clientvpnendpoint",
        "scope": "javascript,typescript"
    },
    "ec2.CfnClientVpnRoute": {
        "body": [
            "new ec2.CfnClientVpnRoute(this, \"${1:id}\", {",
            "  clientVpnEndpointId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  destinationCidrBlock: \"${4:string}\", // Required",
            "  targetVpcSubnetId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnClientVpnRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnClientVpnRoute"
        ],
        "prefix": "l1-ec2-clientvpnroute",
        "scope": "javascript,typescript"
    },
    "ec2.CfnClientVpnTargetNetworkAssociation": {
        "body": [
            "new ec2.CfnClientVpnTargetNetworkAssociation(this, \"${1:id}\", {",
            "  clientVpnEndpointId: \"${2:string}\", // Required",
            "  subnetId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnClientVpnTargetNetworkAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnClientVpnTargetNetworkAssociation"
        ],
        "prefix": "l1-ec2-clientvpntargetnetworkassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnCustomerGateway": {
        "body": [
            "new ec2.CfnCustomerGateway(this, \"${1:id}\", {",
            "  bgpAsn: ${2:Number}, // Required",
            "  ipAddress: \"${3:string}\", // Required",
            "  tags: [],",
            "  type: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnCustomerGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnCustomerGateway"
        ],
        "prefix": "l1-ec2-customergateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnDHCPOptions": {
        "body": [
            "new ec2.CfnDHCPOptions(this, \"${1:id}\", {",
            "  domainName: \"${2:string}\",",
            "  domainNameServers: [],",
            "  netbiosNameServers: [],",
            "  netbiosNodeType: ${5:Number},",
            "  ntpServers: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnDHCPOptions",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnDHCPOptions",
            "Attributes: ",
            "  attrDhcpOptionsId"
        ],
        "prefix": "l1-ec2-dhcpoptions",
        "scope": "javascript,typescript"
    },
    "ec2.CfnEC2Fleet": {
        "body": [
            "new ec2.CfnEC2Fleet(this, \"${1:id}\", {",
            "  context: \"${2:string}\",",
            "  excessCapacityTerminationPolicy: \"${3:string}\",",
            "  launchTemplateConfigs: [], // Required",
            "  onDemandOptions: {",
            "    allocationStrategy: \"${5:string}\",",
            "    maxTotalPrice: \"${7:string}\",",
            "    minTargetCapacity: ${8:Number},",
            "    singleAvailabilityZone: ${9|false,true|},",
            "    singleInstanceType: ${10|false,true|},",
            "  },",
            "  replaceUnhealthyInstances: ${6|false,true|},",
            "  spotOptions: {",
            "    allocationStrategy: \"${7:string}\",",
            "    instanceInterruptionBehavior: \"${8:string}\",",
            "    instancePoolsToUseCount: ${9:Number},",
            "    maxTotalPrice: \"${11:string}\",",
            "    minTargetCapacity: ${12:Number},",
            "    singleAvailabilityZone: ${13|false,true|},",
            "    singleInstanceType: ${14|false,true|},",
            "  },",
            "  tagSpecifications: [],",
            "  targetCapacitySpecification: {",
            "    defaultTargetCapacityType: \"${9:string}\",",
            "    onDemandTargetCapacity: ${10:Number},",
            "    spotTargetCapacity: ${11:Number},",
            "    targetCapacityUnitType: \"${12:string}\",",
            "    totalTargetCapacity: ${13:Number},",
            "  },",
            "  terminateInstancesWithExpiration: ${10|false,true|},",
            "  type: \"${11:string}\",",
            "  validFrom: \"${12:string}\",",
            "  validUntil: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnEC2Fleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnEC2Fleet",
            "Attributes: ",
            "  attrFleetId"
        ],
        "prefix": "l1-ec2-ec2fleet",
        "scope": "javascript,typescript"
    },
    "ec2.CfnEIP": {
        "body": [
            "new ec2.CfnEIP(this, \"${1:id}\", {",
            "  domain: \"${2:string}\",",
            "  instanceId: \"${3:string}\",",
            "  publicIpv4Pool: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnEIP",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnEIP",
            "Attributes: ",
            "  attrAllocationId"
        ],
        "prefix": "l1-ec2-eip",
        "scope": "javascript,typescript"
    },
    "ec2.CfnEIPAssociation": {
        "body": [
            "new ec2.CfnEIPAssociation(this, \"${1:id}\", {",
            "  allocationId: \"${2:string}\",",
            "  eIP: \"${3:string}\",",
            "  instanceId: \"${4:string}\",",
            "  networkInterfaceId: \"${5:string}\",",
            "  privateIpAddress: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnEIPAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnEIPAssociation"
        ],
        "prefix": "l1-ec2-eipassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnEgressOnlyInternetGateway": {
        "body": [
            "new ec2.CfnEgressOnlyInternetGateway(this, \"${1:id}\", {",
            "  vpcId: \"${2:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnEgressOnlyInternetGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnEgressOnlyInternetGateway",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-egressonlyinternetgateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnEnclaveCertificateIamRoleAssociation": {
        "body": [
            "new ec2.CfnEnclaveCertificateIamRoleAssociation(this, \"${1:id}\", {",
            "  certificateArn: \"${2:string}\", // Required",
            "  roleArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnEnclaveCertificateIamRoleAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnEnclaveCertificateIamRoleAssociation",
            "Attributes: ",
            "  attrCertificateS3BucketName",
            "  attrCertificateS3ObjectKey",
            "  attrEncryptionKmsKeyId"
        ],
        "prefix": "l1-ec2-enclavecertificateiamroleassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnFlowLog": {
        "body": [
            "new ec2.CfnFlowLog(this, \"${1:id}\", {",
            "  deliverLogsPermissionArn: \"${2:string}\",",
            "  destinationOptions: ${3:JSON},",
            "  logDestination: \"${4:string}\",",
            "  logDestinationType: \"${5:string}\",",
            "  logFormat: \"${6:string}\",",
            "  logGroupName: \"${7:string}\",",
            "  maxAggregationInterval: ${8:Number},",
            "  resourceId: \"${9:string}\", // Required",
            "  resourceType: \"${10:string}\", // Required",
            "  tags: [],",
            "  trafficType: \"${12:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnFlowLog",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnFlowLog",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-flowlog",
        "scope": "javascript,typescript"
    },
    "ec2.CfnGatewayRouteTableAssociation": {
        "body": [
            "new ec2.CfnGatewayRouteTableAssociation(this, \"${1:id}\", {",
            "  gatewayId: \"${2:string}\", // Required",
            "  routeTableId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnGatewayRouteTableAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnGatewayRouteTableAssociation",
            "Attributes: ",
            "  attrAssociationId"
        ],
        "prefix": "l1-ec2-gatewayroutetableassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnHost": {
        "body": [
            "new ec2.CfnHost(this, \"${1:id}\", {",
            "  autoPlacement: \"${2:string}\",",
            "  availabilityZone: \"${3:string}\", // Required",
            "  hostRecovery: \"${4:string}\",",
            "  instanceType: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnHost",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnHost",
            "Attributes: ",
            "  attrHostId"
        ],
        "prefix": "l1-ec2-host",
        "scope": "javascript,typescript"
    },
    "ec2.CfnIPAM": {
        "body": [
            "new ec2.CfnIPAM(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  operatingRegions: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnIPAM",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnIPAM",
            "Attributes: ",
            "  attrIpamId",
            "  attrArn",
            "  attrPublicDefaultScopeId",
            "  attrPrivateDefaultScopeId",
            "  attrScopeCount"
        ],
        "prefix": "l1-ec2-ipam",
        "scope": "javascript,typescript"
    },
    "ec2.CfnIPAMAllocation": {
        "body": [
            "new ec2.CfnIPAMAllocation(this, \"${1:id}\", {",
            "  cidr: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  ipamPoolId: \"${4:string}\", // Required",
            "  netmaskLength: ${5:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnIPAMAllocation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnIPAMAllocation",
            "Attributes: ",
            "  attrIpamPoolAllocationId"
        ],
        "prefix": "l1-ec2-ipamallocation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnIPAMPool": {
        "body": [
            "new ec2.CfnIPAMPool(this, \"${1:id}\", {",
            "  addressFamily: \"${2:string}\", // Required",
            "  allocationDefaultNetmaskLength: ${3:Number},",
            "  allocationMaxNetmaskLength: ${4:Number},",
            "  allocationMinNetmaskLength: ${5:Number},",
            "  allocationResourceTags: [],",
            "  autoImport: ${7|false,true|},",
            "  description: \"${8:string}\",",
            "  ipamScopeId: \"${9:string}\", // Required",
            "  locale: \"${10:string}\",",
            "  provisionedCidrs: [],",
            "  publiclyAdvertisable: ${12|false,true|},",
            "  sourceIpamPoolId: \"${13:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnIPAMPool",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnIPAMPool",
            "Attributes: ",
            "  attrIpamPoolId",
            "  attrArn",
            "  attrIpamScopeArn",
            "  attrIpamScopeType",
            "  attrIpamArn",
            "  attrPoolDepth",
            "  attrState",
            "  attrStateMessage"
        ],
        "prefix": "l1-ec2-ipampool",
        "scope": "javascript,typescript"
    },
    "ec2.CfnIPAMScope": {
        "body": [
            "new ec2.CfnIPAMScope(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  ipamId: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnIPAMScope",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnIPAMScope",
            "Attributes: ",
            "  attrIpamScopeId",
            "  attrArn",
            "  attrIpamArn",
            "  attrIpamScopeType",
            "  attrIsDefault",
            "  attrPoolCount"
        ],
        "prefix": "l1-ec2-ipamscope",
        "scope": "javascript,typescript"
    },
    "ec2.CfnInstance": {
        "body": [
            "new ec2.CfnInstance(this, \"${1:id}\", {",
            "  additionalInfo: \"${2:string}\",",
            "  affinity: \"${3:string}\",",
            "  availabilityZone: \"${4:string}\",",
            "  blockDeviceMappings: [],",
            "  cpuOptions: {",
            "    coreCount: ${6:Number},",
            "    threadsPerCore: ${7:Number},",
            "  },",
            "  creditSpecification: {",
            "    cPUCredits: \"${7:string}\",",
            "  },",
            "  disableApiTermination: ${8|false,true|},",
            "  ebsOptimized: ${9|false,true|},",
            "  elasticGpuSpecifications: [],",
            "  elasticInferenceAccelerators: [],",
            "  enclaveOptions: {",
            "    enabled: ${12|false,true|},",
            "  },",
            "  hibernationOptions: {",
            "    configured: ${13|false,true|},",
            "  },",
            "  hostId: \"${14:string}\",",
            "  hostResourceGroupArn: \"${15:string}\",",
            "  iamInstanceProfile: \"${16:string}\",",
            "  imageId: \"${17:string}\",",
            "  instanceInitiatedShutdownBehavior: \"${18:string}\",",
            "  instanceType: \"${19:string}\",",
            "  ipv6AddressCount: ${20:Number},",
            "  ipv6Addresses: [],",
            "  kernelId: \"${22:string}\",",
            "  keyName: \"${23:string}\",",
            "  launchTemplate: {",
            "    launchTemplateId: \"${24:string}\",",
            "    launchTemplateName: \"${25:string}\",",
            "    version: \"${26:string}\",",
            "  },",
            "  licenseSpecifications: [],",
            "  monitoring: ${26|false,true|},",
            "  networkInterfaces: [],",
            "  placementGroupName: \"${28:string}\",",
            "  privateDnsNameOptions: {",
            "    enableResourceNameDnsAAAARecord: ${29|false,true|},",
            "    enableResourceNameDnsARecord: ${30|false,true|},",
            "    hostnameType: \"${31:string}\",",
            "  },",
            "  privateIpAddress: \"${30:string}\",",
            "  propagateTagsToVolumeOnCreation: ${31|false,true|},",
            "  ramdiskId: \"${32:string}\",",
            "  securityGroupIds: [],",
            "  securityGroups: [],",
            "  sourceDestCheck: ${35|false,true|},",
            "  ssmAssociations: [],",
            "  subnetId: \"${37:string}\",",
            "  tags: [],",
            "  tenancy: \"${39:string}\",",
            "  userData: \"${40:string}\",",
            "  volumes: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnInstance",
            "Attributes: ",
            "  attrAvailabilityZone",
            "  attrPrivateDnsName",
            "  attrPrivateIp",
            "  attrPublicDnsName",
            "  attrPublicIp"
        ],
        "prefix": "l1-ec2-instance",
        "scope": "javascript,typescript"
    },
    "ec2.CfnInternetGateway": {
        "body": [
            "new ec2.CfnInternetGateway(this, \"${1:id}\", {",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnInternetGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnInternetGateway",
            "Attributes: ",
            "  attrInternetGatewayId"
        ],
        "prefix": "l1-ec2-internetgateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnKeyPair": {
        "body": [
            "new ec2.CfnKeyPair(this, \"${1:id}\", {",
            "  keyName: \"${2:string}\", // Required",
            "  keyType: \"${3:string}\",",
            "  publicKeyMaterial: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnKeyPair",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnKeyPair",
            "Attributes: ",
            "  attrKeyFingerprint",
            "  attrKeyPairId"
        ],
        "prefix": "l1-ec2-keypair",
        "scope": "javascript,typescript"
    },
    "ec2.CfnLaunchTemplate": {
        "body": [
            "new ec2.CfnLaunchTemplate(this, \"${1:id}\", {",
            "  launchTemplateData: {",
            "    blockDeviceMappings: [],",
            "    disableApiTermination: ${6|false,true|},",
            "    ebsOptimized: ${7|false,true|},",
            "    elasticGpuSpecifications: [],",
            "    elasticInferenceAccelerators: [],",
            "    imageId: \"${13:string}\",",
            "    instanceInitiatedShutdownBehavior: \"${14:string}\",",
            "    instanceType: \"${17:string}\",",
            "    kernelId: \"${18:string}\",",
            "    keyName: \"${19:string}\",",
            "    licenseSpecifications: [],",
            "    networkInterfaces: [],",
            "    ramDiskId: \"${27:string}\",",
            "    securityGroupIds: [],",
            "    securityGroups: [],",
            "    tagSpecifications: [],",
            "    userData: \"${31:string}\",",
            "  },",
            "  launchTemplateName: \"${3:string}\",",
            "  tagSpecifications: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnLaunchTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnLaunchTemplate",
            "Attributes: ",
            "  attrLatestVersionNumber",
            "  attrDefaultVersionNumber"
        ],
        "prefix": "l1-ec2-launchtemplate",
        "scope": "javascript,typescript"
    },
    "ec2.CfnLocalGatewayRoute": {
        "body": [
            "new ec2.CfnLocalGatewayRoute(this, \"${1:id}\", {",
            "  destinationCidrBlock: \"${2:string}\", // Required",
            "  localGatewayRouteTableId: \"${3:string}\", // Required",
            "  localGatewayVirtualInterfaceGroupId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnLocalGatewayRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnLocalGatewayRoute",
            "Attributes: ",
            "  attrState",
            "  attrType"
        ],
        "prefix": "l1-ec2-localgatewayroute",
        "scope": "javascript,typescript"
    },
    "ec2.CfnLocalGatewayRouteTableVPCAssociation": {
        "body": [
            "new ec2.CfnLocalGatewayRouteTableVPCAssociation(this, \"${1:id}\", {",
            "  localGatewayRouteTableId: \"${2:string}\", // Required",
            "  tags: [],",
            "  vpcId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnLocalGatewayRouteTableVPCAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnLocalGatewayRouteTableVPCAssociation",
            "Attributes: ",
            "  attrLocalGatewayId",
            "  attrLocalGatewayRouteTableVpcAssociationId",
            "  attrState"
        ],
        "prefix": "l1-ec2-localgatewayroutetablevpcassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNatGateway": {
        "body": [
            "new ec2.CfnNatGateway(this, \"${1:id}\", {",
            "  allocationId: \"${2:string}\",",
            "  connectivityType: \"${3:string}\",",
            "  subnetId: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNatGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNatGateway"
        ],
        "prefix": "l1-ec2-natgateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkAcl": {
        "body": [
            "new ec2.CfnNetworkAcl(this, \"${1:id}\", {",
            "  tags: [],",
            "  vpcId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkAcl",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkAcl",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-networkacl",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkAclEntry": {
        "body": [
            "new ec2.CfnNetworkAclEntry(this, \"${1:id}\", {",
            "  cidrBlock: \"${2:string}\",",
            "  egress: ${3|false,true|},",
            "  icmp: {",
            "    code: ${4:Number},",
            "    type: ${5:Number},",
            "  },",
            "  ipv6CidrBlock: \"${5:string}\",",
            "  networkAclId: \"${6:string}\", // Required",
            "  portRange: {",
            "    from: ${7:Number},",
            "    to: ${8:Number},",
            "  },",
            "  protocol: ${8:Number}, // Required",
            "  ruleAction: \"${9:string}\", // Required",
            "  ruleNumber: ${10:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkAclEntry",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkAclEntry",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-networkaclentry",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInsightsAccessScope": {
        "body": [
            "new ec2.CfnNetworkInsightsAccessScope(this, \"${1:id}\", {",
            "  excludePaths: [],",
            "  matchPaths: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInsightsAccessScope",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInsightsAccessScope",
            "Attributes: ",
            "  attrNetworkInsightsAccessScopeId",
            "  attrNetworkInsightsAccessScopeArn",
            "  attrCreatedDate",
            "  attrUpdatedDate"
        ],
        "prefix": "l1-ec2-networkinsightsaccessscope",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInsightsAccessScopeAnalysis": {
        "body": [
            "new ec2.CfnNetworkInsightsAccessScopeAnalysis(this, \"${1:id}\", {",
            "  networkInsightsAccessScopeId: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInsightsAccessScopeAnalysis",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInsightsAccessScopeAnalysis",
            "Attributes: ",
            "  attrNetworkInsightsAccessScopeAnalysisId",
            "  attrNetworkInsightsAccessScopeAnalysisArn",
            "  attrStatus",
            "  attrStatusMessage",
            "  attrStartDate",
            "  attrEndDate",
            "  attrFindingsFound",
            "  attrAnalyzedEniCount"
        ],
        "prefix": "l1-ec2-networkinsightsaccessscopeanalysis",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInsightsAnalysis": {
        "body": [
            "new ec2.CfnNetworkInsightsAnalysis(this, \"${1:id}\", {",
            "  filterInArns: [],",
            "  networkInsightsPathId: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInsightsAnalysis",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInsightsAnalysis",
            "Attributes: ",
            "  attrNetworkInsightsAnalysisId",
            "  attrNetworkInsightsAnalysisArn",
            "  attrStartDate",
            "  attrStatus",
            "  attrStatusMessage",
            "  attrNetworkPathFound",
            "  attrForwardPathComponents",
            "  attrReturnPathComponents",
            "  attrExplanations",
            "  attrAlternatePathHints"
        ],
        "prefix": "l1-ec2-networkinsightsanalysis",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInsightsPath": {
        "body": [
            "new ec2.CfnNetworkInsightsPath(this, \"${1:id}\", {",
            "  destination: \"${2:string}\", // Required",
            "  destinationIp: \"${3:string}\",",
            "  destinationPort: ${4:Number},",
            "  protocol: \"${5:string}\", // Required",
            "  source: \"${6:string}\", // Required",
            "  sourceIp: \"${7:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInsightsPath",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInsightsPath",
            "Attributes: ",
            "  attrNetworkInsightsPathId",
            "  attrNetworkInsightsPathArn",
            "  attrCreatedDate"
        ],
        "prefix": "l1-ec2-networkinsightspath",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInterface": {
        "body": [
            "new ec2.CfnNetworkInterface(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  groupSet: [],",
            "  interfaceType: \"${4:string}\",",
            "  ipv6AddressCount: ${5:Number},",
            "  ipv6Addresses: [],",
            "  privateIpAddress: \"${7:string}\",",
            "  privateIpAddresses: [],",
            "  secondaryPrivateIpAddressCount: ${9:Number},",
            "  sourceDestCheck: ${10|false,true|},",
            "  subnetId: \"${11:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInterface",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInterface",
            "Attributes: ",
            "  attrPrimaryPrivateIpAddress",
            "  attrSecondaryPrivateIpAddresses",
            "  attrId"
        ],
        "prefix": "l1-ec2-networkinterface",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInterfaceAttachment": {
        "body": [
            "new ec2.CfnNetworkInterfaceAttachment(this, \"${1:id}\", {",
            "  deleteOnTermination: ${2|false,true|},",
            "  deviceIndex: \"${3:string}\", // Required",
            "  instanceId: \"${4:string}\", // Required",
            "  networkInterfaceId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInterfaceAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInterfaceAttachment"
        ],
        "prefix": "l1-ec2-networkinterfaceattachment",
        "scope": "javascript,typescript"
    },
    "ec2.CfnNetworkInterfacePermission": {
        "body": [
            "new ec2.CfnNetworkInterfacePermission(this, \"${1:id}\", {",
            "  awsAccountId: \"${2:string}\", // Required",
            "  networkInterfaceId: \"${3:string}\", // Required",
            "  permission: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnNetworkInterfacePermission",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnNetworkInterfacePermission"
        ],
        "prefix": "l1-ec2-networkinterfacepermission",
        "scope": "javascript,typescript"
    },
    "ec2.CfnPlacementGroup": {
        "body": [
            "new ec2.CfnPlacementGroup(this, \"${1:id}\", {",
            "  strategy: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnPlacementGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnPlacementGroup"
        ],
        "prefix": "l1-ec2-placementgroup",
        "scope": "javascript,typescript"
    },
    "ec2.CfnPrefixList": {
        "body": [
            "new ec2.CfnPrefixList(this, \"${1:id}\", {",
            "  addressFamily: \"${2:string}\", // Required",
            "  entries: [],",
            "  maxEntries: ${4:Number}, // Required",
            "  prefixListName: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnPrefixList",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnPrefixList",
            "Attributes: ",
            "  attrPrefixListId",
            "  attrOwnerId",
            "  attrVersion",
            "  attrArn"
        ],
        "prefix": "l1-ec2-prefixlist",
        "scope": "javascript,typescript"
    },
    "ec2.CfnRoute": {
        "body": [
            "new ec2.CfnRoute(this, \"${1:id}\", {",
            "  carrierGatewayId: \"${2:string}\",",
            "  destinationCidrBlock: \"${3:string}\",",
            "  destinationIpv6CidrBlock: \"${4:string}\",",
            "  egressOnlyInternetGatewayId: \"${5:string}\",",
            "  gatewayId: \"${6:string}\",",
            "  instanceId: \"${7:string}\",",
            "  localGatewayId: \"${8:string}\",",
            "  natGatewayId: \"${9:string}\",",
            "  networkInterfaceId: \"${10:string}\",",
            "  routeTableId: \"${11:string}\", // Required",
            "  transitGatewayId: \"${12:string}\",",
            "  vpcEndpointId: \"${13:string}\",",
            "  vpcPeeringConnectionId: \"${14:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnRoute"
        ],
        "prefix": "l1-ec2-route",
        "scope": "javascript,typescript"
    },
    "ec2.CfnRouteTable": {
        "body": [
            "new ec2.CfnRouteTable(this, \"${1:id}\", {",
            "  tags: [],",
            "  vpcId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnRouteTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnRouteTable",
            "Attributes: ",
            "  attrRouteTableId"
        ],
        "prefix": "l1-ec2-routetable",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSecurityGroup": {
        "body": [
            "new ec2.CfnSecurityGroup(this, \"${1:id}\", {",
            "  groupDescription: \"${2:string}\", // Required",
            "  groupName: \"${3:string}\",",
            "  securityGroupEgress: [],",
            "  securityGroupIngress: [],",
            "  tags: [],",
            "  vpcId: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSecurityGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSecurityGroup",
            "Attributes: ",
            "  attrGroupId",
            "  attrVpcId"
        ],
        "prefix": "l1-ec2-securitygroup",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSecurityGroupEgress": {
        "body": [
            "new ec2.CfnSecurityGroupEgress(this, \"${1:id}\", {",
            "  cidrIp: \"${2:string}\",",
            "  cidrIpv6: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  destinationPrefixListId: \"${5:string}\",",
            "  destinationSecurityGroupId: \"${6:string}\",",
            "  fromPort: ${7:Number},",
            "  groupId: \"${8:string}\", // Required",
            "  ipProtocol: \"${9:string}\", // Required",
            "  toPort: ${10:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSecurityGroupEgress",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSecurityGroupEgress"
        ],
        "prefix": "l1-ec2-securitygroupegress",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSecurityGroupIngress": {
        "body": [
            "new ec2.CfnSecurityGroupIngress(this, \"${1:id}\", {",
            "  cidrIp: \"${2:string}\",",
            "  cidrIpv6: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  fromPort: ${5:Number},",
            "  groupId: \"${6:string}\",",
            "  groupName: \"${7:string}\",",
            "  ipProtocol: \"${8:string}\", // Required",
            "  sourcePrefixListId: \"${9:string}\",",
            "  sourceSecurityGroupId: \"${10:string}\",",
            "  sourceSecurityGroupName: \"${11:string}\",",
            "  sourceSecurityGroupOwnerId: \"${12:string}\",",
            "  toPort: ${13:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSecurityGroupIngress",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSecurityGroupIngress"
        ],
        "prefix": "l1-ec2-securitygroupingress",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSpotFleet": {
        "body": [
            "new ec2.CfnSpotFleet(this, \"${1:id}\", {",
            "  spotFleetRequestConfigData: {",
            "    allocationStrategy: \"${2:string}\",",
            "    context: \"${3:string}\",",
            "    excessCapacityTerminationPolicy: \"${4:string}\",",
            "    iamFleetRole: \"${5:string}\",",
            "    instanceInterruptionBehavior: \"${6:string}\",",
            "    instancePoolsToUseCount: ${7:Number},",
            "    launchSpecifications: [],",
            "    launchTemplateConfigs: [],",
            "    onDemandAllocationStrategy: \"${11:string}\",",
            "    onDemandMaxTotalPrice: \"${12:string}\",",
            "    onDemandTargetCapacity: ${13:Number},",
            "    replaceUnhealthyInstances: ${14|false,true|},",
            "    spotMaxTotalPrice: \"${16:string}\",",
            "    spotPrice: \"${17:string}\",",
            "    targetCapacity: ${18:Number},",
            "    targetCapacityUnitType: \"${19:string}\",",
            "    terminateInstancesWithExpiration: ${20|false,true|},",
            "    type: \"${21:string}\",",
            "    validFrom: \"${22:string}\",",
            "    validUntil: \"${23:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSpotFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSpotFleet",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-spotfleet",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSubnet": {
        "body": [
            "new ec2.CfnSubnet(this, \"${1:id}\", {",
            "  assignIpv6AddressOnCreation: ${2|false,true|},",
            "  availabilityZone: \"${3:string}\",",
            "  availabilityZoneId: \"${4:string}\",",
            "  cidrBlock: \"${5:string}\",",
            "  enableDns64: ${6|false,true|},",
            "  ipv6CidrBlock: \"${7:string}\",",
            "  ipv6Native: ${8|false,true|},",
            "  mapPublicIpOnLaunch: ${9|false,true|},",
            "  outpostArn: \"${10:string}\",",
            "  privateDnsNameOptionsOnLaunch: ${11:JSON},",
            "  tags: [],",
            "  vpcId: \"${13:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSubnet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSubnet",
            "Attributes: ",
            "  attrVpcId",
            "  attrNetworkAclAssociationId",
            "  attrAvailabilityZone",
            "  attrSubnetId",
            "  attrIpv6CidrBlocks",
            "  attrOutpostArn"
        ],
        "prefix": "l1-ec2-subnet",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSubnetCidrBlock": {
        "body": [
            "new ec2.CfnSubnetCidrBlock(this, \"${1:id}\", {",
            "  ipv6CidrBlock: \"${2:string}\", // Required",
            "  subnetId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSubnetCidrBlock",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSubnetCidrBlock"
        ],
        "prefix": "l1-ec2-subnetcidrblock",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSubnetNetworkAclAssociation": {
        "body": [
            "new ec2.CfnSubnetNetworkAclAssociation(this, \"${1:id}\", {",
            "  networkAclId: \"${2:string}\", // Required",
            "  subnetId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSubnetNetworkAclAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSubnetNetworkAclAssociation",
            "Attributes: ",
            "  attrAssociationId"
        ],
        "prefix": "l1-ec2-subnetnetworkaclassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnSubnetRouteTableAssociation": {
        "body": [
            "new ec2.CfnSubnetRouteTableAssociation(this, \"${1:id}\", {",
            "  routeTableId: \"${2:string}\", // Required",
            "  subnetId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnSubnetRouteTableAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnSubnetRouteTableAssociation",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-subnetroutetableassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTrafficMirrorFilter": {
        "body": [
            "new ec2.CfnTrafficMirrorFilter(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  networkServices: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTrafficMirrorFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTrafficMirrorFilter"
        ],
        "prefix": "l1-ec2-trafficmirrorfilter",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTrafficMirrorFilterRule": {
        "body": [
            "new ec2.CfnTrafficMirrorFilterRule(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  destinationCidrBlock: \"${3:string}\", // Required",
            "  destinationPortRange: {",
            "    fromPort: ${4:Number},",
            "    toPort: ${5:Number},",
            "  },",
            "  protocol: ${5:Number},",
            "  ruleAction: \"${6:string}\", // Required",
            "  ruleNumber: ${7:Number}, // Required",
            "  sourceCidrBlock: \"${8:string}\", // Required",
            "  sourcePortRange: {",
            "    fromPort: ${9:Number},",
            "    toPort: ${10:Number},",
            "  },",
            "  trafficDirection: \"${10:string}\", // Required",
            "  trafficMirrorFilterId: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTrafficMirrorFilterRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTrafficMirrorFilterRule"
        ],
        "prefix": "l1-ec2-trafficmirrorfilterrule",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTrafficMirrorSession": {
        "body": [
            "new ec2.CfnTrafficMirrorSession(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  networkInterfaceId: \"${3:string}\", // Required",
            "  packetLength: ${4:Number},",
            "  sessionNumber: ${5:Number}, // Required",
            "  tags: [],",
            "  trafficMirrorFilterId: \"${7:string}\", // Required",
            "  trafficMirrorTargetId: \"${8:string}\", // Required",
            "  virtualNetworkId: ${9:Number},",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTrafficMirrorSession",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTrafficMirrorSession"
        ],
        "prefix": "l1-ec2-trafficmirrorsession",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTrafficMirrorTarget": {
        "body": [
            "new ec2.CfnTrafficMirrorTarget(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  gatewayLoadBalancerEndpointId: \"${3:string}\",",
            "  networkInterfaceId: \"${4:string}\",",
            "  networkLoadBalancerArn: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTrafficMirrorTarget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTrafficMirrorTarget"
        ],
        "prefix": "l1-ec2-trafficmirrortarget",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGateway": {
        "body": [
            "new ec2.CfnTransitGateway(this, \"${1:id}\", {",
            "  amazonSideAsn: ${2:Number},",
            "  associationDefaultRouteTableId: \"${3:string}\",",
            "  autoAcceptSharedAttachments: \"${4:string}\",",
            "  defaultRouteTableAssociation: \"${5:string}\",",
            "  defaultRouteTablePropagation: \"${6:string}\",",
            "  description: \"${7:string}\",",
            "  dnsSupport: \"${8:string}\",",
            "  multicastSupport: \"${9:string}\",",
            "  propagationDefaultRouteTableId: \"${10:string}\",",
            "  tags: [],",
            "  transitGatewayCidrBlocks: [],",
            "  vpnEcmpSupport: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGateway",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-transitgateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayAttachment": {
        "body": [
            "new ec2.CfnTransitGatewayAttachment(this, \"${1:id}\", {",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "  transitGatewayId: \"${4:string}\", // Required",
            "  vpcId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayAttachment",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-transitgatewayattachment",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayConnect": {
        "body": [
            "new ec2.CfnTransitGatewayConnect(this, \"${1:id}\", {",
            "  options: {",
            "    protocol: \"${2:string}\",",
            "  },",
            "  tags: [],",
            "  transportTransitGatewayAttachmentId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayConnect",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayConnect",
            "Attributes: ",
            "  attrTransitGatewayAttachmentId",
            "  attrTransitGatewayId",
            "  attrState",
            "  attrCreationTime"
        ],
        "prefix": "l1-ec2-transitgatewayconnect",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayMulticastDomain": {
        "body": [
            "new ec2.CfnTransitGatewayMulticastDomain(this, \"${1:id}\", {",
            "  options: ${2:JSON},",
            "  tags: [],",
            "  transitGatewayId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayMulticastDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayMulticastDomain",
            "Attributes: ",
            "  attrTransitGatewayMulticastDomainId",
            "  attrTransitGatewayMulticastDomainArn",
            "  attrState",
            "  attrCreationTime"
        ],
        "prefix": "l1-ec2-transitgatewaymulticastdomain",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayMulticastDomainAssociation": {
        "body": [
            "new ec2.CfnTransitGatewayMulticastDomainAssociation(this, \"${1:id}\", {",
            "  subnetId: \"${2:string}\", // Required",
            "  transitGatewayAttachmentId: \"${3:string}\", // Required",
            "  transitGatewayMulticastDomainId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayMulticastDomainAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayMulticastDomainAssociation",
            "Attributes: ",
            "  attrResourceId",
            "  attrResourceType",
            "  attrState"
        ],
        "prefix": "l1-ec2-transitgatewaymulticastdomainassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayMulticastGroupMember": {
        "body": [
            "new ec2.CfnTransitGatewayMulticastGroupMember(this, \"${1:id}\", {",
            "  groupIpAddress: \"${2:string}\", // Required",
            "  networkInterfaceId: \"${3:string}\", // Required",
            "  transitGatewayMulticastDomainId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayMulticastGroupMember",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayMulticastGroupMember",
            "Attributes: ",
            "  attrTransitGatewayAttachmentId",
            "  attrSubnetId",
            "  attrResourceId",
            "  attrResourceType",
            "  attrGroupMember",
            "  attrGroupSource",
            "  attrMemberType",
            "  attrSourceType"
        ],
        "prefix": "l1-ec2-transitgatewaymulticastgroupmember",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayMulticastGroupSource": {
        "body": [
            "new ec2.CfnTransitGatewayMulticastGroupSource(this, \"${1:id}\", {",
            "  groupIpAddress: \"${2:string}\", // Required",
            "  networkInterfaceId: \"${3:string}\", // Required",
            "  transitGatewayMulticastDomainId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayMulticastGroupSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayMulticastGroupSource",
            "Attributes: ",
            "  attrTransitGatewayAttachmentId",
            "  attrSubnetId",
            "  attrResourceId",
            "  attrResourceType",
            "  attrGroupMember",
            "  attrGroupSource",
            "  attrMemberType",
            "  attrSourceType"
        ],
        "prefix": "l1-ec2-transitgatewaymulticastgroupsource",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayPeeringAttachment": {
        "body": [
            "new ec2.CfnTransitGatewayPeeringAttachment(this, \"${1:id}\", {",
            "  peerAccountId: \"${2:string}\", // Required",
            "  peerRegion: \"${3:string}\", // Required",
            "  peerTransitGatewayId: \"${4:string}\", // Required",
            "  tags: [],",
            "  transitGatewayId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayPeeringAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayPeeringAttachment",
            "Attributes: ",
            "  attrState",
            "  attrCreationTime",
            "  attrTransitGatewayAttachmentId"
        ],
        "prefix": "l1-ec2-transitgatewaypeeringattachment",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayRoute": {
        "body": [
            "new ec2.CfnTransitGatewayRoute(this, \"${1:id}\", {",
            "  blackhole: ${2|false,true|},",
            "  destinationCidrBlock: \"${3:string}\",",
            "  transitGatewayAttachmentId: \"${4:string}\",",
            "  transitGatewayRouteTableId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayRoute"
        ],
        "prefix": "l1-ec2-transitgatewayroute",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayRouteTable": {
        "body": [
            "new ec2.CfnTransitGatewayRouteTable(this, \"${1:id}\", {",
            "  tags: [],",
            "  transitGatewayId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayRouteTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayRouteTable"
        ],
        "prefix": "l1-ec2-transitgatewayroutetable",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayRouteTableAssociation": {
        "body": [
            "new ec2.CfnTransitGatewayRouteTableAssociation(this, \"${1:id}\", {",
            "  transitGatewayAttachmentId: \"${2:string}\", // Required",
            "  transitGatewayRouteTableId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayRouteTableAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayRouteTableAssociation"
        ],
        "prefix": "l1-ec2-transitgatewayroutetableassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayRouteTablePropagation": {
        "body": [
            "new ec2.CfnTransitGatewayRouteTablePropagation(this, \"${1:id}\", {",
            "  transitGatewayAttachmentId: \"${2:string}\", // Required",
            "  transitGatewayRouteTableId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayRouteTablePropagation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayRouteTablePropagation"
        ],
        "prefix": "l1-ec2-transitgatewayroutetablepropagation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnTransitGatewayVpcAttachment": {
        "body": [
            "new ec2.CfnTransitGatewayVpcAttachment(this, \"${1:id}\", {",
            "  addSubnetIds: [],",
            "  options: ${3:JSON},",
            "  removeSubnetIds: [],",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "  transitGatewayId: \"${7:string}\", // Required",
            "  vpcId: \"${8:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnTransitGatewayVpcAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnTransitGatewayVpcAttachment",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-transitgatewayvpcattachment",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPC": {
        "body": [
            "new ec2.CfnVPC(this, \"${1:id}\", {",
            "  cidrBlock: \"${2:string}\",",
            "  enableDnsHostnames: ${3|false,true|},",
            "  enableDnsSupport: ${4|false,true|},",
            "  instanceTenancy: \"${5:string}\",",
            "  ipv4IpamPoolId: \"${6:string}\",",
            "  ipv4NetmaskLength: ${7:Number},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPC",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPC",
            "Attributes: ",
            "  attrVpcId",
            "  attrCidrBlock",
            "  attrCidrBlockAssociations",
            "  attrDefaultNetworkAcl",
            "  attrDefaultSecurityGroup",
            "  attrIpv6CidrBlocks"
        ],
        "prefix": "l1-ec2-vpc",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCCidrBlock": {
        "body": [
            "new ec2.CfnVPCCidrBlock(this, \"${1:id}\", {",
            "  amazonProvidedIpv6CidrBlock: ${2|false,true|},",
            "  cidrBlock: \"${3:string}\",",
            "  ipv4IpamPoolId: \"${4:string}\",",
            "  ipv4NetmaskLength: ${5:Number},",
            "  ipv6CidrBlock: \"${6:string}\",",
            "  ipv6IpamPoolId: \"${7:string}\",",
            "  ipv6NetmaskLength: ${8:Number},",
            "  ipv6Pool: \"${9:string}\",",
            "  vpcId: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCCidrBlock",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCCidrBlock"
        ],
        "prefix": "l1-ec2-vpccidrblock",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCDHCPOptionsAssociation": {
        "body": [
            "new ec2.CfnVPCDHCPOptionsAssociation(this, \"${1:id}\", {",
            "  dhcpOptionsId: \"${2:string}\", // Required",
            "  vpcId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCDHCPOptionsAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCDHCPOptionsAssociation",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-vpcdhcpoptionsassociation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCEndpoint": {
        "body": [
            "new ec2.CfnVPCEndpoint(this, \"${1:id}\", {",
            "  policyDocument: ${2:JSON},",
            "  privateDnsEnabled: ${3|false,true|},",
            "  routeTableIds: [],",
            "  securityGroupIds: [],",
            "  serviceName: \"${6:string}\", // Required",
            "  subnetIds: [],",
            "  vpcEndpointType: \"${8:string}\",",
            "  vpcId: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCEndpoint",
            "Attributes: ",
            "  attrCreationTimestamp",
            "  attrDnsEntries",
            "  attrNetworkInterfaceIds"
        ],
        "prefix": "l1-ec2-vpcendpoint",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCEndpointConnectionNotification": {
        "body": [
            "new ec2.CfnVPCEndpointConnectionNotification(this, \"${1:id}\", {",
            "  connectionEvents: [], // Required",
            "  connectionNotificationArn: \"${3:string}\", // Required",
            "  serviceId: \"${4:string}\",",
            "  vPCEndpointId: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCEndpointConnectionNotification",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCEndpointConnectionNotification"
        ],
        "prefix": "l1-ec2-vpcendpointconnectionnotification",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCEndpointService": {
        "body": [
            "new ec2.CfnVPCEndpointService(this, \"${1:id}\", {",
            "  acceptanceRequired: ${2|false,true|},",
            "  gatewayLoadBalancerArns: [],",
            "  networkLoadBalancerArns: [],",
            "  payerResponsibility: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCEndpointService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCEndpointService"
        ],
        "prefix": "l1-ec2-vpcendpointservice",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCEndpointServicePermissions": {
        "body": [
            "new ec2.CfnVPCEndpointServicePermissions(this, \"${1:id}\", {",
            "  allowedPrincipals: [],",
            "  serviceId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCEndpointServicePermissions",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCEndpointServicePermissions"
        ],
        "prefix": "l1-ec2-vpcendpointservicepermissions",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCGatewayAttachment": {
        "body": [
            "new ec2.CfnVPCGatewayAttachment(this, \"${1:id}\", {",
            "  internetGatewayId: \"${2:string}\",",
            "  vpcId: \"${3:string}\", // Required",
            "  vpnGatewayId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCGatewayAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCGatewayAttachment"
        ],
        "prefix": "l1-ec2-vpcgatewayattachment",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPCPeeringConnection": {
        "body": [
            "new ec2.CfnVPCPeeringConnection(this, \"${1:id}\", {",
            "  peerOwnerId: \"${2:string}\",",
            "  peerRegion: \"${3:string}\",",
            "  peerRoleArn: \"${4:string}\",",
            "  peerVpcId: \"${5:string}\", // Required",
            "  tags: [],",
            "  vpcId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPCPeeringConnection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPCPeeringConnection"
        ],
        "prefix": "l1-ec2-vpcpeeringconnection",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPNConnection": {
        "body": [
            "new ec2.CfnVPNConnection(this, \"${1:id}\", {",
            "  customerGatewayId: \"${2:string}\", // Required",
            "  staticRoutesOnly: ${3|false,true|},",
            "  tags: [],",
            "  transitGatewayId: \"${5:string}\",",
            "  type: \"${6:string}\", // Required",
            "  vpnGatewayId: \"${7:string}\",",
            "  vpnTunnelOptionsSpecifications: [],",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPNConnection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPNConnection"
        ],
        "prefix": "l1-ec2-vpnconnection",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPNConnectionRoute": {
        "body": [
            "new ec2.CfnVPNConnectionRoute(this, \"${1:id}\", {",
            "  destinationCidrBlock: \"${2:string}\", // Required",
            "  vpnConnectionId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPNConnectionRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPNConnectionRoute"
        ],
        "prefix": "l1-ec2-vpnconnectionroute",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPNGateway": {
        "body": [
            "new ec2.CfnVPNGateway(this, \"${1:id}\", {",
            "  amazonSideAsn: ${2:Number},",
            "  tags: [],",
            "  type: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPNGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPNGateway"
        ],
        "prefix": "l1-ec2-vpngateway",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVPNGatewayRoutePropagation": {
        "body": [
            "new ec2.CfnVPNGatewayRoutePropagation(this, \"${1:id}\", {",
            "  routeTableIds: [], // Required",
            "  vpnGatewayId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVPNGatewayRoutePropagation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVPNGatewayRoutePropagation",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ec2-vpngatewayroutepropagation",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVolume": {
        "body": [
            "new ec2.CfnVolume(this, \"${1:id}\", {",
            "  autoEnableIO: ${2|false,true|},",
            "  availabilityZone: \"${3:string}\", // Required",
            "  encrypted: ${4|false,true|},",
            "  iops: ${5:Number},",
            "  kmsKeyId: \"${6:string}\",",
            "  multiAttachEnabled: ${7|false,true|},",
            "  outpostArn: \"${8:string}\",",
            "  size: ${9:Number},",
            "  snapshotId: \"${10:string}\",",
            "  tags: [],",
            "  throughput: ${12:Number},",
            "  volumeType: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVolume",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVolume"
        ],
        "prefix": "l1-ec2-volume",
        "scope": "javascript,typescript"
    },
    "ec2.CfnVolumeAttachment": {
        "body": [
            "new ec2.CfnVolumeAttachment(this, \"${1:id}\", {",
            "  device: \"${2:string}\", // Required",
            "  instanceId: \"${3:string}\", // Required",
            "  volumeId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ec2.CfnVolumeAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ec2.CfnVolumeAttachment"
        ],
        "prefix": "l1-ec2-volumeattachment",
        "scope": "javascript,typescript"
    },
    "ecr.CfnPublicRepository": {
        "body": [
            "new ecr.CfnPublicRepository(this, \"${1:id}\", {",
            "  repositoryCatalogData: ${2:JSON},",
            "  repositoryName: \"${3:string}\",",
            "  repositoryPolicyText: ${4:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ecr.CfnPublicRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecr.CfnPublicRepository",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ecr-publicrepository",
        "scope": "javascript,typescript"
    },
    "ecr.CfnPullThroughCacheRule": {
        "body": [
            "new ecr.CfnPullThroughCacheRule(this, \"${1:id}\", {",
            "  ecrRepositoryPrefix: \"${2:string}\",",
            "  upstreamRegistryUrl: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: ecr.CfnPullThroughCacheRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecr.CfnPullThroughCacheRule"
        ],
        "prefix": "l1-ecr-pullthroughcacherule",
        "scope": "javascript,typescript"
    },
    "ecr.CfnRegistryPolicy": {
        "body": [
            "new ecr.CfnRegistryPolicy(this, \"${1:id}\", {",
            "  policyText: ${2:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: ecr.CfnRegistryPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecr.CfnRegistryPolicy",
            "Attributes: ",
            "  attrRegistryId"
        ],
        "prefix": "l1-ecr-registrypolicy",
        "scope": "javascript,typescript"
    },
    "ecr.CfnReplicationConfiguration": {
        "body": [
            "new ecr.CfnReplicationConfiguration(this, \"${1:id}\", {",
            "  replicationConfiguration: {",
            "    rules: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ecr.CfnReplicationConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecr.CfnReplicationConfiguration",
            "Attributes: ",
            "  attrRegistryId"
        ],
        "prefix": "l1-ecr-replicationconfiguration",
        "scope": "javascript,typescript"
    },
    "ecr.CfnRepository": {
        "body": [
            "new ecr.CfnRepository(this, \"${1:id}\", {",
            "  encryptionConfiguration: {",
            "    encryptionType: \"${2:string}\",",
            "    kmsKey: \"${3:string}\",",
            "  },",
            "  imageScanningConfiguration: {",
            "    scanOnPush: ${3|false,true|},",
            "  },",
            "  imageTagMutability: \"${4:string}\",",
            "  lifecyclePolicy: {",
            "    lifecyclePolicyText: \"${5:string}\",",
            "    registryId: \"${6:string}\",",
            "  },",
            "  repositoryName: \"${6:string}\",",
            "  repositoryPolicyText: ${7:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ecr.CfnRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecr.CfnRepository",
            "Attributes: ",
            "  attrArn",
            "  attrRepositoryUri"
        ],
        "prefix": "l1-ecr-repository",
        "scope": "javascript,typescript"
    },
    "ecs.CfnCapacityProvider": {
        "body": [
            "new ecs.CfnCapacityProvider(this, \"${1:id}\", {",
            "  autoScalingGroupProvider: {",
            "    autoScalingGroupArn: \"${2:string}\",",
            "    managedTerminationProtection: \"${4:string}\",",
            "  },",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnCapacityProvider",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnCapacityProvider"
        ],
        "prefix": "l1-ecs-capacityprovider",
        "scope": "javascript,typescript"
    },
    "ecs.CfnCluster": {
        "body": [
            "new ecs.CfnCluster(this, \"${1:id}\", {",
            "  capacityProviders: [],",
            "  clusterName: \"${3:string}\",",
            "  clusterSettings: [],",
            "  configuration: {",
            "  },",
            "  defaultCapacityProviderStrategy: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnCluster",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ecs-cluster",
        "scope": "javascript,typescript"
    },
    "ecs.CfnClusterCapacityProviderAssociations": {
        "body": [
            "new ecs.CfnClusterCapacityProviderAssociations(this, \"${1:id}\", {",
            "  capacityProviders: [], // Required",
            "  cluster: \"${3:string}\", // Required",
            "  defaultCapacityProviderStrategy: [], // Required",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnClusterCapacityProviderAssociations",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnClusterCapacityProviderAssociations"
        ],
        "prefix": "l1-ecs-clustercapacityproviderassociations",
        "scope": "javascript,typescript"
    },
    "ecs.CfnPrimaryTaskSet": {
        "body": [
            "new ecs.CfnPrimaryTaskSet(this, \"${1:id}\", {",
            "  cluster: \"${2:string}\", // Required",
            "  service: \"${3:string}\", // Required",
            "  taskSetId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnPrimaryTaskSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnPrimaryTaskSet"
        ],
        "prefix": "l1-ecs-primarytaskset",
        "scope": "javascript,typescript"
    },
    "ecs.CfnService": {
        "body": [
            "new ecs.CfnService(this, \"${1:id}\", {",
            "  capacityProviderStrategy: [],",
            "  cluster: \"${3:string}\",",
            "  deploymentConfiguration: {",
            "    maximumPercent: ${5:Number},",
            "    minimumHealthyPercent: ${6:Number},",
            "  },",
            "  deploymentController: {",
            "    type: \"${5:string}\",",
            "  },",
            "  desiredCount: ${6:Number},",
            "  enableECSManagedTags: ${7|false,true|},",
            "  enableExecuteCommand: ${8|false,true|},",
            "  healthCheckGracePeriodSeconds: ${9:Number},",
            "  launchType: \"${10:string}\",",
            "  loadBalancers: [],",
            "  networkConfiguration: {",
            "  },",
            "  placementConstraints: [],",
            "  placementStrategies: [],",
            "  platformVersion: \"${15:string}\",",
            "  propagateTags: \"${16:string}\",",
            "  role: \"${17:string}\",",
            "  schedulingStrategy: \"${18:string}\",",
            "  serviceName: \"${19:string}\",",
            "  serviceRegistries: [],",
            "  tags: [],",
            "  taskDefinition: \"${22:string}\",",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnService",
            "Attributes: ",
            "  attrServiceArn",
            "  attrName"
        ],
        "prefix": "l1-ecs-service",
        "scope": "javascript,typescript"
    },
    "ecs.CfnTaskDefinition": {
        "body": [
            "new ecs.CfnTaskDefinition(this, \"${1:id}\", {",
            "  containerDefinitions: [],",
            "  cpu: \"${3:string}\",",
            "  ephemeralStorage: {",
            "    sizeInGiB: ${4:Number},",
            "  },",
            "  executionRoleArn: \"${5:string}\",",
            "  family: \"${6:string}\",",
            "  inferenceAccelerators: [],",
            "  ipcMode: \"${8:string}\",",
            "  memory: \"${9:string}\",",
            "  networkMode: \"${10:string}\",",
            "  pidMode: \"${11:string}\",",
            "  placementConstraints: [],",
            "  proxyConfiguration: {",
            "    containerName: \"${13:string}\",",
            "    proxyConfigurationProperties: [],",
            "    type: \"${15:string}\",",
            "  },",
            "  requiresCompatibilities: [],",
            "  runtimePlatform: {",
            "    cpuArchitecture: \"${15:string}\",",
            "    operatingSystemFamily: \"${16:string}\",",
            "  },",
            "  tags: [],",
            "  taskRoleArn: \"${17:string}\",",
            "  volumes: [],",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnTaskDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnTaskDefinition",
            "Attributes: ",
            "  attrTaskDefinitionArn"
        ],
        "prefix": "l1-ecs-taskdefinition",
        "scope": "javascript,typescript"
    },
    "ecs.CfnTaskSet": {
        "body": [
            "new ecs.CfnTaskSet(this, \"${1:id}\", {",
            "  cluster: \"${2:string}\", // Required",
            "  externalId: \"${3:string}\",",
            "  launchType: \"${4:string}\",",
            "  loadBalancers: [],",
            "  networkConfiguration: {",
            "  },",
            "  platformVersion: \"${7:string}\",",
            "  scale: {",
            "    unit: \"${8:string}\",",
            "    value: ${9:Number},",
            "  },",
            "  service: \"${9:string}\", // Required",
            "  serviceRegistries: [],",
            "  taskDefinition: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ecs.CfnTaskSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ecs.CfnTaskSet",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ecs-taskset",
        "scope": "javascript,typescript"
    },
    "efs.CfnAccessPoint": {
        "body": [
            "new efs.CfnAccessPoint(this, \"${1:id}\", {",
            "  accessPointTags: [],",
            "  clientToken: \"${3:string}\",",
            "  fileSystemId: \"${4:string}\", // Required",
            "  posixUser: {",
            "    gid: \"${5:string}\",",
            "    secondaryGids: [],",
            "    uid: \"${7:string}\",",
            "  },",
            "  rootDirectory: {",
            "    path: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: efs.CfnAccessPoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-efs.CfnAccessPoint",
            "Attributes: ",
            "  attrAccessPointId",
            "  attrArn"
        ],
        "prefix": "l1-efs-accesspoint",
        "scope": "javascript,typescript"
    },
    "efs.CfnFileSystem": {
        "body": [
            "new efs.CfnFileSystem(this, \"${1:id}\", {",
            "  availabilityZoneName: \"${2:string}\",",
            "  backupPolicy: {",
            "    status: \"${3:string}\",",
            "  },",
            "  bypassPolicyLockoutSafetyCheck: ${4|false,true|},",
            "  encrypted: ${5|false,true|},",
            "  fileSystemPolicy: ${6:JSON},",
            "  fileSystemTags: [],",
            "  kmsKeyId: \"${8:string}\",",
            "  lifecyclePolicies: [],",
            "  performanceMode: \"${10:string}\",",
            "  provisionedThroughputInMibps: ${11:Number},",
            "  throughputMode: \"${12:string}\",",
            "})"
        ],
        "description": [
            "Construct: efs.CfnFileSystem",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-efs.CfnFileSystem",
            "Attributes: ",
            "  attrFileSystemId",
            "  attrArn"
        ],
        "prefix": "l1-efs-filesystem",
        "scope": "javascript,typescript"
    },
    "efs.CfnMountTarget": {
        "body": [
            "new efs.CfnMountTarget(this, \"${1:id}\", {",
            "  fileSystemId: \"${2:string}\", // Required",
            "  ipAddress: \"${3:string}\",",
            "  securityGroups: [], // Required",
            "  subnetId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: efs.CfnMountTarget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-efs.CfnMountTarget",
            "Attributes: ",
            "  attrId",
            "  attrIpAddress"
        ],
        "prefix": "l1-efs-mounttarget",
        "scope": "javascript,typescript"
    },
    "eks.CfnAddon": {
        "body": [
            "new eks.CfnAddon(this, \"${1:id}\", {",
            "  addonName: \"${2:string}\", // Required",
            "  addonVersion: \"${3:string}\",",
            "  clusterName: \"${4:string}\", // Required",
            "  resolveConflicts: \"${5:string}\",",
            "  serviceAccountRoleArn: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: eks.CfnAddon",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.CfnAddon",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-eks-addon",
        "scope": "javascript,typescript"
    },
    "eks.CfnCluster": {
        "body": [
            "new eks.CfnCluster(this, \"${1:id}\", {",
            "  encryptionConfig: [],",
            "  kubernetesNetworkConfig: {",
            "    ipFamily: \"${3:string}\",",
            "    serviceIpv4Cidr: \"${4:string}\",",
            "    serviceIpv6Cidr: \"${5:string}\",",
            "  },",
            "  logging: {",
            "  },",
            "  name: \"${5:string}\",",
            "  resourcesVpcConfig: {",
            "    endpointPrivateAccess: ${6|false,true|},",
            "    endpointPublicAccess: ${7|false,true|},",
            "    publicAccessCidrs: [],",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "  roleArn: \"${7:string}\", // Required",
            "  tags: [],",
            "  version: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: eks.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.CfnCluster",
            "Attributes: ",
            "  attrKubernetesNetworkConfig.ServiceIpv6Cidr",
            "  attrArn",
            "  attrEndpoint",
            "  attrCertificateAuthorityData",
            "  attrClusterSecurityGroupId",
            "  attrEncryptionConfigKeyArn",
            "  attrOpenIdConnectIssuerUrl"
        ],
        "prefix": "l1-eks-cluster",
        "scope": "javascript,typescript"
    },
    "eks.CfnFargateProfile": {
        "body": [
            "new eks.CfnFargateProfile(this, \"${1:id}\", {",
            "  clusterName: \"${2:string}\", // Required",
            "  fargateProfileName: \"${3:string}\",",
            "  podExecutionRoleArn: \"${4:string}\", // Required",
            "  selectors: [], // Required",
            "  subnets: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: eks.CfnFargateProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.CfnFargateProfile",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-eks-fargateprofile",
        "scope": "javascript,typescript"
    },
    "eks.CfnIdentityProviderConfig": {
        "body": [
            "new eks.CfnIdentityProviderConfig(this, \"${1:id}\", {",
            "  clusterName: \"${2:string}\", // Required",
            "  identityProviderConfigName: \"${3:string}\",",
            "  oidc: {",
            "    clientId: \"${4:string}\",",
            "    groupsClaim: \"${5:string}\",",
            "    groupsPrefix: \"${6:string}\",",
            "    issuerUrl: \"${7:string}\",",
            "    requiredClaims: [],",
            "    usernameClaim: \"${9:string}\",",
            "    usernamePrefix: \"${10:string}\",",
            "  },",
            "  tags: [],",
            "  type: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: eks.CfnIdentityProviderConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.CfnIdentityProviderConfig",
            "Attributes: ",
            "  attrIdentityProviderConfigArn"
        ],
        "prefix": "l1-eks-identityproviderconfig",
        "scope": "javascript,typescript"
    },
    "eks.CfnNodegroup": {
        "body": [
            "new eks.CfnNodegroup(this, \"${1:id}\", {",
            "  amiType: \"${2:string}\",",
            "  capacityType: \"${3:string}\",",
            "  clusterName: \"${4:string}\", // Required",
            "  diskSize: ${5:Number},",
            "  forceUpdateEnabled: ${6|false,true|},",
            "  instanceTypes: [],",
            "  labels: ${8:JSON},",
            "  launchTemplate: {",
            "    id: \"${9:string}\",",
            "    name: \"${10:string}\",",
            "    version: \"${11:string}\",",
            "  },",
            "  nodeRole: \"${10:string}\", // Required",
            "  nodegroupName: \"${11:string}\",",
            "  releaseVersion: \"${12:string}\",",
            "  remoteAccess: {",
            "    ec2SshKey: \"${13:string}\",",
            "    sourceSecurityGroups: [],",
            "  },",
            "  scalingConfig: {",
            "    desiredSize: ${14:Number},",
            "    maxSize: ${15:Number},",
            "    minSize: ${16:Number},",
            "  },",
            "  subnets: [], // Required",
            "  tags: ${16:JSON},",
            "  taints: [],",
            "  updateConfig: {",
            "    maxUnavailable: ${18:Number},",
            "    maxUnavailablePercentage: ${19:Number},",
            "  },",
            "  version: \"${19:string}\",",
            "})"
        ],
        "description": [
            "Construct: eks.CfnNodegroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.CfnNodegroup",
            "Attributes: ",
            "  attrClusterName",
            "  attrNodegroupName",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-eks-nodegroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnCacheCluster": {
        "body": [
            "new elasticache.CfnCacheCluster(this, \"${1:id}\", {",
            "  aZMode: \"${2:string}\",",
            "  autoMinorVersionUpgrade: ${3|false,true|},",
            "  cacheNodeType: \"${4:string}\", // Required",
            "  cacheParameterGroupName: \"${5:string}\",",
            "  cacheSecurityGroupNames: [],",
            "  cacheSubnetGroupName: \"${7:string}\",",
            "  clusterName: \"${8:string}\",",
            "  engine: \"${9:string}\", // Required",
            "  engineVersion: \"${10:string}\",",
            "  logDeliveryConfigurations: [],",
            "  notificationTopicArn: \"${12:string}\",",
            "  numCacheNodes: ${13:Number}, // Required",
            "  port: ${14:Number},",
            "  preferredAvailabilityZone: \"${15:string}\",",
            "  preferredAvailabilityZones: [],",
            "  preferredMaintenanceWindow: \"${17:string}\",",
            "  snapshotArns: [],",
            "  snapshotName: \"${19:string}\",",
            "  snapshotRetentionLimit: ${20:Number},",
            "  snapshotWindow: \"${21:string}\",",
            "  tags: [],",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnCacheCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnCacheCluster",
            "Attributes: ",
            "  attrConfigurationEndpoint.Address",
            "  attrConfigurationEndpoint.Port",
            "  attrRedisEndpoint.Address",
            "  attrRedisEndpoint.Port"
        ],
        "prefix": "l1-elasticache-cachecluster",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnGlobalReplicationGroup": {
        "body": [
            "new elasticache.CfnGlobalReplicationGroup(this, \"${1:id}\", {",
            "  automaticFailoverEnabled: ${2|false,true|},",
            "  cacheNodeType: \"${3:string}\",",
            "  cacheParameterGroupName: \"${4:string}\",",
            "  engineVersion: \"${5:string}\",",
            "  globalNodeGroupCount: ${6:Number},",
            "  globalReplicationGroupDescription: \"${7:string}\",",
            "  globalReplicationGroupIdSuffix: \"${8:string}\",",
            "  members: [], // Required",
            "  regionalConfigurations: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnGlobalReplicationGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnGlobalReplicationGroup",
            "Attributes: ",
            "  attrGlobalReplicationGroupId",
            "  attrStatus"
        ],
        "prefix": "l1-elasticache-globalreplicationgroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnParameterGroup": {
        "body": [
            "new elasticache.CfnParameterGroup(this, \"${1:id}\", {",
            "  cacheParameterGroupFamily: \"${2:string}\", // Required",
            "  description: \"${3:string}\", // Required",
            "  properties: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnParameterGroup"
        ],
        "prefix": "l1-elasticache-parametergroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnReplicationGroup": {
        "body": [
            "new elasticache.CfnReplicationGroup(this, \"${1:id}\", {",
            "  atRestEncryptionEnabled: ${2|false,true|},",
            "  authToken: \"${3:string}\",",
            "  autoMinorVersionUpgrade: ${4|false,true|},",
            "  automaticFailoverEnabled: ${5|false,true|},",
            "  cacheNodeType: \"${6:string}\",",
            "  cacheParameterGroupName: \"${7:string}\",",
            "  cacheSecurityGroupNames: [],",
            "  cacheSubnetGroupName: \"${9:string}\",",
            "  dataTieringEnabled: ${10|false,true|},",
            "  engine: \"${11:string}\",",
            "  engineVersion: \"${12:string}\",",
            "  globalReplicationGroupId: \"${13:string}\",",
            "  kmsKeyId: \"${14:string}\",",
            "  logDeliveryConfigurations: [],",
            "  multiAZEnabled: ${16|false,true|},",
            "  nodeGroupConfiguration: [],",
            "  notificationTopicArn: \"${18:string}\",",
            "  numCacheClusters: ${19:Number},",
            "  numNodeGroups: ${20:Number},",
            "  port: ${21:Number},",
            "  preferredCacheClusterAZs: [],",
            "  preferredMaintenanceWindow: \"${23:string}\",",
            "  primaryClusterId: \"${24:string}\",",
            "  replicasPerNodeGroup: ${25:Number},",
            "  replicationGroupDescription: \"${26:string}\", // Required",
            "  replicationGroupId: \"${27:string}\",",
            "  securityGroupIds: [],",
            "  snapshotArns: [],",
            "  snapshotName: \"${30:string}\",",
            "  snapshotRetentionLimit: ${31:Number},",
            "  snapshotWindow: \"${32:string}\",",
            "  snapshottingClusterId: \"${33:string}\",",
            "  tags: [],",
            "  transitEncryptionEnabled: ${35|false,true|},",
            "  userGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnReplicationGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnReplicationGroup",
            "Attributes: ",
            "  attrConfigurationEndPoint.Address",
            "  attrConfigurationEndPoint.Port",
            "  attrPrimaryEndPoint.Address",
            "  attrPrimaryEndPoint.Port",
            "  attrReadEndPoint.Addresses",
            "  attrReadEndPoint.Addresses.List",
            "  attrReadEndPoint.Ports",
            "  attrReadEndPoint.Ports.List",
            "  attrReaderEndPoint.Address",
            "  attrReaderEndPoint.Port"
        ],
        "prefix": "l1-elasticache-replicationgroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnSecurityGroup": {
        "body": [
            "new elasticache.CfnSecurityGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnSecurityGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnSecurityGroup"
        ],
        "prefix": "l1-elasticache-securitygroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnSecurityGroupIngress": {
        "body": [
            "new elasticache.CfnSecurityGroupIngress(this, \"${1:id}\", {",
            "  cacheSecurityGroupName: \"${2:string}\", // Required",
            "  eC2SecurityGroupName: \"${3:string}\", // Required",
            "  eC2SecurityGroupOwnerId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnSecurityGroupIngress",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnSecurityGroupIngress"
        ],
        "prefix": "l1-elasticache-securitygroupingress",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnSubnetGroup": {
        "body": [
            "new elasticache.CfnSubnetGroup(this, \"${1:id}\", {",
            "  cacheSubnetGroupName: \"${2:string}\",",
            "  description: \"${3:string}\", // Required",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnSubnetGroup"
        ],
        "prefix": "l1-elasticache-subnetgroup",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnUser": {
        "body": [
            "new elasticache.CfnUser(this, \"${1:id}\", {",
            "  accessString: \"${2:string}\",",
            "  engine: \"${3:string}\", // Required",
            "  noPasswordRequired: ${4|false,true|},",
            "  passwords: [],",
            "  userId: \"${6:string}\", // Required",
            "  userName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnUser",
            "Attributes: ",
            "  attrStatus",
            "  attrArn"
        ],
        "prefix": "l1-elasticache-user",
        "scope": "javascript,typescript"
    },
    "elasticache.CfnUserGroup": {
        "body": [
            "new elasticache.CfnUserGroup(this, \"${1:id}\", {",
            "  engine: \"${2:string}\", // Required",
            "  userGroupId: \"${3:string}\", // Required",
            "  userIds: [],",
            "})"
        ],
        "description": [
            "Construct: elasticache.CfnUserGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticache.CfnUserGroup",
            "Attributes: ",
            "  attrStatus",
            "  attrArn"
        ],
        "prefix": "l1-elasticache-usergroup",
        "scope": "javascript,typescript"
    },
    "elasticbeanstalk.CfnApplication": {
        "body": [
            "new elasticbeanstalk.CfnApplication(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  resourceLifecycleConfig: {",
            "    serviceRole: \"${4:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: elasticbeanstalk.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticbeanstalk.CfnApplication"
        ],
        "prefix": "l1-elasticbeanstalk-application",
        "scope": "javascript,typescript"
    },
    "elasticbeanstalk.CfnApplicationVersion": {
        "body": [
            "new elasticbeanstalk.CfnApplicationVersion(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  sourceBundle: {",
            "    s3Bucket: \"${4:string}\",",
            "    s3Key: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: elasticbeanstalk.CfnApplicationVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticbeanstalk.CfnApplicationVersion"
        ],
        "prefix": "l1-elasticbeanstalk-applicationversion",
        "scope": "javascript,typescript"
    },
    "elasticbeanstalk.CfnConfigurationTemplate": {
        "body": [
            "new elasticbeanstalk.CfnConfigurationTemplate(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  environmentId: \"${4:string}\",",
            "  optionSettings: [],",
            "  platformArn: \"${6:string}\",",
            "  solutionStackName: \"${7:string}\",",
            "  sourceConfiguration: {",
            "    applicationName: \"${8:string}\",",
            "    templateName: \"${9:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: elasticbeanstalk.CfnConfigurationTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticbeanstalk.CfnConfigurationTemplate"
        ],
        "prefix": "l1-elasticbeanstalk-configurationtemplate",
        "scope": "javascript,typescript"
    },
    "elasticbeanstalk.CfnEnvironment": {
        "body": [
            "new elasticbeanstalk.CfnEnvironment(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  cNAMEPrefix: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  environmentName: \"${5:string}\",",
            "  operationsRole: \"${6:string}\",",
            "  optionSettings: [],",
            "  platformArn: \"${8:string}\",",
            "  solutionStackName: \"${9:string}\",",
            "  tags: [],",
            "  templateName: \"${11:string}\",",
            "  tier: {",
            "    name: \"${12:string}\",",
            "    type: \"${13:string}\",",
            "    version: \"${14:string}\",",
            "  },",
            "  versionLabel: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: elasticbeanstalk.CfnEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticbeanstalk.CfnEnvironment",
            "Attributes: ",
            "  attrEndpointURL"
        ],
        "prefix": "l1-elasticbeanstalk-environment",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancing.CfnLoadBalancer": {
        "body": [
            "new elasticloadbalancing.CfnLoadBalancer(this, \"${1:id}\", {",
            "  accessLoggingPolicy: {",
            "    emitInterval: ${2:Number},",
            "    enabled: ${3|false,true|},",
            "    s3BucketName: \"${4:string}\",",
            "    s3BucketPrefix: \"${5:string}\",",
            "  },",
            "  appCookieStickinessPolicy: [],",
            "  availabilityZones: [],",
            "  connectionDrainingPolicy: {",
            "    enabled: ${5|false,true|},",
            "    timeout: ${6:Number},",
            "  },",
            "  connectionSettings: {",
            "    idleTimeout: ${6:Number},",
            "  },",
            "  crossZone: ${7|false,true|},",
            "  healthCheck: {",
            "    healthyThreshold: \"${8:string}\",",
            "    interval: \"${9:string}\",",
            "    target: \"${10:string}\",",
            "    timeout: \"${11:string}\",",
            "    unhealthyThreshold: \"${12:string}\",",
            "  },",
            "  instances: [],",
            "  lBCookieStickinessPolicy: [],",
            "  listeners: [], // Required",
            "  loadBalancerName: \"${12:string}\",",
            "  policies: [],",
            "  scheme: \"${14:string}\",",
            "  securityGroups: [],",
            "  subnets: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancing.CfnLoadBalancer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancing.CfnLoadBalancer",
            "Attributes: ",
            "  attrCanonicalHostedZoneName",
            "  attrCanonicalHostedZoneNameID",
            "  attrDNSName",
            "  attrSourceSecurityGroup.GroupName",
            "  attrSourceSecurityGroup.OwnerAlias"
        ],
        "prefix": "l1-elasticloadbalancing-loadbalancer",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancingv2.CfnListener": {
        "body": [
            "new elasticloadbalancingv2.CfnListener(this, \"${1:id}\", {",
            "  alpnPolicy: [],",
            "  certificates: [],",
            "  defaultActions: [], // Required",
            "  loadBalancerArn: \"${5:string}\", // Required",
            "  port: ${6:Number},",
            "  protocol: \"${7:string}\",",
            "  sslPolicy: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancingv2.CfnListener",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancingv2.CfnListener",
            "Attributes: ",
            "  attrListenerArn"
        ],
        "prefix": "l1-elasticloadbalancingv2-listener",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancingv2.CfnListenerCertificate": {
        "body": [
            "new elasticloadbalancingv2.CfnListenerCertificate(this, \"${1:id}\", {",
            "  certificates: [], // Required",
            "  listenerArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancingv2.CfnListenerCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancingv2.CfnListenerCertificate"
        ],
        "prefix": "l1-elasticloadbalancingv2-listenercertificate",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancingv2.CfnListenerRule": {
        "body": [
            "new elasticloadbalancingv2.CfnListenerRule(this, \"${1:id}\", {",
            "  actions: [], // Required",
            "  conditions: [], // Required",
            "  listenerArn: \"${4:string}\", // Required",
            "  priority: ${5:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancingv2.CfnListenerRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancingv2.CfnListenerRule",
            "Attributes: ",
            "  attrRuleArn",
            "  attrIsDefault"
        ],
        "prefix": "l1-elasticloadbalancingv2-listenerrule",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancingv2.CfnLoadBalancer": {
        "body": [
            "new elasticloadbalancingv2.CfnLoadBalancer(this, \"${1:id}\", {",
            "  ipAddressType: \"${2:string}\",",
            "  loadBalancerAttributes: [],",
            "  name: \"${4:string}\",",
            "  scheme: \"${5:string}\",",
            "  securityGroups: [],",
            "  subnetMappings: [],",
            "  subnets: [],",
            "  tags: [],",
            "  type: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancingv2.CfnLoadBalancer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancingv2.CfnLoadBalancer",
            "Attributes: ",
            "  attrCanonicalHostedZoneID",
            "  attrDNSName",
            "  attrLoadBalancerFullName",
            "  attrLoadBalancerName",
            "  attrSecurityGroups"
        ],
        "prefix": "l1-elasticloadbalancingv2-loadbalancer",
        "scope": "javascript,typescript"
    },
    "elasticloadbalancingv2.CfnTargetGroup": {
        "body": [
            "new elasticloadbalancingv2.CfnTargetGroup(this, \"${1:id}\", {",
            "  healthCheckEnabled: ${2|false,true|},",
            "  healthCheckIntervalSeconds: ${3:Number},",
            "  healthCheckPath: \"${4:string}\",",
            "  healthCheckPort: \"${5:string}\",",
            "  healthCheckProtocol: \"${6:string}\",",
            "  healthCheckTimeoutSeconds: ${7:Number},",
            "  healthyThresholdCount: ${8:Number},",
            "  ipAddressType: \"${9:string}\",",
            "  matcher: {",
            "    grpcCode: \"${10:string}\",",
            "    httpCode: \"${11:string}\",",
            "  },",
            "  name: \"${11:string}\",",
            "  port: ${12:Number},",
            "  protocol: \"${13:string}\",",
            "  protocolVersion: \"${14:string}\",",
            "  tags: [],",
            "  targetGroupAttributes: [],",
            "  targetType: \"${17:string}\",",
            "  targets: [],",
            "  unhealthyThresholdCount: ${19:Number},",
            "  vpcId: \"${20:string}\",",
            "})"
        ],
        "description": [
            "Construct: elasticloadbalancingv2.CfnTargetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticloadbalancingv2.CfnTargetGroup",
            "Attributes: ",
            "  attrLoadBalancerArns",
            "  attrTargetGroupFullName",
            "  attrTargetGroupName"
        ],
        "prefix": "l1-elasticloadbalancingv2-targetgroup",
        "scope": "javascript,typescript"
    },
    "elasticsearch.CfnDomain": {
        "body": [
            "new elasticsearch.CfnDomain(this, \"${1:id}\", {",
            "  accessPolicies: ${2:JSON},",
            "  advancedOptions: {",
            "  },",
            "  advancedSecurityOptions: {",
            "    enabled: ${4|false,true|},",
            "    internalUserDatabaseEnabled: ${5|false,true|},",
            "  },",
            "  cognitoOptions: {",
            "    enabled: ${5|false,true|},",
            "    identityPoolId: \"${6:string}\",",
            "    roleArn: \"${7:string}\",",
            "    userPoolId: \"${8:string}\",",
            "  },",
            "  domainEndpointOptions: {",
            "    customEndpoint: \"${6:string}\",",
            "    customEndpointCertificateArn: \"${7:string}\",",
            "    customEndpointEnabled: ${8|false,true|},",
            "    enforceHTTPS: ${9|false,true|},",
            "    tLSSecurityPolicy: \"${10:string}\",",
            "  },",
            "  domainName: \"${7:string}\",",
            "  eBSOptions: {",
            "    eBSEnabled: ${8|false,true|},",
            "    iops: ${9:Number},",
            "    volumeSize: ${10:Number},",
            "    volumeType: \"${11:string}\",",
            "  },",
            "  elasticsearchClusterConfig: {",
            "    dedicatedMasterCount: ${10:Number},",
            "    dedicatedMasterEnabled: ${11|false,true|},",
            "    dedicatedMasterType: \"${12:string}\",",
            "    instanceCount: ${13:Number},",
            "    instanceType: \"${14:string}\",",
            "    warmCount: ${15:Number},",
            "    warmEnabled: ${16|false,true|},",
            "    warmType: \"${17:string}\",",
            "    zoneAwarenessEnabled: ${19|false,true|},",
            "  },",
            "  elasticsearchVersion: \"${10:string}\",",
            "  encryptionAtRestOptions: {",
            "    enabled: ${11|false,true|},",
            "    kmsKeyId: \"${12:string}\",",
            "  },",
            "  logPublishingOptions: {",
            "  },",
            "  nodeToNodeEncryptionOptions: {",
            "    enabled: ${13|false,true|},",
            "  },",
            "  snapshotOptions: {",
            "    automatedSnapshotStartHour: ${14:Number},",
            "  },",
            "  tags: [],",
            "  vPCOptions: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: elasticsearch.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-elasticsearch.CfnDomain",
            "Attributes: ",
            "  attrArn",
            "  attrDomainArn",
            "  attrDomainEndpoint"
        ],
        "prefix": "l1-elasticsearch-domain",
        "scope": "javascript,typescript"
    },
    "emr.CfnCluster": {
        "body": [
            "new emr.CfnCluster(this, \"${1:id}\", {",
            "  additionalInfo: ${2:JSON},",
            "  applications: [],",
            "  autoScalingRole: \"${4:string}\",",
            "  bootstrapActions: [],",
            "  configurations: [],",
            "  customAmiId: \"${7:string}\",",
            "  ebsRootVolumeSize: ${8:Number},",
            "  instances: {",
            "    additionalMasterSecurityGroups: [],",
            "    additionalSlaveSecurityGroups: [],",
            "    ec2KeyName: \"${13:string}\",",
            "    ec2SubnetId: \"${14:string}\",",
            "    ec2SubnetIds: [],",
            "    emrManagedMasterSecurityGroup: \"${16:string}\",",
            "    emrManagedSlaveSecurityGroup: \"${17:string}\",",
            "    hadoopVersion: \"${18:string}\",",
            "    keepJobFlowAliveWhenNoSteps: ${19|false,true|},",
            "    serviceAccessSecurityGroup: \"${23:string}\",",
            "    terminationProtected: ${24|false,true|},",
            "  },",
            "  jobFlowRole: \"${10:string}\", // Required",
            "  kerberosAttributes: {",
            "    aDDomainJoinPassword: \"${11:string}\",",
            "    aDDomainJoinUser: \"${12:string}\",",
            "    crossRealmTrustPrincipalPassword: \"${13:string}\",",
            "    kdcAdminPassword: \"${14:string}\",",
            "    realm: \"${15:string}\",",
            "  },",
            "  logEncryptionKmsKeyId: \"${12:string}\",",
            "  logUri: \"${13:string}\",",
            "  managedScalingPolicy: {",
            "  },",
            "  name: \"${15:string}\", // Required",
            "  releaseLabel: \"${16:string}\",",
            "  scaleDownBehavior: \"${17:string}\",",
            "  securityConfiguration: \"${18:string}\",",
            "  serviceRole: \"${19:string}\", // Required",
            "  stepConcurrencyLevel: ${20:Number},",
            "  steps: [],",
            "  tags: [],",
            "  visibleToAllUsers: ${23|false,true|},",
            "})"
        ],
        "description": [
            "Construct: emr.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnCluster",
            "Attributes: ",
            "  attrMasterPublicDNS"
        ],
        "prefix": "l1-emr-cluster",
        "scope": "javascript,typescript"
    },
    "emr.CfnInstanceFleetConfig": {
        "body": [
            "new emr.CfnInstanceFleetConfig(this, \"${1:id}\", {",
            "  clusterId: \"${2:string}\", // Required",
            "  instanceFleetType: \"${3:string}\", // Required",
            "  instanceTypeConfigs: [],",
            "  launchSpecifications: {",
            "  },",
            "  name: \"${6:string}\",",
            "  targetOnDemandCapacity: ${7:Number},",
            "  targetSpotCapacity: ${8:Number},",
            "})"
        ],
        "description": [
            "Construct: emr.CfnInstanceFleetConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnInstanceFleetConfig"
        ],
        "prefix": "l1-emr-instancefleetconfig",
        "scope": "javascript,typescript"
    },
    "emr.CfnInstanceGroupConfig": {
        "body": [
            "new emr.CfnInstanceGroupConfig(this, \"${1:id}\", {",
            "  autoScalingPolicy: {",
            "    rules: [],",
            "  },",
            "  bidPrice: \"${3:string}\",",
            "  configurations: [],",
            "  customAmiId: \"${5:string}\",",
            "  ebsConfiguration: {",
            "    ebsBlockDeviceConfigs: [],",
            "    ebsOptimized: ${7|false,true|},",
            "  },",
            "  instanceCount: ${7:Number}, // Required",
            "  instanceRole: \"${8:string}\", // Required",
            "  instanceType: \"${9:string}\", // Required",
            "  jobFlowId: \"${10:string}\", // Required",
            "  market: \"${11:string}\",",
            "  name: \"${12:string}\",",
            "})"
        ],
        "description": [
            "Construct: emr.CfnInstanceGroupConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnInstanceGroupConfig"
        ],
        "prefix": "l1-emr-instancegroupconfig",
        "scope": "javascript,typescript"
    },
    "emr.CfnSecurityConfiguration": {
        "body": [
            "new emr.CfnSecurityConfiguration(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  securityConfiguration: ${3:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: emr.CfnSecurityConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnSecurityConfiguration"
        ],
        "prefix": "l1-emr-securityconfiguration",
        "scope": "javascript,typescript"
    },
    "emr.CfnStep": {
        "body": [
            "new emr.CfnStep(this, \"${1:id}\", {",
            "  actionOnFailure: \"${2:string}\", // Required",
            "  hadoopJarStep: {",
            "    args: [],",
            "    jar: \"${4:string}\",",
            "    mainClass: \"${5:string}\",",
            "    stepProperties: [],",
            "  },",
            "  jobFlowId: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: emr.CfnStep",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnStep"
        ],
        "prefix": "l1-emr-step",
        "scope": "javascript,typescript"
    },
    "emr.CfnStudio": {
        "body": [
            "new emr.CfnStudio(this, \"${1:id}\", {",
            "  authMode: \"${2:string}\", // Required",
            "  defaultS3Location: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  engineSecurityGroupId: \"${5:string}\", // Required",
            "  idpAuthUrl: \"${6:string}\",",
            "  idpRelayStateParameterName: \"${7:string}\",",
            "  name: \"${8:string}\", // Required",
            "  serviceRole: \"${9:string}\", // Required",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "  userRole: \"${12:string}\",",
            "  vpcId: \"${13:string}\", // Required",
            "  workspaceSecurityGroupId: \"${14:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: emr.CfnStudio",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnStudio",
            "Attributes: ",
            "  attrArn",
            "  attrStudioId",
            "  attrUrl"
        ],
        "prefix": "l1-emr-studio",
        "scope": "javascript,typescript"
    },
    "emr.CfnStudioSessionMapping": {
        "body": [
            "new emr.CfnStudioSessionMapping(this, \"${1:id}\", {",
            "  identityName: \"${2:string}\", // Required",
            "  identityType: \"${3:string}\", // Required",
            "  sessionPolicyArn: \"${4:string}\", // Required",
            "  studioId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: emr.CfnStudioSessionMapping",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emr.CfnStudioSessionMapping"
        ],
        "prefix": "l1-emr-studiosessionmapping",
        "scope": "javascript,typescript"
    },
    "emrcontainers.CfnVirtualCluster": {
        "body": [
            "new emrcontainers.CfnVirtualCluster(this, \"${1:id}\", {",
            "  containerProvider: {",
            "    id: \"${2:string}\",",
            "    type: \"${4:string}\",",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: emrcontainers.CfnVirtualCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-emrcontainers.CfnVirtualCluster",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-emrcontainers-virtualcluster",
        "scope": "javascript,typescript"
    },
    "events.CfnApiDestination": {
        "body": [
            "new events.CfnApiDestination(this, \"${1:id}\", {",
            "  connectionArn: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  httpMethod: \"${4:string}\", // Required",
            "  invocationEndpoint: \"${5:string}\", // Required",
            "  invocationRateLimitPerSecond: ${6:Number},",
            "  name: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: events.CfnApiDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnApiDestination",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-events-apidestination",
        "scope": "javascript,typescript"
    },
    "events.CfnArchive": {
        "body": [
            "new events.CfnArchive(this, \"${1:id}\", {",
            "  archiveName: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  eventPattern: ${4:JSON},",
            "  retentionDays: ${5:Number},",
            "  sourceArn: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: events.CfnArchive",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnArchive",
            "Attributes: ",
            "  attrArchiveName",
            "  attrArn"
        ],
        "prefix": "l1-events-archive",
        "scope": "javascript,typescript"
    },
    "events.CfnConnection": {
        "body": [
            "new events.CfnConnection(this, \"${1:id}\", {",
            "  authParameters: {",
            "  },",
            "  authorizationType: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: events.CfnConnection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnConnection",
            "Attributes: ",
            "  attrArn",
            "  attrSecretArn"
        ],
        "prefix": "l1-events-connection",
        "scope": "javascript,typescript"
    },
    "events.CfnEndpoint": {
        "body": [
            "new events.CfnEndpoint(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  eventBuses: [], // Required",
            "  name: \"${4:string}\", // Required",
            "  replicationConfig: {",
            "    state: \"${5:string}\",",
            "  },",
            "  roleArn: \"${6:string}\",",
            "  routingConfig: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: events.CfnEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnEndpoint",
            "Attributes: ",
            "  attrArn",
            "  attrEndpointId",
            "  attrEndpointUrl",
            "  attrState",
            "  attrStateReason"
        ],
        "prefix": "l1-events-endpoint",
        "scope": "javascript,typescript"
    },
    "events.CfnEventBus": {
        "body": [
            "new events.CfnEventBus(this, \"${1:id}\", {",
            "  eventSourceName: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: events.CfnEventBus",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnEventBus",
            "Attributes: ",
            "  attrPolicy",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-events-eventbus",
        "scope": "javascript,typescript"
    },
    "events.CfnEventBusPolicy": {
        "body": [
            "new events.CfnEventBusPolicy(this, \"${1:id}\", {",
            "  action: \"${2:string}\",",
            "  condition: {",
            "    key: \"${3:string}\",",
            "    type: \"${4:string}\",",
            "    value: \"${5:string}\",",
            "  },",
            "  eventBusName: \"${4:string}\",",
            "  principal: \"${5:string}\",",
            "  statement: ${6:JSON},",
            "  statementId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: events.CfnEventBusPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnEventBusPolicy"
        ],
        "prefix": "l1-events-eventbuspolicy",
        "scope": "javascript,typescript"
    },
    "events.CfnRule": {
        "body": [
            "new events.CfnRule(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  eventBusName: \"${3:string}\",",
            "  eventPattern: ${4:JSON},",
            "  name: \"${5:string}\",",
            "  roleArn: \"${6:string}\",",
            "  scheduleExpression: \"${7:string}\",",
            "  state: \"${8:string}\",",
            "  targets: [],",
            "})"
        ],
        "description": [
            "Construct: events.CfnRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-events.CfnRule",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-events-rule",
        "scope": "javascript,typescript"
    },
    "eventschemas.CfnDiscoverer": {
        "body": [
            "new eventschemas.CfnDiscoverer(this, \"${1:id}\", {",
            "  crossAccount: ${2|false,true|},",
            "  description: \"${3:string}\",",
            "  sourceArn: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: eventschemas.CfnDiscoverer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eventschemas.CfnDiscoverer",
            "Attributes: ",
            "  attrDiscovererArn",
            "  attrDiscovererId",
            "  attrCrossAccount"
        ],
        "prefix": "l1-eventschemas-discoverer",
        "scope": "javascript,typescript"
    },
    "eventschemas.CfnRegistry": {
        "body": [
            "new eventschemas.CfnRegistry(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  registryName: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: eventschemas.CfnRegistry",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eventschemas.CfnRegistry",
            "Attributes: ",
            "  attrRegistryName",
            "  attrRegistryArn"
        ],
        "prefix": "l1-eventschemas-registry",
        "scope": "javascript,typescript"
    },
    "eventschemas.CfnRegistryPolicy": {
        "body": [
            "new eventschemas.CfnRegistryPolicy(this, \"${1:id}\", {",
            "  policy: ${2:JSON}, // Required",
            "  registryName: \"${3:string}\", // Required",
            "  revisionId: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: eventschemas.CfnRegistryPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eventschemas.CfnRegistryPolicy",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-eventschemas-registrypolicy",
        "scope": "javascript,typescript"
    },
    "eventschemas.CfnSchema": {
        "body": [
            "new eventschemas.CfnSchema(this, \"${1:id}\", {",
            "  content: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  registryName: \"${4:string}\", // Required",
            "  schemaName: \"${5:string}\",",
            "  tags: [],",
            "  type: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: eventschemas.CfnSchema",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eventschemas.CfnSchema",
            "Attributes: ",
            "  attrSchemaVersion",
            "  attrSchemaArn",
            "  attrSchemaName"
        ],
        "prefix": "l1-eventschemas-schema",
        "scope": "javascript,typescript"
    },
    "evidently.CfnExperiment": {
        "body": [
            "new evidently.CfnExperiment(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  metricGoals: [], // Required",
            "  name: \"${4:string}\", // Required",
            "  onlineAbConfig: {",
            "    controlTreatmentName: \"${5:string}\",",
            "    treatmentWeights: [],",
            "  },",
            "  project: \"${6:string}\", // Required",
            "  randomizationSalt: \"${7:string}\",",
            "  runningStatus: {",
            "    analysisCompleteTime: \"${8:string}\",",
            "    desiredState: \"${9:string}\",",
            "    reason: \"${10:string}\",",
            "    status: \"${11:string}\",",
            "  },",
            "  samplingRate: ${9:Number},",
            "  tags: [],",
            "  treatments: [], // Required",
            "})"
        ],
        "description": [
            "Construct: evidently.CfnExperiment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-evidently.CfnExperiment",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-evidently-experiment",
        "scope": "javascript,typescript"
    },
    "evidently.CfnFeature": {
        "body": [
            "new evidently.CfnFeature(this, \"${1:id}\", {",
            "  defaultVariation: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  entityOverrides: [],",
            "  evaluationStrategy: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  project: \"${7:string}\", // Required",
            "  tags: [],",
            "  variations: [], // Required",
            "})"
        ],
        "description": [
            "Construct: evidently.CfnFeature",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-evidently.CfnFeature",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-evidently-feature",
        "scope": "javascript,typescript"
    },
    "evidently.CfnLaunch": {
        "body": [
            "new evidently.CfnLaunch(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  executionStatus: {",
            "    desiredState: \"${3:string}\",",
            "    reason: \"${4:string}\",",
            "    status: \"${5:string}\",",
            "  },",
            "  groups: [], // Required",
            "  metricMonitors: [],",
            "  name: \"${6:string}\", // Required",
            "  project: \"${7:string}\", // Required",
            "  randomizationSalt: \"${8:string}\",",
            "  scheduledSplitsConfig: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: evidently.CfnLaunch",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-evidently.CfnLaunch",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-evidently-launch",
        "scope": "javascript,typescript"
    },
    "evidently.CfnProject": {
        "body": [
            "new evidently.CfnProject(this, \"${1:id}\", {",
            "  dataDelivery: {",
            "    logGroup: \"${2:string}\",",
            "  },",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: evidently.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-evidently.CfnProject",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-evidently-project",
        "scope": "javascript,typescript"
    },
    "finspace.CfnEnvironment": {
        "body": [
            "new finspace.CfnEnvironment(this, \"${1:id}\", {",
            "  dataBundles: [],",
            "  description: \"${3:string}\",",
            "  federationMode: \"${4:string}\",",
            "  federationParameters: {",
            "    applicationCallBackURL: \"${5:string}\",",
            "    attributeMap: ${6:JSON},",
            "    federationProviderName: \"${7:string}\",",
            "    federationURN: \"${8:string}\",",
            "    samlMetadataDocument: \"${9:string}\",",
            "    samlMetadataURL: \"${10:string}\",",
            "  },",
            "  kmsKeyId: \"${6:string}\",",
            "  name: \"${7:string}\", // Required",
            "  superuserParameters: {",
            "    emailAddress: \"${8:string}\",",
            "    firstName: \"${9:string}\",",
            "    lastName: \"${10:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: finspace.CfnEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-finspace.CfnEnvironment",
            "Attributes: ",
            "  attrEnvironmentId",
            "  attrAwsAccountId",
            "  attrStatus",
            "  attrEnvironmentUrl",
            "  attrEnvironmentArn",
            "  attrSageMakerStudioDomainUrl",
            "  attrDedicatedServiceAccountId"
        ],
        "prefix": "l1-finspace-environment",
        "scope": "javascript,typescript"
    },
    "fis.CfnExperimentTemplate": {
        "body": [
            "new fis.CfnExperimentTemplate(this, \"${1:id}\", {",
            "  actions: {",
            "  },",
            "  description: \"${3:string}\", // Required",
            "  logConfiguration: {",
            "    cloudWatchLogsConfiguration: ${4:JSON},",
            "    logSchemaVersion: ${5:Number},",
            "    s3Configuration: ${6:JSON},",
            "  },",
            "  roleArn: \"${5:string}\", // Required",
            "  stopConditions: [], // Required",
            "  tags: {",
            "  },",
            "  targets: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: fis.CfnExperimentTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fis.CfnExperimentTemplate",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-fis-experimenttemplate",
        "scope": "javascript,typescript"
    },
    "fms.CfnNotificationChannel": {
        "body": [
            "new fms.CfnNotificationChannel(this, \"${1:id}\", {",
            "  snsRoleName: \"${2:string}\", // Required",
            "  snsTopicArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: fms.CfnNotificationChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fms.CfnNotificationChannel"
        ],
        "prefix": "l1-fms-notificationchannel",
        "scope": "javascript,typescript"
    },
    "fms.CfnPolicy": {
        "body": [
            "new fms.CfnPolicy(this, \"${1:id}\", {",
            "  deleteAllPolicyResources: ${2|false,true|},",
            "  excludeMap: {",
            "    aCCOUNT: [],",
            "    oRGUNIT: [],",
            "  },",
            "  excludeResourceTags: ${4|false,true|}, // Required",
            "  includeMap: {",
            "    aCCOUNT: [],",
            "    oRGUNIT: [],",
            "  },",
            "  policyName: \"${6:string}\", // Required",
            "  remediationEnabled: ${7|false,true|}, // Required",
            "  resourceTags: [],",
            "  resourceType: \"${9:string}\", // Required",
            "  resourceTypeList: [],",
            "  resourcesCleanUp: ${11|false,true|},",
            "  securityServicePolicyData: ${12:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: fms.CfnPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fms.CfnPolicy",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-fms-policy",
        "scope": "javascript,typescript"
    },
    "forecast.CfnDataset": {
        "body": [
            "new forecast.CfnDataset(this, \"${1:id}\", {",
            "  dataFrequency: \"${2:string}\",",
            "  datasetName: \"${3:string}\", // Required",
            "  datasetType: \"${4:string}\", // Required",
            "  domain: \"${5:string}\", // Required",
            "  encryptionConfig: ${6:JSON},",
            "  schema: ${7:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: forecast.CfnDataset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-forecast.CfnDataset",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-forecast-dataset",
        "scope": "javascript,typescript"
    },
    "forecast.CfnDatasetGroup": {
        "body": [
            "new forecast.CfnDatasetGroup(this, \"${1:id}\", {",
            "  datasetArns: [],",
            "  datasetGroupName: \"${3:string}\", // Required",
            "  domain: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: forecast.CfnDatasetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-forecast.CfnDatasetGroup",
            "Attributes: ",
            "  attrDatasetGroupArn"
        ],
        "prefix": "l1-forecast-datasetgroup",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnDetector": {
        "body": [
            "new frauddetector.CfnDetector(this, \"${1:id}\", {",
            "  associatedModels: [],",
            "  description: \"${3:string}\",",
            "  detectorId: \"${4:string}\", // Required",
            "  detectorVersionStatus: \"${5:string}\",",
            "  eventType: {",
            "    arn: \"${6:string}\",",
            "    createdTime: \"${7:string}\",",
            "    description: \"${8:string}\",",
            "    entityTypes: [],",
            "    eventVariables: [],",
            "    inline: ${11|false,true|},",
            "    labels: [],",
            "    lastUpdatedTime: \"${13:string}\",",
            "    name: \"${14:string}\",",
            "    tags: [],",
            "  },",
            "  ruleExecutionMode: \"${7:string}\",",
            "  rules: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnDetector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnDetector",
            "Attributes: ",
            "  attrDetectorVersionId",
            "  attrEventType.Arn",
            "  attrEventType.CreatedTime",
            "  attrEventType.LastUpdatedTime",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-detector",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnEntityType": {
        "body": [
            "new frauddetector.CfnEntityType(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnEntityType",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnEntityType",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-entitytype",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnEventType": {
        "body": [
            "new frauddetector.CfnEventType(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  entityTypes: [], // Required",
            "  eventVariables: [], // Required",
            "  labels: [], // Required",
            "  name: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnEventType",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnEventType",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-eventtype",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnLabel": {
        "body": [
            "new frauddetector.CfnLabel(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnLabel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnLabel",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-label",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnOutcome": {
        "body": [
            "new frauddetector.CfnOutcome(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnOutcome",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnOutcome",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-outcome",
        "scope": "javascript,typescript"
    },
    "frauddetector.CfnVariable": {
        "body": [
            "new frauddetector.CfnVariable(this, \"${1:id}\", {",
            "  dataSource: \"${2:string}\", // Required",
            "  dataType: \"${3:string}\", // Required",
            "  defaultValue: \"${4:string}\", // Required",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  tags: [],",
            "  variableType: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: frauddetector.CfnVariable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-frauddetector.CfnVariable",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-frauddetector-variable",
        "scope": "javascript,typescript"
    },
    "fsx.CfnFileSystem": {
        "body": [
            "new fsx.CfnFileSystem(this, \"${1:id}\", {",
            "  backupId: \"${2:string}\",",
            "  fileSystemType: \"${3:string}\", // Required",
            "  fileSystemTypeVersion: \"${4:string}\",",
            "  kmsKeyId: \"${5:string}\",",
            "  lustreConfiguration: {",
            "    autoImportPolicy: \"${6:string}\",",
            "    automaticBackupRetentionDays: ${7:Number},",
            "    copyTagsToBackups: ${8|false,true|},",
            "    dailyAutomaticBackupStartTime: \"${9:string}\",",
            "    dataCompressionType: \"${10:string}\",",
            "    deploymentType: \"${11:string}\",",
            "    driveCacheType: \"${12:string}\",",
            "    exportPath: \"${13:string}\",",
            "    importPath: \"${14:string}\",",
            "    importedFileChunkSize: ${15:Number},",
            "    perUnitStorageThroughput: ${16:Number},",
            "    weeklyMaintenanceStartTime: \"${17:string}\",",
            "  },",
            "  ontapConfiguration: {",
            "    automaticBackupRetentionDays: ${7:Number},",
            "    dailyAutomaticBackupStartTime: \"${8:string}\",",
            "    deploymentType: \"${9:string}\",",
            "    endpointIpAddressRange: \"${11:string}\",",
            "    fsxAdminPassword: \"${12:string}\",",
            "    preferredSubnetId: \"${13:string}\",",
            "    routeTableIds: [],",
            "    throughputCapacity: ${15:Number},",
            "    weeklyMaintenanceStartTime: \"${16:string}\",",
            "  },",
            "  openZFSConfiguration: {",
            "    automaticBackupRetentionDays: ${8:Number},",
            "    copyTagsToBackups: ${9|false,true|},",
            "    copyTagsToVolumes: ${10|false,true|},",
            "    dailyAutomaticBackupStartTime: \"${11:string}\",",
            "    deploymentType: \"${12:string}\",",
            "    options: [],",
            "    throughputCapacity: ${16:Number},",
            "    weeklyMaintenanceStartTime: \"${17:string}\",",
            "  },",
            "  securityGroupIds: [],",
            "  storageCapacity: ${10:Number},",
            "  storageType: \"${11:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "  windowsConfiguration: {",
            "    activeDirectoryId: \"${14:string}\",",
            "    aliases: [],",
            "    automaticBackupRetentionDays: ${17:Number},",
            "    copyTagsToBackups: ${18|false,true|},",
            "    dailyAutomaticBackupStartTime: \"${19:string}\",",
            "    deploymentType: \"${20:string}\",",
            "    preferredSubnetId: \"${21:string}\",",
            "    throughputCapacity: ${23:Number},",
            "    weeklyMaintenanceStartTime: \"${24:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: fsx.CfnFileSystem",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fsx.CfnFileSystem",
            "Attributes: ",
            "  attrRootVolumeId",
            "  attrDNSName",
            "  attrLustreMountName"
        ],
        "prefix": "l1-fsx-filesystem",
        "scope": "javascript,typescript"
    },
    "fsx.CfnSnapshot": {
        "body": [
            "new fsx.CfnSnapshot(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  tags: [],",
            "  volumeId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: fsx.CfnSnapshot",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fsx.CfnSnapshot",
            "Attributes: ",
            "  attrResourceARN"
        ],
        "prefix": "l1-fsx-snapshot",
        "scope": "javascript,typescript"
    },
    "fsx.CfnStorageVirtualMachine": {
        "body": [
            "new fsx.CfnStorageVirtualMachine(this, \"${1:id}\", {",
            "  activeDirectoryConfiguration: {",
            "    netBiosName: \"${2:string}\",",
            "  },",
            "  fileSystemId: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  rootVolumeSecurityStyle: \"${5:string}\",",
            "  svmAdminPassword: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: fsx.CfnStorageVirtualMachine",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fsx.CfnStorageVirtualMachine",
            "Attributes: ",
            "  attrResourceARN",
            "  attrStorageVirtualMachineId",
            "  attrUUID"
        ],
        "prefix": "l1-fsx-storagevirtualmachine",
        "scope": "javascript,typescript"
    },
    "fsx.CfnVolume": {
        "body": [
            "new fsx.CfnVolume(this, \"${1:id}\", {",
            "  backupId: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  ontapConfiguration: {",
            "    junctionPath: \"${4:string}\",",
            "    securityStyle: \"${5:string}\",",
            "    sizeInMegabytes: \"${6:string}\",",
            "    storageEfficiencyEnabled: \"${7:string}\",",
            "    storageVirtualMachineId: \"${8:string}\",",
            "  },",
            "  openZFSConfiguration: {",
            "    copyTagsToSnapshots: ${5|false,true|},",
            "    dataCompressionType: \"${6:string}\",",
            "    nfsExports: [],",
            "    options: [],",
            "    parentVolumeId: \"${10:string}\",",
            "    readOnly: ${11|false,true|},",
            "    recordSizeKiB: ${12:Number},",
            "    storageCapacityQuotaGiB: ${13:Number},",
            "    storageCapacityReservationGiB: ${14:Number},",
            "    userAndGroupQuotas: [],",
            "  },",
            "  tags: [],",
            "  volumeType: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: fsx.CfnVolume",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-fsx.CfnVolume",
            "Attributes: ",
            "  attrResourceARN",
            "  attrVolumeId",
            "  attrUUID"
        ],
        "prefix": "l1-fsx-volume",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnAlias": {
        "body": [
            "new gamelift.CfnAlias(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  routingStrategy: {",
            "    fleetId: \"${4:string}\",",
            "    message: \"${5:string}\",",
            "    type: \"${6:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnAlias",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnAlias",
            "Attributes: ",
            "  attrAliasId"
        ],
        "prefix": "l1-gamelift-alias",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnBuild": {
        "body": [
            "new gamelift.CfnBuild(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  operatingSystem: \"${3:string}\",",
            "  storageLocation: {",
            "    bucket: \"${4:string}\",",
            "    key: \"${5:string}\",",
            "    objectVersion: \"${6:string}\",",
            "    roleArn: \"${7:string}\",",
            "  },",
            "  version: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnBuild",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnBuild"
        ],
        "prefix": "l1-gamelift-build",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnFleet": {
        "body": [
            "new gamelift.CfnFleet(this, \"${1:id}\", {",
            "  buildId: \"${2:string}\",",
            "  certificateConfiguration: {",
            "    certificateType: \"${3:string}\",",
            "  },",
            "  description: \"${4:string}\",",
            "  desiredEC2Instances: ${5:Number},",
            "  eC2InboundPermissions: [],",
            "  eC2InstanceType: \"${7:string}\",",
            "  fleetType: \"${8:string}\",",
            "  instanceRoleARN: \"${9:string}\",",
            "  locations: [],",
            "  maxSize: ${11:Number},",
            "  metricGroups: [],",
            "  minSize: ${13:Number},",
            "  name: \"${14:string}\",",
            "  newGameSessionProtectionPolicy: \"${15:string}\",",
            "  peerVpcAwsAccountId: \"${16:string}\",",
            "  peerVpcId: \"${17:string}\",",
            "  resourceCreationLimitPolicy: {",
            "    newGameSessionsPerCreator: ${18:Number},",
            "    policyPeriodInMinutes: ${19:Number},",
            "  },",
            "  runtimeConfiguration: {",
            "    gameSessionActivationTimeoutSeconds: ${19:Number},",
            "    maxConcurrentGameSessionActivations: ${20:Number},",
            "    serverProcesses: [],",
            "  },",
            "  scriptId: \"${20:string}\",",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnFleet",
            "Attributes: ",
            "  attrFleetId"
        ],
        "prefix": "l1-gamelift-fleet",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnGameServerGroup": {
        "body": [
            "new gamelift.CfnGameServerGroup(this, \"${1:id}\", {",
            "  autoScalingPolicy: {",
            "    estimatedInstanceWarmup: ${2:Number},",
            "  },",
            "  balancingStrategy: \"${3:string}\",",
            "  deleteOption: \"${4:string}\",",
            "  gameServerGroupName: \"${5:string}\", // Required",
            "  gameServerProtectionPolicy: \"${6:string}\",",
            "  instanceDefinitions: [], // Required",
            "  launchTemplate: {",
            "    launchTemplateId: \"${8:string}\",",
            "    launchTemplateName: \"${9:string}\",",
            "    version: \"${10:string}\",",
            "  },",
            "  maxSize: ${9:Number},",
            "  minSize: ${10:Number},",
            "  roleArn: \"${11:string}\", // Required",
            "  tags: [],",
            "  vpcSubnets: [],",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnGameServerGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnGameServerGroup",
            "Attributes: ",
            "  attrAutoScalingGroupArn",
            "  attrGameServerGroupArn"
        ],
        "prefix": "l1-gamelift-gameservergroup",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnGameSessionQueue": {
        "body": [
            "new gamelift.CfnGameSessionQueue(this, \"${1:id}\", {",
            "  customEventData: \"${2:string}\",",
            "  destinations: [],",
            "  filterConfiguration: {",
            "    allowedLocations: [],",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  notificationTarget: \"${6:string}\",",
            "  playerLatencyPolicies: [],",
            "  priorityConfiguration: {",
            "    locationOrder: [],",
            "    priorityOrder: [],",
            "  },",
            "  tags: [],",
            "  timeoutInSeconds: ${10:Number},",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnGameSessionQueue",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnGameSessionQueue",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-gamelift-gamesessionqueue",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnMatchmakingConfiguration": {
        "body": [
            "new gamelift.CfnMatchmakingConfiguration(this, \"${1:id}\", {",
            "  acceptanceRequired: ${2|false,true|}, // Required",
            "  acceptanceTimeoutSeconds: ${3:Number},",
            "  additionalPlayerCount: ${4:Number},",
            "  backfillMode: \"${5:string}\",",
            "  customEventData: \"${6:string}\",",
            "  description: \"${7:string}\",",
            "  flexMatchMode: \"${8:string}\",",
            "  gameProperties: [],",
            "  gameSessionData: \"${10:string}\",",
            "  gameSessionQueueArns: [],",
            "  name: \"${12:string}\", // Required",
            "  notificationTarget: \"${13:string}\",",
            "  requestTimeoutSeconds: ${14:Number}, // Required",
            "  ruleSetName: \"${15:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnMatchmakingConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnMatchmakingConfiguration",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-gamelift-matchmakingconfiguration",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnMatchmakingRuleSet": {
        "body": [
            "new gamelift.CfnMatchmakingRuleSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  ruleSetBody: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnMatchmakingRuleSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnMatchmakingRuleSet",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-gamelift-matchmakingruleset",
        "scope": "javascript,typescript"
    },
    "gamelift.CfnScript": {
        "body": [
            "new gamelift.CfnScript(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  storageLocation: {",
            "    bucket: \"${3:string}\",",
            "    key: \"${4:string}\",",
            "    objectVersion: \"${5:string}\",",
            "    roleArn: \"${6:string}\",",
            "  },",
            "  tags: [],",
            "  version: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: gamelift.CfnScript",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-gamelift.CfnScript",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-gamelift-script",
        "scope": "javascript,typescript"
    },
    "globalaccelerator.CfnAccelerator": {
        "body": [
            "new globalaccelerator.CfnAccelerator(this, \"${1:id}\", {",
            "  enabled: ${2|false,true|},",
            "  ipAddressType: \"${3:string}\",",
            "  ipAddresses: [],",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: globalaccelerator.CfnAccelerator",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-globalaccelerator.CfnAccelerator",
            "Attributes: ",
            "  attrDnsName",
            "  attrAcceleratorArn"
        ],
        "prefix": "l1-globalaccelerator-accelerator",
        "scope": "javascript,typescript"
    },
    "globalaccelerator.CfnEndpointGroup": {
        "body": [
            "new globalaccelerator.CfnEndpointGroup(this, \"${1:id}\", {",
            "  endpointConfigurations: [],",
            "  endpointGroupRegion: \"${3:string}\", // Required",
            "  healthCheckIntervalSeconds: ${4:Number},",
            "  healthCheckPath: \"${5:string}\",",
            "  healthCheckPort: ${6:Number},",
            "  healthCheckProtocol: \"${7:string}\",",
            "  listenerArn: \"${8:string}\", // Required",
            "  portOverrides: [],",
            "  thresholdCount: ${10:Number},",
            "  trafficDialPercentage: ${11:Number},",
            "})"
        ],
        "description": [
            "Construct: globalaccelerator.CfnEndpointGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-globalaccelerator.CfnEndpointGroup",
            "Attributes: ",
            "  attrEndpointGroupArn"
        ],
        "prefix": "l1-globalaccelerator-endpointgroup",
        "scope": "javascript,typescript"
    },
    "globalaccelerator.CfnListener": {
        "body": [
            "new globalaccelerator.CfnListener(this, \"${1:id}\", {",
            "  acceleratorArn: \"${2:string}\", // Required",
            "  clientAffinity: \"${3:string}\",",
            "  portRanges: [], // Required",
            "  protocol: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: globalaccelerator.CfnListener",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-globalaccelerator.CfnListener",
            "Attributes: ",
            "  attrListenerArn"
        ],
        "prefix": "l1-globalaccelerator-listener",
        "scope": "javascript,typescript"
    },
    "glue.CfnClassifier": {
        "body": [
            "new glue.CfnClassifier(this, \"${1:id}\", {",
            "  csvClassifier: {",
            "    allowSingleColumn: ${2|false,true|},",
            "    containsHeader: \"${3:string}\",",
            "    delimiter: \"${4:string}\",",
            "    disableValueTrimming: ${5|false,true|},",
            "    header: [],",
            "    name: \"${7:string}\",",
            "    quoteSymbol: \"${8:string}\",",
            "  },",
            "  grokClassifier: {",
            "    classification: \"${3:string}\",",
            "    customPatterns: \"${4:string}\",",
            "    grokPattern: \"${5:string}\",",
            "    name: \"${6:string}\",",
            "  },",
            "  jsonClassifier: {",
            "    jsonPath: \"${4:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "  xMLClassifier: {",
            "    classification: \"${5:string}\",",
            "    name: \"${6:string}\",",
            "    rowTag: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnClassifier",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnClassifier"
        ],
        "prefix": "l1-glue-classifier",
        "scope": "javascript,typescript"
    },
    "glue.CfnConnection": {
        "body": [
            "new glue.CfnConnection(this, \"${1:id}\", {",
            "  catalogId: \"${2:string}\", // Required",
            "  connectionInput: {",
            "    connectionProperties: ${3:JSON},",
            "    connectionType: \"${4:string}\",",
            "    description: \"${5:string}\",",
            "    matchCriteria: [],",
            "    name: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnConnection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnConnection"
        ],
        "prefix": "l1-glue-connection",
        "scope": "javascript,typescript"
    },
    "glue.CfnCrawler": {
        "body": [
            "new glue.CfnCrawler(this, \"${1:id}\", {",
            "  classifiers: [],",
            "  configuration: \"${3:string}\",",
            "  crawlerSecurityConfiguration: \"${4:string}\",",
            "  databaseName: \"${5:string}\",",
            "  description: \"${6:string}\",",
            "  name: \"${7:string}\",",
            "  recrawlPolicy: {",
            "    recrawlBehavior: \"${8:string}\",",
            "  },",
            "  role: \"${9:string}\", // Required",
            "  schedule: {",
            "    scheduleExpression: \"${10:string}\",",
            "  },",
            "  schemaChangePolicy: {",
            "    deleteBehavior: \"${11:string}\",",
            "    updateBehavior: \"${12:string}\",",
            "  },",
            "  tablePrefix: \"${12:string}\",",
            "  tags: ${13:JSON},",
            "  targets: {",
            "    catalogTargets: [],",
            "    dynamoDBTargets: [],",
            "    jdbcTargets: [],",
            "    mongoDBTargets: [],",
            "    s3Targets: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnCrawler",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnCrawler"
        ],
        "prefix": "l1-glue-crawler",
        "scope": "javascript,typescript"
    },
    "glue.CfnDataCatalogEncryptionSettings": {
        "body": [
            "new glue.CfnDataCatalogEncryptionSettings(this, \"${1:id}\", {",
            "  catalogId: \"${2:string}\", // Required",
            "  dataCatalogEncryptionSettings: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnDataCatalogEncryptionSettings",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnDataCatalogEncryptionSettings"
        ],
        "prefix": "l1-glue-datacatalogencryptionsettings",
        "scope": "javascript,typescript"
    },
    "glue.CfnDatabase": {
        "body": [
            "new glue.CfnDatabase(this, \"${1:id}\", {",
            "  catalogId: \"${2:string}\", // Required",
            "  databaseInput: {",
            "    createTableDefaultPermissions: [],",
            "    description: \"${4:string}\",",
            "    locationUri: \"${5:string}\",",
            "    name: \"${6:string}\",",
            "    parameters: ${7:JSON},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnDatabase",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnDatabase"
        ],
        "prefix": "l1-glue-database",
        "scope": "javascript,typescript"
    },
    "glue.CfnDevEndpoint": {
        "body": [
            "new glue.CfnDevEndpoint(this, \"${1:id}\", {",
            "  arguments: ${2:JSON},",
            "  endpointName: \"${3:string}\",",
            "  extraJarsS3Path: \"${4:string}\",",
            "  extraPythonLibsS3Path: \"${5:string}\",",
            "  glueVersion: \"${6:string}\",",
            "  numberOfNodes: ${7:Number},",
            "  numberOfWorkers: ${8:Number},",
            "  publicKey: \"${9:string}\",",
            "  publicKeys: [],",
            "  roleArn: \"${11:string}\", // Required",
            "  securityConfiguration: \"${12:string}\",",
            "  securityGroupIds: [],",
            "  subnetId: \"${14:string}\",",
            "  tags: ${15:JSON},",
            "  workerType: \"${16:string}\",",
            "})"
        ],
        "description": [
            "Construct: glue.CfnDevEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnDevEndpoint"
        ],
        "prefix": "l1-glue-devendpoint",
        "scope": "javascript,typescript"
    },
    "glue.CfnJob": {
        "body": [
            "new glue.CfnJob(this, \"${1:id}\", {",
            "  allocatedCapacity: ${2:Number},",
            "  command: {",
            "    name: \"${3:string}\",",
            "    pythonVersion: \"${4:string}\",",
            "    scriptLocation: \"${5:string}\",",
            "  },",
            "  connections: {",
            "    connections: [],",
            "  },",
            "  defaultArguments: ${5:JSON},",
            "  description: \"${6:string}\",",
            "  executionProperty: {",
            "    maxConcurrentRuns: ${7:Number},",
            "  },",
            "  glueVersion: \"${8:string}\",",
            "  logUri: \"${9:string}\",",
            "  maxCapacity: ${10:Number},",
            "  maxRetries: ${11:Number},",
            "  name: \"${12:string}\",",
            "  notificationProperty: {",
            "    notifyDelayAfter: ${13:Number},",
            "  },",
            "  numberOfWorkers: ${14:Number},",
            "  role: \"${15:string}\", // Required",
            "  securityConfiguration: \"${16:string}\",",
            "  tags: ${17:JSON},",
            "  timeout: ${18:Number},",
            "  workerType: \"${19:string}\",",
            "})"
        ],
        "description": [
            "Construct: glue.CfnJob",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnJob"
        ],
        "prefix": "l1-glue-job",
        "scope": "javascript,typescript"
    },
    "glue.CfnMLTransform": {
        "body": [
            "new glue.CfnMLTransform(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  glueVersion: \"${3:string}\",",
            "  inputRecordTables: {",
            "    glueTables: [],",
            "  },",
            "  maxCapacity: ${5:Number},",
            "  maxRetries: ${6:Number},",
            "  name: \"${7:string}\",",
            "  numberOfWorkers: ${8:Number},",
            "  role: \"${9:string}\", // Required",
            "  tags: ${10:JSON},",
            "  timeout: ${11:Number},",
            "  transformEncryption: {",
            "    taskRunSecurityConfigurationName: \"${13:string}\",",
            "  },",
            "  transformParameters: {",
            "    transformType: \"${14:string}\",",
            "  },",
            "  workerType: \"${14:string}\",",
            "})"
        ],
        "description": [
            "Construct: glue.CfnMLTransform",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnMLTransform"
        ],
        "prefix": "l1-glue-mltransform",
        "scope": "javascript,typescript"
    },
    "glue.CfnPartition": {
        "body": [
            "new glue.CfnPartition(this, \"${1:id}\", {",
            "  catalogId: \"${2:string}\", // Required",
            "  databaseName: \"${3:string}\", // Required",
            "  partitionInput: {",
            "    parameters: ${4:JSON},",
            "    values: [],",
            "  },",
            "  tableName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: glue.CfnPartition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnPartition"
        ],
        "prefix": "l1-glue-partition",
        "scope": "javascript,typescript"
    },
    "glue.CfnRegistry": {
        "body": [
            "new glue.CfnRegistry(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: glue.CfnRegistry",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnRegistry",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-glue-registry",
        "scope": "javascript,typescript"
    },
    "glue.CfnSchema": {
        "body": [
            "new glue.CfnSchema(this, \"${1:id}\", {",
            "  checkpointVersion: {",
            "    isLatest: ${2|false,true|},",
            "    versionNumber: ${3:Number},",
            "  },",
            "  compatibility: \"${3:string}\", // Required",
            "  dataFormat: \"${4:string}\", // Required",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  registry: {",
            "    arn: \"${7:string}\",",
            "    name: \"${8:string}\",",
            "  },",
            "  schemaDefinition: \"${8:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: glue.CfnSchema",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnSchema",
            "Attributes: ",
            "  attrArn",
            "  attrInitialSchemaVersionId"
        ],
        "prefix": "l1-glue-schema",
        "scope": "javascript,typescript"
    },
    "glue.CfnSchemaVersion": {
        "body": [
            "new glue.CfnSchemaVersion(this, \"${1:id}\", {",
            "  schema: {",
            "    registryName: \"${2:string}\",",
            "    schemaArn: \"${3:string}\",",
            "    schemaName: \"${4:string}\",",
            "  },",
            "  schemaDefinition: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: glue.CfnSchemaVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnSchemaVersion",
            "Attributes: ",
            "  attrVersionId"
        ],
        "prefix": "l1-glue-schemaversion",
        "scope": "javascript,typescript"
    },
    "glue.CfnSchemaVersionMetadata": {
        "body": [
            "new glue.CfnSchemaVersionMetadata(this, \"${1:id}\", {",
            "  key: \"${2:string}\", // Required",
            "  schemaVersionId: \"${3:string}\", // Required",
            "  value: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: glue.CfnSchemaVersionMetadata",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnSchemaVersionMetadata"
        ],
        "prefix": "l1-glue-schemaversionmetadata",
        "scope": "javascript,typescript"
    },
    "glue.CfnSecurityConfiguration": {
        "body": [
            "new glue.CfnSecurityConfiguration(this, \"${1:id}\", {",
            "  encryptionConfiguration: {",
            "  },",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: glue.CfnSecurityConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnSecurityConfiguration"
        ],
        "prefix": "l1-glue-securityconfiguration",
        "scope": "javascript,typescript"
    },
    "glue.CfnTable": {
        "body": [
            "new glue.CfnTable(this, \"${1:id}\", {",
            "  catalogId: \"${2:string}\", // Required",
            "  databaseName: \"${3:string}\", // Required",
            "  tableInput: {",
            "    description: \"${4:string}\",",
            "    name: \"${5:string}\",",
            "    owner: \"${6:string}\",",
            "    parameters: ${7:JSON},",
            "    partitionKeys: [],",
            "    retention: ${9:Number},",
            "    tableType: \"${11:string}\",",
            "    viewExpandedText: \"${13:string}\",",
            "    viewOriginalText: \"${14:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: glue.CfnTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnTable"
        ],
        "prefix": "l1-glue-table",
        "scope": "javascript,typescript"
    },
    "glue.CfnTrigger": {
        "body": [
            "new glue.CfnTrigger(this, \"${1:id}\", {",
            "  actions: [], // Required",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  predicate: {",
            "    conditions: [],",
            "    logical: \"${6:string}\",",
            "  },",
            "  schedule: \"${6:string}\",",
            "  startOnCreation: ${7|false,true|},",
            "  tags: ${8:JSON},",
            "  type: \"${9:string}\", // Required",
            "  workflowName: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: glue.CfnTrigger",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnTrigger"
        ],
        "prefix": "l1-glue-trigger",
        "scope": "javascript,typescript"
    },
    "glue.CfnWorkflow": {
        "body": [
            "new glue.CfnWorkflow(this, \"${1:id}\", {",
            "  defaultRunProperties: ${2:JSON},",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  tags: ${5:JSON},",
            "})"
        ],
        "description": [
            "Construct: glue.CfnWorkflow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-glue.CfnWorkflow"
        ],
        "prefix": "l1-glue-workflow",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnConnectorDefinition": {
        "body": [
            "new greengrass.CfnConnectorDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    connectors: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnConnectorDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnConnectorDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-connectordefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnConnectorDefinitionVersion": {
        "body": [
            "new greengrass.CfnConnectorDefinitionVersion(this, \"${1:id}\", {",
            "  connectorDefinitionId: \"${2:string}\", // Required",
            "  connectors: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnConnectorDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnConnectorDefinitionVersion"
        ],
        "prefix": "l1-greengrass-connectordefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnCoreDefinition": {
        "body": [
            "new greengrass.CfnCoreDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    cores: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnCoreDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnCoreDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-coredefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnCoreDefinitionVersion": {
        "body": [
            "new greengrass.CfnCoreDefinitionVersion(this, \"${1:id}\", {",
            "  coreDefinitionId: \"${2:string}\", // Required",
            "  cores: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnCoreDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnCoreDefinitionVersion"
        ],
        "prefix": "l1-greengrass-coredefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnDeviceDefinition": {
        "body": [
            "new greengrass.CfnDeviceDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    devices: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnDeviceDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnDeviceDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-devicedefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnDeviceDefinitionVersion": {
        "body": [
            "new greengrass.CfnDeviceDefinitionVersion(this, \"${1:id}\", {",
            "  deviceDefinitionId: \"${2:string}\", // Required",
            "  devices: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnDeviceDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnDeviceDefinitionVersion"
        ],
        "prefix": "l1-greengrass-devicedefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnFunctionDefinition": {
        "body": [
            "new greengrass.CfnFunctionDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    functions: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnFunctionDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnFunctionDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-functiondefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnFunctionDefinitionVersion": {
        "body": [
            "new greengrass.CfnFunctionDefinitionVersion(this, \"${1:id}\", {",
            "  defaultConfig: {",
            "  },",
            "  functionDefinitionId: \"${3:string}\", // Required",
            "  functions: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnFunctionDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnFunctionDefinitionVersion"
        ],
        "prefix": "l1-greengrass-functiondefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnGroup": {
        "body": [
            "new greengrass.CfnGroup(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    connectorDefinitionVersionArn: \"${2:string}\",",
            "    coreDefinitionVersionArn: \"${3:string}\",",
            "    deviceDefinitionVersionArn: \"${4:string}\",",
            "    functionDefinitionVersionArn: \"${5:string}\",",
            "    loggerDefinitionVersionArn: \"${6:string}\",",
            "    resourceDefinitionVersionArn: \"${7:string}\",",
            "    subscriptionDefinitionVersionArn: \"${8:string}\",",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\",",
            "  tags: ${5:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnGroup",
            "Attributes: ",
            "  attrRoleAttachedAt",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrRoleArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-group",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnGroupVersion": {
        "body": [
            "new greengrass.CfnGroupVersion(this, \"${1:id}\", {",
            "  connectorDefinitionVersionArn: \"${2:string}\",",
            "  coreDefinitionVersionArn: \"${3:string}\",",
            "  deviceDefinitionVersionArn: \"${4:string}\",",
            "  functionDefinitionVersionArn: \"${5:string}\",",
            "  groupId: \"${6:string}\", // Required",
            "  loggerDefinitionVersionArn: \"${7:string}\",",
            "  resourceDefinitionVersionArn: \"${8:string}\",",
            "  subscriptionDefinitionVersionArn: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnGroupVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnGroupVersion"
        ],
        "prefix": "l1-greengrass-groupversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnLoggerDefinition": {
        "body": [
            "new greengrass.CfnLoggerDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    loggers: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnLoggerDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnLoggerDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-loggerdefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnLoggerDefinitionVersion": {
        "body": [
            "new greengrass.CfnLoggerDefinitionVersion(this, \"${1:id}\", {",
            "  loggerDefinitionId: \"${2:string}\", // Required",
            "  loggers: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnLoggerDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnLoggerDefinitionVersion"
        ],
        "prefix": "l1-greengrass-loggerdefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnResourceDefinition": {
        "body": [
            "new greengrass.CfnResourceDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    resources: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnResourceDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnResourceDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-resourcedefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnResourceDefinitionVersion": {
        "body": [
            "new greengrass.CfnResourceDefinitionVersion(this, \"${1:id}\", {",
            "  resourceDefinitionId: \"${2:string}\", // Required",
            "  resources: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnResourceDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnResourceDefinitionVersion"
        ],
        "prefix": "l1-greengrass-resourcedefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnSubscriptionDefinition": {
        "body": [
            "new greengrass.CfnSubscriptionDefinition(this, \"${1:id}\", {",
            "  initialVersion: {",
            "    subscriptions: [],",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: ${4:JSON},",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnSubscriptionDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnSubscriptionDefinition",
            "Attributes: ",
            "  attrLatestVersionArn",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-greengrass-subscriptiondefinition",
        "scope": "javascript,typescript"
    },
    "greengrass.CfnSubscriptionDefinitionVersion": {
        "body": [
            "new greengrass.CfnSubscriptionDefinitionVersion(this, \"${1:id}\", {",
            "  subscriptionDefinitionId: \"${2:string}\", // Required",
            "  subscriptions: [], // Required",
            "})"
        ],
        "description": [
            "Construct: greengrass.CfnSubscriptionDefinitionVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrass.CfnSubscriptionDefinitionVersion"
        ],
        "prefix": "l1-greengrass-subscriptiondefinitionversion",
        "scope": "javascript,typescript"
    },
    "greengrassv2.CfnComponentVersion": {
        "body": [
            "new greengrassv2.CfnComponentVersion(this, \"${1:id}\", {",
            "  inlineRecipe: \"${2:string}\",",
            "  lambdaFunction: {",
            "    componentName: \"${5:string}\",",
            "    componentPlatforms: [],",
            "    componentVersion: \"${7:string}\",",
            "    lambdaArn: \"${8:string}\",",
            "  },",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: greengrassv2.CfnComponentVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-greengrassv2.CfnComponentVersion",
            "Attributes: ",
            "  attrArn",
            "  attrComponentName",
            "  attrComponentVersion"
        ],
        "prefix": "l1-greengrassv2-componentversion",
        "scope": "javascript,typescript"
    },
    "groundstation.CfnConfig": {
        "body": [
            "new groundstation.CfnConfig(this, \"${1:id}\", {",
            "  configData: {",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: groundstation.CfnConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-groundstation.CfnConfig",
            "Attributes: ",
            "  attrType",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-groundstation-config",
        "scope": "javascript,typescript"
    },
    "groundstation.CfnDataflowEndpointGroup": {
        "body": [
            "new groundstation.CfnDataflowEndpointGroup(this, \"${1:id}\", {",
            "  endpointDetails: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: groundstation.CfnDataflowEndpointGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-groundstation.CfnDataflowEndpointGroup",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-groundstation-dataflowendpointgroup",
        "scope": "javascript,typescript"
    },
    "groundstation.CfnMissionProfile": {
        "body": [
            "new groundstation.CfnMissionProfile(this, \"${1:id}\", {",
            "  contactPostPassDurationSeconds: ${2:Number},",
            "  contactPrePassDurationSeconds: ${3:Number},",
            "  dataflowEdges: [], // Required",
            "  minimumViableContactDurationSeconds: ${5:Number}, // Required",
            "  name: \"${6:string}\", // Required",
            "  tags: [],",
            "  trackingConfigArn: \"${8:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: groundstation.CfnMissionProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-groundstation.CfnMissionProfile",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrRegion"
        ],
        "prefix": "l1-groundstation-missionprofile",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnDetector": {
        "body": [
            "new guardduty.CfnDetector(this, \"${1:id}\", {",
            "  dataSources: {",
            "  },",
            "  enable: ${3|false,true|}, // Required",
            "  findingPublishingFrequency: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnDetector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnDetector"
        ],
        "prefix": "l1-guardduty-detector",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnFilter": {
        "body": [
            "new guardduty.CfnFilter(this, \"${1:id}\", {",
            "  action: \"${2:string}\", // Required",
            "  description: \"${3:string}\", // Required",
            "  detectorId: \"${4:string}\", // Required",
            "  findingCriteria: {",
            "    criterion: ${5:JSON},",
            "  },",
            "  name: \"${6:string}\", // Required",
            "  rank: ${7:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnFilter"
        ],
        "prefix": "l1-guardduty-filter",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnIPSet": {
        "body": [
            "new guardduty.CfnIPSet(this, \"${1:id}\", {",
            "  activate: ${2|false,true|}, // Required",
            "  detectorId: \"${3:string}\", // Required",
            "  format: \"${4:string}\", // Required",
            "  location: \"${5:string}\", // Required",
            "  name: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnIPSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnIPSet"
        ],
        "prefix": "l1-guardduty-ipset",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnMaster": {
        "body": [
            "new guardduty.CfnMaster(this, \"${1:id}\", {",
            "  detectorId: \"${2:string}\", // Required",
            "  invitationId: \"${3:string}\",",
            "  masterId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnMaster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnMaster"
        ],
        "prefix": "l1-guardduty-master",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnMember": {
        "body": [
            "new guardduty.CfnMember(this, \"${1:id}\", {",
            "  detectorId: \"${2:string}\", // Required",
            "  disableEmailNotification: ${3|false,true|},",
            "  email: \"${4:string}\", // Required",
            "  memberId: \"${5:string}\", // Required",
            "  message: \"${6:string}\",",
            "  status: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnMember",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnMember"
        ],
        "prefix": "l1-guardduty-member",
        "scope": "javascript,typescript"
    },
    "guardduty.CfnThreatIntelSet": {
        "body": [
            "new guardduty.CfnThreatIntelSet(this, \"${1:id}\", {",
            "  activate: ${2|false,true|}, // Required",
            "  detectorId: \"${3:string}\", // Required",
            "  format: \"${4:string}\", // Required",
            "  location: \"${5:string}\", // Required",
            "  name: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: guardduty.CfnThreatIntelSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-guardduty.CfnThreatIntelSet"
        ],
        "prefix": "l1-guardduty-threatintelset",
        "scope": "javascript,typescript"
    },
    "healthlake.CfnFHIRDatastore": {
        "body": [
            "new healthlake.CfnFHIRDatastore(this, \"${1:id}\", {",
            "  datastoreName: \"${2:string}\",",
            "  datastoreTypeVersion: \"${3:string}\", // Required",
            "  preloadDataConfig: {",
            "    preloadDataType: \"${4:string}\",",
            "  },",
            "  sseConfiguration: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: healthlake.CfnFHIRDatastore",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-healthlake.CfnFHIRDatastore",
            "Attributes: ",
            "  attrDatastoreArn",
            "  attrDatastoreEndpoint",
            "  attrDatastoreId",
            "  attrDatastoreStatus"
        ],
        "prefix": "l1-healthlake-fhirdatastore",
        "scope": "javascript,typescript"
    },
    "iam.CfnAccessKey": {
        "body": [
            "new iam.CfnAccessKey(this, \"${1:id}\", {",
            "  serial: ${2:Number},",
            "  status: \"${3:string}\",",
            "  userName: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iam.CfnAccessKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnAccessKey",
            "Attributes: ",
            "  attrSecretAccessKey"
        ],
        "prefix": "l1-iam-accesskey",
        "scope": "javascript,typescript"
    },
    "iam.CfnGroup": {
        "body": [
            "new iam.CfnGroup(this, \"${1:id}\", {",
            "  groupName: \"${2:string}\",",
            "  managedPolicyArns: [],",
            "  path: \"${4:string}\",",
            "  policies: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-group",
        "scope": "javascript,typescript"
    },
    "iam.CfnInstanceProfile": {
        "body": [
            "new iam.CfnInstanceProfile(this, \"${1:id}\", {",
            "  instanceProfileName: \"${2:string}\",",
            "  path: \"${3:string}\",",
            "  roles: [], // Required",
            "})"
        ],
        "description": [
            "Construct: iam.CfnInstanceProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnInstanceProfile",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-instanceprofile",
        "scope": "javascript,typescript"
    },
    "iam.CfnManagedPolicy": {
        "body": [
            "new iam.CfnManagedPolicy(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  groups: [],",
            "  managedPolicyName: \"${4:string}\",",
            "  path: \"${5:string}\",",
            "  policyDocument: ${6:JSON}, // Required",
            "  roles: [],",
            "  users: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnManagedPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnManagedPolicy"
        ],
        "prefix": "l1-iam-managedpolicy",
        "scope": "javascript,typescript"
    },
    "iam.CfnOIDCProvider": {
        "body": [
            "new iam.CfnOIDCProvider(this, \"${1:id}\", {",
            "  clientIdList: [],",
            "  tags: [],",
            "  thumbprintList: [], // Required",
            "  url: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: iam.CfnOIDCProvider",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnOIDCProvider",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-oidcprovider",
        "scope": "javascript,typescript"
    },
    "iam.CfnPolicy": {
        "body": [
            "new iam.CfnPolicy(this, \"${1:id}\", {",
            "  groups: [],",
            "  policyDocument: ${3:JSON}, // Required",
            "  policyName: \"${4:string}\", // Required",
            "  roles: [],",
            "  users: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnPolicy"
        ],
        "prefix": "l1-iam-policy",
        "scope": "javascript,typescript"
    },
    "iam.CfnRole": {
        "body": [
            "new iam.CfnRole(this, \"${1:id}\", {",
            "  assumeRolePolicyDocument: ${2:JSON}, // Required",
            "  description: \"${3:string}\",",
            "  managedPolicyArns: [],",
            "  maxSessionDuration: ${5:Number},",
            "  path: \"${6:string}\",",
            "  permissionsBoundary: \"${7:string}\",",
            "  policies: [],",
            "  roleName: \"${9:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnRole",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnRole",
            "Attributes: ",
            "  attrArn",
            "  attrRoleId"
        ],
        "prefix": "l1-iam-role",
        "scope": "javascript,typescript"
    },
    "iam.CfnSAMLProvider": {
        "body": [
            "new iam.CfnSAMLProvider(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  samlMetadataDocument: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnSAMLProvider",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnSAMLProvider",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-samlprovider",
        "scope": "javascript,typescript"
    },
    "iam.CfnServerCertificate": {
        "body": [
            "new iam.CfnServerCertificate(this, \"${1:id}\", {",
            "  certificateBody: \"${2:string}\",",
            "  certificateChain: \"${3:string}\",",
            "  path: \"${4:string}\",",
            "  privateKey: \"${5:string}\",",
            "  serverCertificateName: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iam.CfnServerCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnServerCertificate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-servercertificate",
        "scope": "javascript,typescript"
    },
    "iam.CfnServiceLinkedRole": {
        "body": [
            "new iam.CfnServiceLinkedRole(this, \"${1:id}\", {",
            "  aWSServiceName: \"${2:string}\", // Required",
            "  customSuffix: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: iam.CfnServiceLinkedRole",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnServiceLinkedRole"
        ],
        "prefix": "l1-iam-servicelinkedrole",
        "scope": "javascript,typescript"
    },
    "iam.CfnUser": {
        "body": [
            "new iam.CfnUser(this, \"${1:id}\", {",
            "  groups: [],",
            "  loginProfile: {",
            "    password: \"${3:string}\",",
            "    passwordResetRequired: ${4|false,true|},",
            "  },",
            "  managedPolicyArns: [],",
            "  path: \"${5:string}\",",
            "  permissionsBoundary: \"${6:string}\",",
            "  policies: [],",
            "  tags: [],",
            "  userName: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: iam.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnUser",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iam-user",
        "scope": "javascript,typescript"
    },
    "iam.CfnUserToGroupAddition": {
        "body": [
            "new iam.CfnUserToGroupAddition(this, \"${1:id}\", {",
            "  groupName: \"${2:string}\", // Required",
            "  users: [], // Required",
            "})"
        ],
        "description": [
            "Construct: iam.CfnUserToGroupAddition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnUserToGroupAddition"
        ],
        "prefix": "l1-iam-usertogroupaddition",
        "scope": "javascript,typescript"
    },
    "iam.CfnVirtualMFADevice": {
        "body": [
            "new iam.CfnVirtualMFADevice(this, \"${1:id}\", {",
            "  path: \"${2:string}\",",
            "  tags: [],",
            "  users: [], // Required",
            "  virtualMfaDeviceName: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: iam.CfnVirtualMFADevice",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.CfnVirtualMFADevice",
            "Attributes: ",
            "  attrSerialNumber"
        ],
        "prefix": "l1-iam-virtualmfadevice",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnComponent": {
        "body": [
            "new imagebuilder.CfnComponent(this, \"${1:id}\", {",
            "  changeDescription: \"${2:string}\",",
            "  data: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  kmsKeyId: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  platform: \"${7:string}\", // Required",
            "  supportedOsVersions: [],",
            "  tags: {",
            "  },",
            "  uri: \"${10:string}\",",
            "  version: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnComponent",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnComponent",
            "Attributes: ",
            "  attrArn",
            "  attrName",
            "  attrType",
            "  attrEncrypted"
        ],
        "prefix": "l1-imagebuilder-component",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnContainerRecipe": {
        "body": [
            "new imagebuilder.CfnContainerRecipe(this, \"${1:id}\", {",
            "  components: [], // Required",
            "  containerType: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  dockerfileTemplateData: \"${5:string}\",",
            "  dockerfileTemplateUri: \"${6:string}\",",
            "  imageOsVersionOverride: \"${7:string}\",",
            "  instanceConfiguration: {",
            "    blockDeviceMappings: [],",
            "    image: \"${9:string}\",",
            "  },",
            "  kmsKeyId: \"${9:string}\",",
            "  name: \"${10:string}\", // Required",
            "  parentImage: \"${11:string}\", // Required",
            "  platformOverride: \"${12:string}\",",
            "  tags: {",
            "  },",
            "  targetRepository: {",
            "    repositoryName: \"${14:string}\",",
            "    service: \"${15:string}\",",
            "  },",
            "  version: \"${15:string}\", // Required",
            "  workingDirectory: \"${16:string}\",",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnContainerRecipe",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnContainerRecipe",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-imagebuilder-containerrecipe",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnDistributionConfiguration": {
        "body": [
            "new imagebuilder.CfnDistributionConfiguration(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  distributions: [], // Required",
            "  name: \"${4:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnDistributionConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnDistributionConfiguration",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-imagebuilder-distributionconfiguration",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnImage": {
        "body": [
            "new imagebuilder.CfnImage(this, \"${1:id}\", {",
            "  containerRecipeArn: \"${2:string}\",",
            "  distributionConfigurationArn: \"${3:string}\",",
            "  enhancedImageMetadataEnabled: ${4|false,true|},",
            "  imageRecipeArn: \"${5:string}\",",
            "  imageTestsConfiguration: {",
            "    imageTestsEnabled: ${6|false,true|},",
            "    timeoutMinutes: ${7:Number},",
            "  },",
            "  infrastructureConfigurationArn: \"${7:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnImage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnImage",
            "Attributes: ",
            "  attrArn",
            "  attrName",
            "  attrImageId",
            "  attrImageUri"
        ],
        "prefix": "l1-imagebuilder-image",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnImagePipeline": {
        "body": [
            "new imagebuilder.CfnImagePipeline(this, \"${1:id}\", {",
            "  containerRecipeArn: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  distributionConfigurationArn: \"${4:string}\",",
            "  enhancedImageMetadataEnabled: ${5|false,true|},",
            "  imageRecipeArn: \"${6:string}\",",
            "  imageTestsConfiguration: {",
            "    imageTestsEnabled: ${7|false,true|},",
            "    timeoutMinutes: ${8:Number},",
            "  },",
            "  infrastructureConfigurationArn: \"${8:string}\", // Required",
            "  name: \"${9:string}\", // Required",
            "  schedule: {",
            "    pipelineExecutionStartCondition: \"${10:string}\",",
            "    scheduleExpression: \"${11:string}\",",
            "  },",
            "  status: \"${11:string}\",",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnImagePipeline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnImagePipeline",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-imagebuilder-imagepipeline",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnImageRecipe": {
        "body": [
            "new imagebuilder.CfnImageRecipe(this, \"${1:id}\", {",
            "  additionalInstanceConfiguration: {",
            "    userDataOverride: \"${3:string}\",",
            "  },",
            "  blockDeviceMappings: [],",
            "  components: [], // Required",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "  parentImage: \"${7:string}\", // Required",
            "  tags: {",
            "  },",
            "  version: \"${9:string}\", // Required",
            "  workingDirectory: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnImageRecipe",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnImageRecipe",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-imagebuilder-imagerecipe",
        "scope": "javascript,typescript"
    },
    "imagebuilder.CfnInfrastructureConfiguration": {
        "body": [
            "new imagebuilder.CfnInfrastructureConfiguration(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  instanceMetadataOptions: {",
            "    httpPutResponseHopLimit: ${3:Number},",
            "    httpTokens: \"${4:string}\",",
            "  },",
            "  instanceProfileName: \"${4:string}\", // Required",
            "  instanceTypes: [],",
            "  keyPair: \"${6:string}\",",
            "  logging: {",
            "  },",
            "  name: \"${8:string}\", // Required",
            "  resourceTags: {",
            "  },",
            "  securityGroupIds: [],",
            "  snsTopicArn: \"${11:string}\",",
            "  subnetId: \"${12:string}\",",
            "  tags: {",
            "  },",
            "  terminateInstanceOnFailure: ${14|false,true|},",
            "})"
        ],
        "description": [
            "Construct: imagebuilder.CfnInfrastructureConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-imagebuilder.CfnInfrastructureConfiguration",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-imagebuilder-infrastructureconfiguration",
        "scope": "javascript,typescript"
    },
    "inspector.CfnAssessmentTarget": {
        "body": [
            "new inspector.CfnAssessmentTarget(this, \"${1:id}\", {",
            "  assessmentTargetName: \"${2:string}\",",
            "  resourceGroupArn: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: inspector.CfnAssessmentTarget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-inspector.CfnAssessmentTarget",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-inspector-assessmenttarget",
        "scope": "javascript,typescript"
    },
    "inspector.CfnAssessmentTemplate": {
        "body": [
            "new inspector.CfnAssessmentTemplate(this, \"${1:id}\", {",
            "  assessmentTargetArn: \"${2:string}\", // Required",
            "  assessmentTemplateName: \"${3:string}\",",
            "  durationInSeconds: ${4:Number}, // Required",
            "  rulesPackageArns: [], // Required",
            "  userAttributesForFindings: [],",
            "})"
        ],
        "description": [
            "Construct: inspector.CfnAssessmentTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-inspector.CfnAssessmentTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-inspector-assessmenttemplate",
        "scope": "javascript,typescript"
    },
    "inspector.CfnResourceGroup": {
        "body": [
            "new inspector.CfnResourceGroup(this, \"${1:id}\", {",
            "  resourceGroupTags: [], // Required",
            "})"
        ],
        "description": [
            "Construct: inspector.CfnResourceGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-inspector.CfnResourceGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-inspector-resourcegroup",
        "scope": "javascript,typescript"
    },
    "inspectorv2.CfnFilter": {
        "body": [
            "new inspectorv2.CfnFilter(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  filterAction: \"${3:string}\", // Required",
            "  filterCriteria: {",
            "    awsAccountId: [],",
            "    componentId: [],",
            "    componentType: [],",
            "    ec2InstanceImageId: [],",
            "    ec2InstanceSubnetId: [],",
            "    ec2InstanceVpcId: [],",
            "    ecrImageArchitecture: [],",
            "    ecrImageHash: [],",
            "    ecrImagePushedAt: [],",
            "    ecrImageRegistry: [],",
            "    ecrImageRepositoryName: [],",
            "    ecrImageTags: [],",
            "    findingArn: [],",
            "    findingStatus: [],",
            "    findingType: [],",
            "    firstObservedAt: [],",
            "    inspectorScore: [],",
            "    lastObservedAt: [],",
            "    networkProtocol: [],",
            "    portRange: [],",
            "    relatedVulnerabilities: [],",
            "    resourceId: [],",
            "    resourceTags: [],",
            "    resourceType: [],",
            "    severity: [],",
            "    title: [],",
            "    updatedAt: [],",
            "    vendorSeverity: [],",
            "    vulnerabilityId: [],",
            "    vulnerabilitySource: [],",
            "    vulnerablePackages: [],",
            "  },",
            "  name: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: inspectorv2.CfnFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-inspectorv2.CfnFilter",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-inspectorv2-filter",
        "scope": "javascript,typescript"
    },
    "iot.CfnAccountAuditConfiguration": {
        "body": [
            "new iot.CfnAccountAuditConfiguration(this, \"${1:id}\", {",
            "  accountId: \"${2:string}\", // Required",
            "  auditCheckConfigurations: {",
            "  },",
            "  auditNotificationTargetConfigurations: {",
            "  },",
            "  roleArn: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnAccountAuditConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnAccountAuditConfiguration"
        ],
        "prefix": "l1-iot-accountauditconfiguration",
        "scope": "javascript,typescript"
    },
    "iot.CfnAuthorizer": {
        "body": [
            "new iot.CfnAuthorizer(this, \"${1:id}\", {",
            "  authorizerFunctionArn: \"${2:string}\", // Required",
            "  authorizerName: \"${3:string}\",",
            "  enableCachingForHttp: ${4|false,true|},",
            "  signingDisabled: ${5|false,true|},",
            "  status: \"${6:string}\",",
            "  tags: [],",
            "  tokenKeyName: \"${8:string}\",",
            "  tokenSigningPublicKeys: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iot.CfnAuthorizer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnAuthorizer",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iot-authorizer",
        "scope": "javascript,typescript"
    },
    "iot.CfnCertificate": {
        "body": [
            "new iot.CfnCertificate(this, \"${1:id}\", {",
            "  cACertificatePem: \"${2:string}\",",
            "  certificateMode: \"${3:string}\",",
            "  certificatePem: \"${4:string}\",",
            "  certificateSigningRequest: \"${5:string}\",",
            "  status: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnCertificate",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-iot-certificate",
        "scope": "javascript,typescript"
    },
    "iot.CfnCustomMetric": {
        "body": [
            "new iot.CfnCustomMetric(this, \"${1:id}\", {",
            "  displayName: \"${2:string}\",",
            "  metricName: \"${3:string}\",",
            "  metricType: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iot.CfnCustomMetric",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnCustomMetric",
            "Attributes: ",
            "  attrMetricArn"
        ],
        "prefix": "l1-iot-custommetric",
        "scope": "javascript,typescript"
    },
    "iot.CfnDimension": {
        "body": [
            "new iot.CfnDimension(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  stringValues: [], // Required",
            "  tags: [],",
            "  type: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnDimension",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnDimension",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iot-dimension",
        "scope": "javascript,typescript"
    },
    "iot.CfnDomainConfiguration": {
        "body": [
            "new iot.CfnDomainConfiguration(this, \"${1:id}\", {",
            "  authorizerConfig: {",
            "    allowAuthorizerOverride: ${2|false,true|},",
            "    defaultAuthorizerName: \"${3:string}\",",
            "  },",
            "  domainConfigurationName: \"${3:string}\",",
            "  domainConfigurationStatus: \"${4:string}\",",
            "  domainName: \"${5:string}\",",
            "  serverCertificateArns: [],",
            "  serviceType: \"${7:string}\",",
            "  tags: [],",
            "  validationCertificateArn: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot.CfnDomainConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnDomainConfiguration",
            "Attributes: ",
            "  attrArn",
            "  attrDomainType",
            "  attrServerCertificates"
        ],
        "prefix": "l1-iot-domainconfiguration",
        "scope": "javascript,typescript"
    },
    "iot.CfnFleetMetric": {
        "body": [
            "new iot.CfnFleetMetric(this, \"${1:id}\", {",
            "  aggregationField: \"${2:string}\",",
            "  aggregationType: {",
            "    name: \"${3:string}\",",
            "    values: [],",
            "  },",
            "  description: \"${4:string}\",",
            "  indexName: \"${5:string}\",",
            "  metricName: \"${6:string}\", // Required",
            "  period: ${7:Number},",
            "  queryString: \"${8:string}\",",
            "  queryVersion: \"${9:string}\",",
            "  tags: [],",
            "  unit: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot.CfnFleetMetric",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnFleetMetric",
            "Attributes: ",
            "  attrMetricArn",
            "  attrCreationDate",
            "  attrLastModifiedDate",
            "  attrVersion"
        ],
        "prefix": "l1-iot-fleetmetric",
        "scope": "javascript,typescript"
    },
    "iot.CfnJobTemplate": {
        "body": [
            "new iot.CfnJobTemplate(this, \"${1:id}\", {",
            "  abortConfig: ${2:JSON},",
            "  description: \"${3:string}\", // Required",
            "  document: \"${4:string}\",",
            "  documentSource: \"${5:string}\",",
            "  jobArn: \"${6:string}\",",
            "  jobExecutionsRetryConfig: ${7:JSON},",
            "  jobExecutionsRolloutConfig: ${8:JSON},",
            "  jobTemplateId: \"${9:string}\", // Required",
            "  presignedUrlConfig: ${10:JSON},",
            "  tags: [],",
            "  timeoutConfig: ${12:JSON},",
            "})"
        ],
        "description": [
            "Construct: iot.CfnJobTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnJobTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iot-jobtemplate",
        "scope": "javascript,typescript"
    },
    "iot.CfnLogging": {
        "body": [
            "new iot.CfnLogging(this, \"${1:id}\", {",
            "  accountId: \"${2:string}\", // Required",
            "  defaultLogLevel: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnLogging",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnLogging"
        ],
        "prefix": "l1-iot-logging",
        "scope": "javascript,typescript"
    },
    "iot.CfnMitigationAction": {
        "body": [
            "new iot.CfnMitigationAction(this, \"${1:id}\", {",
            "  actionName: \"${2:string}\",",
            "  actionParams: {",
            "  },",
            "  roleArn: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iot.CfnMitigationAction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnMitigationAction",
            "Attributes: ",
            "  attrMitigationActionArn",
            "  attrMitigationActionId"
        ],
        "prefix": "l1-iot-mitigationaction",
        "scope": "javascript,typescript"
    },
    "iot.CfnPolicy": {
        "body": [
            "new iot.CfnPolicy(this, \"${1:id}\", {",
            "  policyDocument: ${2:JSON}, // Required",
            "  policyName: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot.CfnPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnPolicy",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iot-policy",
        "scope": "javascript,typescript"
    },
    "iot.CfnPolicyPrincipalAttachment": {
        "body": [
            "new iot.CfnPolicyPrincipalAttachment(this, \"${1:id}\", {",
            "  policyName: \"${2:string}\", // Required",
            "  principal: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnPolicyPrincipalAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnPolicyPrincipalAttachment"
        ],
        "prefix": "l1-iot-policyprincipalattachment",
        "scope": "javascript,typescript"
    },
    "iot.CfnProvisioningTemplate": {
        "body": [
            "new iot.CfnProvisioningTemplate(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  enabled: ${3|false,true|},",
            "  preProvisioningHook: {",
            "    payloadVersion: \"${4:string}\",",
            "    targetArn: \"${5:string}\",",
            "  },",
            "  provisioningRoleArn: \"${5:string}\", // Required",
            "  tags: [],",
            "  templateBody: \"${7:string}\", // Required",
            "  templateName: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot.CfnProvisioningTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnProvisioningTemplate",
            "Attributes: ",
            "  attrTemplateArn"
        ],
        "prefix": "l1-iot-provisioningtemplate",
        "scope": "javascript,typescript"
    },
    "iot.CfnResourceSpecificLogging": {
        "body": [
            "new iot.CfnResourceSpecificLogging(this, \"${1:id}\", {",
            "  logLevel: \"${2:string}\", // Required",
            "  targetName: \"${3:string}\", // Required",
            "  targetType: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnResourceSpecificLogging",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnResourceSpecificLogging",
            "Attributes: ",
            "  attrTargetId"
        ],
        "prefix": "l1-iot-resourcespecificlogging",
        "scope": "javascript,typescript"
    },
    "iot.CfnScheduledAudit": {
        "body": [
            "new iot.CfnScheduledAudit(this, \"${1:id}\", {",
            "  dayOfMonth: \"${2:string}\",",
            "  dayOfWeek: \"${3:string}\",",
            "  frequency: \"${4:string}\", // Required",
            "  scheduledAuditName: \"${5:string}\",",
            "  tags: [],",
            "  targetCheckNames: [], // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnScheduledAudit",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnScheduledAudit",
            "Attributes: ",
            "  attrScheduledAuditArn"
        ],
        "prefix": "l1-iot-scheduledaudit",
        "scope": "javascript,typescript"
    },
    "iot.CfnSecurityProfile": {
        "body": [
            "new iot.CfnSecurityProfile(this, \"${1:id}\", {",
            "  additionalMetricsToRetainV2: [],",
            "  alertTargets: {",
            "  },",
            "  behaviors: [],",
            "  securityProfileDescription: \"${5:string}\",",
            "  securityProfileName: \"${6:string}\",",
            "  tags: [],",
            "  targetArns: [],",
            "})"
        ],
        "description": [
            "Construct: iot.CfnSecurityProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnSecurityProfile",
            "Attributes: ",
            "  attrSecurityProfileArn"
        ],
        "prefix": "l1-iot-securityprofile",
        "scope": "javascript,typescript"
    },
    "iot.CfnThing": {
        "body": [
            "new iot.CfnThing(this, \"${1:id}\", {",
            "  attributePayload: {",
            "  },",
            "  thingName: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot.CfnThing",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnThing"
        ],
        "prefix": "l1-iot-thing",
        "scope": "javascript,typescript"
    },
    "iot.CfnThingPrincipalAttachment": {
        "body": [
            "new iot.CfnThingPrincipalAttachment(this, \"${1:id}\", {",
            "  principal: \"${2:string}\", // Required",
            "  thingName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot.CfnThingPrincipalAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnThingPrincipalAttachment"
        ],
        "prefix": "l1-iot-thingprincipalattachment",
        "scope": "javascript,typescript"
    },
    "iot.CfnTopicRule": {
        "body": [
            "new iot.CfnTopicRule(this, \"${1:id}\", {",
            "  ruleName: \"${2:string}\",",
            "  tags: [],",
            "  topicRulePayload: {",
            "    actions: [],",
            "    awsIotSqlVersion: \"${5:string}\",",
            "    description: \"${6:string}\",",
            "    ruleDisabled: ${8|false,true|},",
            "    sql: \"${9:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iot.CfnTopicRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnTopicRule",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iot-topicrule",
        "scope": "javascript,typescript"
    },
    "iot.CfnTopicRuleDestination": {
        "body": [
            "new iot.CfnTopicRuleDestination(this, \"${1:id}\", {",
            "  httpUrlProperties: {",
            "    confirmationUrl: \"${2:string}\",",
            "  },",
            "  status: \"${3:string}\",",
            "  vpcProperties: {",
            "    roleArn: \"${4:string}\",",
            "    securityGroups: [],",
            "    subnetIds: [],",
            "    vpcId: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iot.CfnTopicRuleDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot.CfnTopicRuleDestination",
            "Attributes: ",
            "  attrArn",
            "  attrStatusReason"
        ],
        "prefix": "l1-iot-topicruledestination",
        "scope": "javascript,typescript"
    },
    "iot1click.CfnDevice": {
        "body": [
            "new iot1click.CfnDevice(this, \"${1:id}\", {",
            "  deviceId: \"${2:string}\", // Required",
            "  enabled: ${3|false,true|}, // Required",
            "})"
        ],
        "description": [
            "Construct: iot1click.CfnDevice",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot1click.CfnDevice",
            "Attributes: ",
            "  attrDeviceId",
            "  attrEnabled",
            "  attrArn"
        ],
        "prefix": "l1-iot1click-device",
        "scope": "javascript,typescript"
    },
    "iot1click.CfnPlacement": {
        "body": [
            "new iot1click.CfnPlacement(this, \"${1:id}\", {",
            "  associatedDevices: ${2:JSON},",
            "  attributes: ${3:JSON},",
            "  placementName: \"${4:string}\",",
            "  projectName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iot1click.CfnPlacement",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot1click.CfnPlacement",
            "Attributes: ",
            "  attrPlacementName",
            "  attrProjectName"
        ],
        "prefix": "l1-iot1click-placement",
        "scope": "javascript,typescript"
    },
    "iot1click.CfnProject": {
        "body": [
            "new iot1click.CfnProject(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  placementTemplate: {",
            "    defaultAttributes: ${3:JSON},",
            "    deviceTemplates: ${4:JSON},",
            "  },",
            "  projectName: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: iot1click.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iot1click.CfnProject",
            "Attributes: ",
            "  attrProjectName",
            "  attrArn"
        ],
        "prefix": "l1-iot1click-project",
        "scope": "javascript,typescript"
    },
    "iotanalytics.CfnChannel": {
        "body": [
            "new iotanalytics.CfnChannel(this, \"${1:id}\", {",
            "  channelName: \"${2:string}\",",
            "  channelStorage: {",
            "  },",
            "  retentionPeriod: {",
            "    numberOfDays: ${4:Number},",
            "    unlimited: ${5|false,true|},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotanalytics.CfnChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotanalytics.CfnChannel",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-iotanalytics-channel",
        "scope": "javascript,typescript"
    },
    "iotanalytics.CfnDataset": {
        "body": [
            "new iotanalytics.CfnDataset(this, \"${1:id}\", {",
            "  actions: [], // Required",
            "  contentDeliveryRules: [],",
            "  datasetName: \"${4:string}\",",
            "  lateDataRules: [],",
            "  retentionPeriod: {",
            "    numberOfDays: ${6:Number},",
            "    unlimited: ${7|false,true|},",
            "  },",
            "  tags: [],",
            "  triggers: [],",
            "  versioningConfiguration: {",
            "    maxVersions: ${9:Number},",
            "    unlimited: ${10|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iotanalytics.CfnDataset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotanalytics.CfnDataset",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-iotanalytics-dataset",
        "scope": "javascript,typescript"
    },
    "iotanalytics.CfnDatastore": {
        "body": [
            "new iotanalytics.CfnDatastore(this, \"${1:id}\", {",
            "  datastoreName: \"${2:string}\",",
            "  datastorePartitions: {",
            "    partitions: [],",
            "  },",
            "  datastoreStorage: {",
            "  },",
            "  fileFormatConfiguration: {",
            "  },",
            "  retentionPeriod: {",
            "    numberOfDays: ${6:Number},",
            "    unlimited: ${7|false,true|},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotanalytics.CfnDatastore",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotanalytics.CfnDatastore",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-iotanalytics-datastore",
        "scope": "javascript,typescript"
    },
    "iotanalytics.CfnPipeline": {
        "body": [
            "new iotanalytics.CfnPipeline(this, \"${1:id}\", {",
            "  pipelineActivities: [], // Required",
            "  pipelineName: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotanalytics.CfnPipeline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotanalytics.CfnPipeline",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-iotanalytics-pipeline",
        "scope": "javascript,typescript"
    },
    "iotcoredeviceadvisor.CfnSuiteDefinition": {
        "body": [
            "new iotcoredeviceadvisor.CfnSuiteDefinition(this, \"${1:id}\", {",
            "  suiteDefinitionConfiguration: ${2:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotcoredeviceadvisor.CfnSuiteDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotcoredeviceadvisor.CfnSuiteDefinition",
            "Attributes: ",
            "  attrSuiteDefinitionId",
            "  attrSuiteDefinitionArn",
            "  attrSuiteDefinitionVersion"
        ],
        "prefix": "l1-iotcoredeviceadvisor-suitedefinition",
        "scope": "javascript,typescript"
    },
    "iotevents.CfnAlarmModel": {
        "body": [
            "new iotevents.CfnAlarmModel(this, \"${1:id}\", {",
            "  alarmCapabilities: {",
            "  },",
            "  alarmEventActions: {",
            "    alarmActions: [],",
            "  },",
            "  alarmModelDescription: \"${4:string}\",",
            "  alarmModelName: \"${5:string}\",",
            "  alarmRule: {",
            "  },",
            "  key: \"${7:string}\",",
            "  roleArn: \"${8:string}\", // Required",
            "  severity: ${9:Number},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotevents.CfnAlarmModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotevents.CfnAlarmModel"
        ],
        "prefix": "l1-iotevents-alarmmodel",
        "scope": "javascript,typescript"
    },
    "iotevents.CfnDetectorModel": {
        "body": [
            "new iotevents.CfnDetectorModel(this, \"${1:id}\", {",
            "  detectorModelDefinition: {",
            "    initialStateName: \"${2:string}\",",
            "    states: [],",
            "  },",
            "  detectorModelDescription: \"${3:string}\",",
            "  detectorModelName: \"${4:string}\",",
            "  evaluationMethod: \"${5:string}\",",
            "  key: \"${6:string}\",",
            "  roleArn: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotevents.CfnDetectorModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotevents.CfnDetectorModel"
        ],
        "prefix": "l1-iotevents-detectormodel",
        "scope": "javascript,typescript"
    },
    "iotevents.CfnInput": {
        "body": [
            "new iotevents.CfnInput(this, \"${1:id}\", {",
            "  inputDefinition: {",
            "    attributes: [],",
            "  },",
            "  inputDescription: \"${3:string}\",",
            "  inputName: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotevents.CfnInput",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotevents.CfnInput"
        ],
        "prefix": "l1-iotevents-input",
        "scope": "javascript,typescript"
    },
    "iotfleethub.CfnApplication": {
        "body": [
            "new iotfleethub.CfnApplication(this, \"${1:id}\", {",
            "  applicationDescription: \"${2:string}\",",
            "  applicationName: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotfleethub.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotfleethub.CfnApplication",
            "Attributes: ",
            "  attrApplicationId",
            "  attrApplicationArn",
            "  attrApplicationUrl",
            "  attrApplicationState",
            "  attrApplicationCreationDate",
            "  attrApplicationLastUpdateDate",
            "  attrSsoClientId",
            "  attrErrorMessage"
        ],
        "prefix": "l1-iotfleethub-application",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnAccessPolicy": {
        "body": [
            "new iotsitewise.CfnAccessPolicy(this, \"${1:id}\", {",
            "  accessPolicyIdentity: {",
            "  },",
            "  accessPolicyPermission: \"${3:string}\", // Required",
            "  accessPolicyResource: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnAccessPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnAccessPolicy",
            "Attributes: ",
            "  attrAccessPolicyId",
            "  attrAccessPolicyArn"
        ],
        "prefix": "l1-iotsitewise-accesspolicy",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnAsset": {
        "body": [
            "new iotsitewise.CfnAsset(this, \"${1:id}\", {",
            "  assetHierarchies: [],",
            "  assetModelId: \"${3:string}\", // Required",
            "  assetName: \"${4:string}\", // Required",
            "  assetProperties: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnAsset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnAsset",
            "Attributes: ",
            "  attrAssetId",
            "  attrAssetArn"
        ],
        "prefix": "l1-iotsitewise-asset",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnAssetModel": {
        "body": [
            "new iotsitewise.CfnAssetModel(this, \"${1:id}\", {",
            "  assetModelCompositeModels: [],",
            "  assetModelDescription: \"${3:string}\",",
            "  assetModelHierarchies: [],",
            "  assetModelName: \"${5:string}\", // Required",
            "  assetModelProperties: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnAssetModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnAssetModel",
            "Attributes: ",
            "  attrAssetModelId",
            "  attrAssetModelArn"
        ],
        "prefix": "l1-iotsitewise-assetmodel",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnDashboard": {
        "body": [
            "new iotsitewise.CfnDashboard(this, \"${1:id}\", {",
            "  dashboardDefinition: \"${2:string}\", // Required",
            "  dashboardDescription: \"${3:string}\", // Required",
            "  dashboardName: \"${4:string}\", // Required",
            "  projectId: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnDashboard",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnDashboard",
            "Attributes: ",
            "  attrDashboardId",
            "  attrDashboardArn"
        ],
        "prefix": "l1-iotsitewise-dashboard",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnGateway": {
        "body": [
            "new iotsitewise.CfnGateway(this, \"${1:id}\", {",
            "  gatewayCapabilitySummaries: [],",
            "  gatewayName: \"${3:string}\", // Required",
            "  gatewayPlatform: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnGateway",
            "Attributes: ",
            "  attrGatewayId"
        ],
        "prefix": "l1-iotsitewise-gateway",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnPortal": {
        "body": [
            "new iotsitewise.CfnPortal(this, \"${1:id}\", {",
            "  alarms: ${2:JSON},",
            "  notificationSenderEmail: \"${3:string}\",",
            "  portalAuthMode: \"${4:string}\",",
            "  portalContactEmail: \"${5:string}\", // Required",
            "  portalDescription: \"${6:string}\",",
            "  portalName: \"${7:string}\", // Required",
            "  roleArn: \"${8:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnPortal",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnPortal",
            "Attributes: ",
            "  attrPortalArn",
            "  attrPortalClientId",
            "  attrPortalId",
            "  attrPortalStartUrl"
        ],
        "prefix": "l1-iotsitewise-portal",
        "scope": "javascript,typescript"
    },
    "iotsitewise.CfnProject": {
        "body": [
            "new iotsitewise.CfnProject(this, \"${1:id}\", {",
            "  assetIds: [],",
            "  portalId: \"${3:string}\", // Required",
            "  projectDescription: \"${4:string}\",",
            "  projectName: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotsitewise.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotsitewise.CfnProject",
            "Attributes: ",
            "  attrProjectId",
            "  attrProjectArn"
        ],
        "prefix": "l1-iotsitewise-project",
        "scope": "javascript,typescript"
    },
    "iotthingsgraph.CfnFlowTemplate": {
        "body": [
            "new iotthingsgraph.CfnFlowTemplate(this, \"${1:id}\", {",
            "  compatibleNamespaceVersion: ${2:Number},",
            "  definition: {",
            "    language: \"${3:string}\",",
            "    text: \"${4:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iotthingsgraph.CfnFlowTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotthingsgraph.CfnFlowTemplate"
        ],
        "prefix": "l1-iotthingsgraph-flowtemplate",
        "scope": "javascript,typescript"
    },
    "iottwinmaker.CfnComponentType": {
        "body": [
            "new iottwinmaker.CfnComponentType(this, \"${1:id}\", {",
            "  componentTypeId: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  extendsFrom: [],",
            "  functions: {",
            "  },",
            "  isSingleton: ${6|false,true|},",
            "  propertyDefinitions: {",
            "  },",
            "  tags: {",
            "  },",
            "  workspaceId: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iottwinmaker.CfnComponentType",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iottwinmaker.CfnComponentType",
            "Attributes: ",
            "  attrArn",
            "  attrCreationDateTime",
            "  attrUpdateDateTime",
            "  attrIsAbstract",
            "  attrIsSchemaInitialized"
        ],
        "prefix": "l1-iottwinmaker-componenttype",
        "scope": "javascript,typescript"
    },
    "iottwinmaker.CfnEntity": {
        "body": [
            "new iottwinmaker.CfnEntity(this, \"${1:id}\", {",
            "  components: {",
            "  },",
            "  description: \"${3:string}\",",
            "  entityId: \"${4:string}\",",
            "  entityName: \"${5:string}\", // Required",
            "  parentEntityId: \"${6:string}\",",
            "  tags: {",
            "  },",
            "  workspaceId: \"${8:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iottwinmaker.CfnEntity",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iottwinmaker.CfnEntity",
            "Attributes: ",
            "  attrHasChildEntities",
            "  attrArn",
            "  attrCreationDateTime",
            "  attrUpdateDateTime"
        ],
        "prefix": "l1-iottwinmaker-entity",
        "scope": "javascript,typescript"
    },
    "iottwinmaker.CfnScene": {
        "body": [
            "new iottwinmaker.CfnScene(this, \"${1:id}\", {",
            "  capabilities: [],",
            "  contentLocation: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  sceneId: \"${5:string}\", // Required",
            "  tags: {",
            "  },",
            "  workspaceId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iottwinmaker.CfnScene",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iottwinmaker.CfnScene",
            "Attributes: ",
            "  attrArn",
            "  attrCreationDateTime",
            "  attrUpdateDateTime"
        ],
        "prefix": "l1-iottwinmaker-scene",
        "scope": "javascript,typescript"
    },
    "iottwinmaker.CfnWorkspace": {
        "body": [
            "new iottwinmaker.CfnWorkspace(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  role: \"${3:string}\", // Required",
            "  s3Location: \"${4:string}\", // Required",
            "  tags: {",
            "  },",
            "  workspaceId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iottwinmaker.CfnWorkspace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iottwinmaker.CfnWorkspace",
            "Attributes: ",
            "  attrArn",
            "  attrCreationDateTime",
            "  attrUpdateDateTime"
        ],
        "prefix": "l1-iottwinmaker-workspace",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnDestination": {
        "body": [
            "new iotwireless.CfnDestination(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  expression: \"${3:string}\", // Required",
            "  expressionType: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  roleArn: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnDestination",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iotwireless-destination",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnDeviceProfile": {
        "body": [
            "new iotwireless.CfnDeviceProfile(this, \"${1:id}\", {",
            "  loRaWAN: {",
            "    classBTimeout: ${2:Number},",
            "    classCTimeout: ${3:Number},",
            "    macVersion: \"${4:string}\",",
            "    maxDutyCycle: ${5:Number},",
            "    maxEirp: ${6:Number},",
            "    pingSlotDr: ${7:Number},",
            "    pingSlotFreq: ${8:Number},",
            "    pingSlotPeriod: ${9:Number},",
            "    regParamsRevision: \"${10:string}\",",
            "    rfRegion: \"${11:string}\",",
            "    supports32BitFCnt: ${12|false,true|},",
            "    supportsClassB: ${13|false,true|},",
            "    supportsClassC: ${14|false,true|},",
            "    supportsJoin: ${15|false,true|},",
            "  },",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnDeviceProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnDeviceProfile",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-iotwireless-deviceprofile",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnFuotaTask": {
        "body": [
            "new iotwireless.CfnFuotaTask(this, \"${1:id}\", {",
            "  associateMulticastGroup: \"${2:string}\",",
            "  associateWirelessDevice: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  disassociateMulticastGroup: \"${5:string}\",",
            "  disassociateWirelessDevice: \"${6:string}\",",
            "  firmwareUpdateImage: \"${7:string}\", // Required",
            "  firmwareUpdateRole: \"${8:string}\", // Required",
            "  loRaWAN: {",
            "    rfRegion: \"${9:string}\",",
            "    startTime: \"${10:string}\",",
            "  },",
            "  name: \"${10:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnFuotaTask",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnFuotaTask",
            "Attributes: ",
            "  attrLoRaWAN.StartTime",
            "  attrArn",
            "  attrId",
            "  attrFuotaTaskStatus"
        ],
        "prefix": "l1-iotwireless-fuotatask",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnMulticastGroup": {
        "body": [
            "new iotwireless.CfnMulticastGroup(this, \"${1:id}\", {",
            "  associateWirelessDevice: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  disassociateWirelessDevice: \"${4:string}\",",
            "  loRaWAN: {",
            "    dlClass: \"${5:string}\",",
            "    numberOfDevicesInGroup: ${6:Number},",
            "    numberOfDevicesRequested: ${7:Number},",
            "    rfRegion: \"${8:string}\",",
            "  },",
            "  name: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnMulticastGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnMulticastGroup",
            "Attributes: ",
            "  attrLoRaWAN.NumberOfDevicesRequested",
            "  attrLoRaWAN.NumberOfDevicesInGroup",
            "  attrArn",
            "  attrId",
            "  attrStatus"
        ],
        "prefix": "l1-iotwireless-multicastgroup",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnPartnerAccount": {
        "body": [
            "new iotwireless.CfnPartnerAccount(this, \"${1:id}\", {",
            "  accountLinked: ${2|false,true|},",
            "  fingerprint: \"${3:string}\",",
            "  partnerAccountId: \"${4:string}\",",
            "  partnerType: \"${5:string}\",",
            "  sidewalk: {",
            "    appServerPrivateKey: \"${6:string}\",",
            "  },",
            "  sidewalkUpdate: {",
            "    appServerPrivateKey: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnPartnerAccount",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnPartnerAccount",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-iotwireless-partneraccount",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnServiceProfile": {
        "body": [
            "new iotwireless.CfnServiceProfile(this, \"${1:id}\", {",
            "  loRaWAN: {",
            "    addGwMetadata: ${2|false,true|},",
            "    channelMask: \"${3:string}\",",
            "    devStatusReqFreq: ${4:Number},",
            "    dlBucketSize: ${5:Number},",
            "    dlRate: ${6:Number},",
            "    dlRatePolicy: \"${7:string}\",",
            "    drMax: ${8:Number},",
            "    drMin: ${9:Number},",
            "    hrAllowed: ${10|false,true|},",
            "    minGwDiversity: ${11:Number},",
            "    nwkGeoLoc: ${12|false,true|},",
            "    prAllowed: ${13|false,true|},",
            "    raAllowed: ${14|false,true|},",
            "    reportDevStatusBattery: ${15|false,true|},",
            "    reportDevStatusMargin: ${16|false,true|},",
            "    targetPer: ${17:Number},",
            "    ulBucketSize: ${18:Number},",
            "    ulRate: ${19:Number},",
            "    ulRatePolicy: \"${20:string}\",",
            "  },",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnServiceProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnServiceProfile",
            "Attributes: ",
            "  attrLoRaWAN.UlRate",
            "  attrLoRaWAN.UlBucketSize",
            "  attrLoRaWAN.UlRatePolicy",
            "  attrLoRaWAN.DlRate",
            "  attrLoRaWAN.DlBucketSize",
            "  attrLoRaWAN.DlRatePolicy",
            "  attrLoRaWAN.DevStatusReqFreq",
            "  attrLoRaWAN.ReportDevStatusBattery",
            "  attrLoRaWAN.ReportDevStatusMargin",
            "  attrLoRaWAN.DrMin",
            "  attrLoRaWAN.DrMax",
            "  attrLoRaWAN.ChannelMask",
            "  attrLoRaWAN.PrAllowed",
            "  attrLoRaWAN.HrAllowed",
            "  attrLoRaWAN.RaAllowed",
            "  attrLoRaWAN.NwkGeoLoc",
            "  attrLoRaWAN.TargetPer",
            "  attrLoRaWAN.MinGwDiversity",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-iotwireless-serviceprofile",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnTaskDefinition": {
        "body": [
            "new iotwireless.CfnTaskDefinition(this, \"${1:id}\", {",
            "  autoCreateTasks: ${2|false,true|}, // Required",
            "  loRaWANUpdateGatewayTaskEntry: {",
            "  },",
            "  name: \"${4:string}\",",
            "  tags: [],",
            "  taskDefinitionType: \"${6:string}\",",
            "  update: {",
            "    updateDataRole: \"${8:string}\",",
            "    updateDataSource: \"${9:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnTaskDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnTaskDefinition",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-iotwireless-taskdefinition",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnWirelessDevice": {
        "body": [
            "new iotwireless.CfnWirelessDevice(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  destinationName: \"${3:string}\", // Required",
            "  lastUplinkReceivedAt: \"${4:string}\",",
            "  loRaWAN: {",
            "    devEui: \"${7:string}\",",
            "    deviceProfileId: \"${8:string}\",",
            "    serviceProfileId: \"${11:string}\",",
            "  },",
            "  name: \"${6:string}\",",
            "  tags: [],",
            "  thingArn: \"${8:string}\",",
            "  type: \"${9:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnWirelessDevice",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnWirelessDevice",
            "Attributes: ",
            "  attrArn",
            "  attrId",
            "  attrThingName"
        ],
        "prefix": "l1-iotwireless-wirelessdevice",
        "scope": "javascript,typescript"
    },
    "iotwireless.CfnWirelessGateway": {
        "body": [
            "new iotwireless.CfnWirelessGateway(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  lastUplinkReceivedAt: \"${3:string}\",",
            "  loRaWAN: {",
            "    gatewayEui: \"${4:string}\",",
            "    rfRegion: \"${5:string}\",",
            "  },",
            "  name: \"${5:string}\",",
            "  tags: [],",
            "  thingArn: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: iotwireless.CfnWirelessGateway",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iotwireless.CfnWirelessGateway",
            "Attributes: ",
            "  attrArn",
            "  attrId",
            "  attrThingName"
        ],
        "prefix": "l1-iotwireless-wirelessgateway",
        "scope": "javascript,typescript"
    },
    "ivs.CfnChannel": {
        "body": [
            "new ivs.CfnChannel(this, \"${1:id}\", {",
            "  authorized: ${2|false,true|},",
            "  latencyMode: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  recordingConfigurationArn: \"${5:string}\",",
            "  tags: [],",
            "  type: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: ivs.CfnChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ivs.CfnChannel",
            "Attributes: ",
            "  attrArn",
            "  attrPlaybackUrl",
            "  attrIngestEndpoint"
        ],
        "prefix": "l1-ivs-channel",
        "scope": "javascript,typescript"
    },
    "ivs.CfnPlaybackKeyPair": {
        "body": [
            "new ivs.CfnPlaybackKeyPair(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  publicKeyMaterial: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ivs.CfnPlaybackKeyPair",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ivs.CfnPlaybackKeyPair",
            "Attributes: ",
            "  attrFingerprint",
            "  attrArn"
        ],
        "prefix": "l1-ivs-playbackkeypair",
        "scope": "javascript,typescript"
    },
    "ivs.CfnRecordingConfiguration": {
        "body": [
            "new ivs.CfnRecordingConfiguration(this, \"${1:id}\", {",
            "  destinationConfiguration: {",
            "  },",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "  thumbnailConfiguration: {",
            "    recordingMode: \"${5:string}\",",
            "    targetIntervalSeconds: ${6:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ivs.CfnRecordingConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ivs.CfnRecordingConfiguration",
            "Attributes: ",
            "  attrArn",
            "  attrState"
        ],
        "prefix": "l1-ivs-recordingconfiguration",
        "scope": "javascript,typescript"
    },
    "ivs.CfnStreamKey": {
        "body": [
            "new ivs.CfnStreamKey(this, \"${1:id}\", {",
            "  channelArn: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ivs.CfnStreamKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ivs.CfnStreamKey",
            "Attributes: ",
            "  attrArn",
            "  attrValue"
        ],
        "prefix": "l1-ivs-streamkey",
        "scope": "javascript,typescript"
    },
    "kafkaconnect.CfnConnector": {
        "body": [
            "new kafkaconnect.CfnConnector(this, \"${1:id}\", {",
            "  capacity: {",
            "  },",
            "  connectorConfiguration: {",
            "  },",
            "  connectorDescription: \"${4:string}\",",
            "  connectorName: \"${5:string}\", // Required",
            "  kafkaCluster: {",
            "  },",
            "  kafkaClusterClientAuthentication: {",
            "    authenticationType: \"${7:string}\",",
            "  },",
            "  kafkaClusterEncryptionInTransit: {",
            "    encryptionType: \"${8:string}\",",
            "  },",
            "  kafkaConnectVersion: \"${9:string}\", // Required",
            "  logDelivery: {",
            "  },",
            "  plugins: [], // Required",
            "  serviceExecutionRoleArn: \"${12:string}\", // Required",
            "  workerConfiguration: {",
            "    revision: ${13:Number},",
            "    workerConfigurationArn: \"${14:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kafkaconnect.CfnConnector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kafkaconnect.CfnConnector",
            "Attributes: ",
            "  attrConnectorArn"
        ],
        "prefix": "l1-kafkaconnect-connector",
        "scope": "javascript,typescript"
    },
    "kendra.CfnDataSource": {
        "body": [
            "new kendra.CfnDataSource(this, \"${1:id}\", {",
            "  customDocumentEnrichmentConfiguration: {",
            "    inlineConfigurations: [],",
            "    roleArn: \"${5:string}\",",
            "  },",
            "  dataSourceConfiguration: {",
            "  },",
            "  description: \"${4:string}\",",
            "  indexId: \"${5:string}\", // Required",
            "  name: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\",",
            "  schedule: \"${8:string}\",",
            "  tags: [],",
            "  type: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: kendra.CfnDataSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kendra.CfnDataSource",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-kendra-datasource",
        "scope": "javascript,typescript"
    },
    "kendra.CfnFaq": {
        "body": [
            "new kendra.CfnFaq(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  fileFormat: \"${3:string}\",",
            "  indexId: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  roleArn: \"${6:string}\", // Required",
            "  s3Path: {",
            "    bucket: \"${7:string}\",",
            "    key: \"${8:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kendra.CfnFaq",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kendra.CfnFaq",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-kendra-faq",
        "scope": "javascript,typescript"
    },
    "kendra.CfnIndex": {
        "body": [
            "new kendra.CfnIndex(this, \"${1:id}\", {",
            "  capacityUnits: {",
            "    queryCapacityUnits: ${2:Number},",
            "    storageCapacityUnits: ${3:Number},",
            "  },",
            "  description: \"${3:string}\",",
            "  documentMetadataConfigurations: [],",
            "  edition: \"${5:string}\", // Required",
            "  name: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\", // Required",
            "  serverSideEncryptionConfiguration: {",
            "    kmsKeyId: \"${8:string}\",",
            "  },",
            "  tags: [],",
            "  userContextPolicy: \"${10:string}\",",
            "  userTokenConfigurations: [],",
            "})"
        ],
        "description": [
            "Construct: kendra.CfnIndex",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kendra.CfnIndex",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-kendra-index",
        "scope": "javascript,typescript"
    },
    "kinesis.CfnStream": {
        "body": [
            "new kinesis.CfnStream(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  retentionPeriodHours: ${3:Number},",
            "  shardCount: ${4:Number},",
            "  streamEncryption: {",
            "    encryptionType: \"${5:string}\",",
            "    keyId: \"${6:string}\",",
            "  },",
            "  streamModeDetails: {",
            "    streamMode: \"${6:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kinesis.CfnStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesis.CfnStream",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-kinesis-stream",
        "scope": "javascript,typescript"
    },
    "kinesis.CfnStreamConsumer": {
        "body": [
            "new kinesis.CfnStreamConsumer(this, \"${1:id}\", {",
            "  consumerName: \"${2:string}\", // Required",
            "  streamARN: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: kinesis.CfnStreamConsumer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesis.CfnStreamConsumer",
            "Attributes: ",
            "  attrConsumerCreationTimestamp",
            "  attrConsumerName",
            "  attrConsumerARN",
            "  attrConsumerStatus",
            "  attrStreamARN"
        ],
        "prefix": "l1-kinesis-streamconsumer",
        "scope": "javascript,typescript"
    },
    "kinesisanalytics.CfnApplication": {
        "body": [
            "new kinesisanalytics.CfnApplication(this, \"${1:id}\", {",
            "  applicationCode: \"${2:string}\",",
            "  applicationDescription: \"${3:string}\",",
            "  applicationName: \"${4:string}\",",
            "  inputs: [], // Required",
            "})"
        ],
        "description": [
            "Construct: kinesisanalytics.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalytics.CfnApplication"
        ],
        "prefix": "l1-kinesisanalytics-application",
        "scope": "javascript,typescript"
    },
    "kinesisanalytics.CfnApplicationOutput": {
        "body": [
            "new kinesisanalytics.CfnApplicationOutput(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  output: {",
            "    name: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kinesisanalytics.CfnApplicationOutput",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalytics.CfnApplicationOutput"
        ],
        "prefix": "l1-kinesisanalytics-applicationoutput",
        "scope": "javascript,typescript"
    },
    "kinesisanalytics.CfnApplicationReferenceDataSource": {
        "body": [
            "new kinesisanalytics.CfnApplicationReferenceDataSource(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  referenceDataSource: {",
            "    tableName: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kinesisanalytics.CfnApplicationReferenceDataSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalytics.CfnApplicationReferenceDataSource"
        ],
        "prefix": "l1-kinesisanalytics-applicationreferencedatasource",
        "scope": "javascript,typescript"
    },
    "kinesisanalyticsv2.CfnApplication": {
        "body": [
            "new kinesisanalyticsv2.CfnApplication(this, \"${1:id}\", {",
            "  applicationConfiguration: {",
            "  },",
            "  applicationDescription: \"${3:string}\",",
            "  applicationMode: \"${4:string}\",",
            "  applicationName: \"${5:string}\",",
            "  runtimeEnvironment: \"${6:string}\", // Required",
            "  serviceExecutionRole: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kinesisanalyticsv2.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalyticsv2.CfnApplication"
        ],
        "prefix": "l1-kinesisanalyticsv2-application",
        "scope": "javascript,typescript"
    },
    "kinesisanalyticsv2.CfnApplicationCloudWatchLoggingOption": {
        "body": [
            "new kinesisanalyticsv2.CfnApplicationCloudWatchLoggingOption(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  cloudWatchLoggingOption: {",
            "    logStreamARN: \"${3:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kinesisanalyticsv2.CfnApplicationCloudWatchLoggingOption",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalyticsv2.CfnApplicationCloudWatchLoggingOption"
        ],
        "prefix": "l1-kinesisanalyticsv2-applicationcloudwatchloggingoption",
        "scope": "javascript,typescript"
    },
    "kinesisanalyticsv2.CfnApplicationOutput": {
        "body": [
            "new kinesisanalyticsv2.CfnApplicationOutput(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  output: {",
            "    name: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kinesisanalyticsv2.CfnApplicationOutput",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalyticsv2.CfnApplicationOutput"
        ],
        "prefix": "l1-kinesisanalyticsv2-applicationoutput",
        "scope": "javascript,typescript"
    },
    "kinesisanalyticsv2.CfnApplicationReferenceDataSource": {
        "body": [
            "new kinesisanalyticsv2.CfnApplicationReferenceDataSource(this, \"${1:id}\", {",
            "  applicationName: \"${2:string}\", // Required",
            "  referenceDataSource: {",
            "    tableName: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: kinesisanalyticsv2.CfnApplicationReferenceDataSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisanalyticsv2.CfnApplicationReferenceDataSource"
        ],
        "prefix": "l1-kinesisanalyticsv2-applicationreferencedatasource",
        "scope": "javascript,typescript"
    },
    "kinesisfirehose.CfnDeliveryStream": {
        "body": [
            "new kinesisfirehose.CfnDeliveryStream(this, \"${1:id}\", {",
            "  amazonopensearchserviceDestinationConfiguration: {",
            "    clusterEndpoint: \"${4:string}\",",
            "    domainARN: \"${5:string}\",",
            "    indexName: \"${6:string}\",",
            "    indexRotationPeriod: \"${7:string}\",",
            "    roleARN: \"${10:string}\",",
            "    s3BackupMode: \"${11:string}\",",
            "    typeName: \"${13:string}\",",
            "  },",
            "  deliveryStreamEncryptionConfigurationInput: {",
            "    keyARN: \"${3:string}\",",
            "    keyType: \"${4:string}\",",
            "  },",
            "  deliveryStreamName: \"${4:string}\",",
            "  deliveryStreamType: \"${5:string}\",",
            "  elasticsearchDestinationConfiguration: {",
            "    clusterEndpoint: \"${8:string}\",",
            "    domainARN: \"${9:string}\",",
            "    indexName: \"${10:string}\",",
            "    indexRotationPeriod: \"${11:string}\",",
            "    roleARN: \"${14:string}\",",
            "    s3BackupMode: \"${15:string}\",",
            "    typeName: \"${17:string}\",",
            "  },",
            "  extendedS3DestinationConfiguration: {",
            "    bucketARN: \"${7:string}\",",
            "    compressionFormat: \"${10:string}\",",
            "    errorOutputPrefix: \"${14:string}\",",
            "    prefix: \"${15:string}\",",
            "    roleARN: \"${17:string}\",",
            "    s3BackupMode: \"${19:string}\",",
            "  },",
            "  httpEndpointDestinationConfiguration: {",
            "    roleARN: \"${14:string}\",",
            "    s3BackupMode: \"${15:string}\",",
            "  },",
            "  kinesisStreamSourceConfiguration: {",
            "    kinesisStreamARN: \"${9:string}\",",
            "    roleARN: \"${10:string}\",",
            "  },",
            "  redshiftDestinationConfiguration: {",
            "    clusterJDBCURL: \"${11:string}\",",
            "    password: \"${13:string}\",",
            "    roleARN: \"${16:string}\",",
            "    s3BackupMode: \"${18:string}\",",
            "    username: \"${20:string}\",",
            "  },",
            "  s3DestinationConfiguration: {",
            "    bucketARN: \"${11:string}\",",
            "    compressionFormat: \"${14:string}\",",
            "    errorOutputPrefix: \"${16:string}\",",
            "    prefix: \"${17:string}\",",
            "    roleARN: \"${18:string}\",",
            "  },",
            "  splunkDestinationConfiguration: {",
            "    hECAcknowledgmentTimeoutInSeconds: ${13:Number},",
            "    hECEndpoint: \"${14:string}\",",
            "    hECEndpointType: \"${15:string}\",",
            "    hECToken: \"${16:string}\",",
            "    s3BackupMode: \"${19:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kinesisfirehose.CfnDeliveryStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisfirehose.CfnDeliveryStream",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-kinesisfirehose-deliverystream",
        "scope": "javascript,typescript"
    },
    "kinesisvideo.CfnSignalingChannel": {
        "body": [
            "new kinesisvideo.CfnSignalingChannel(this, \"${1:id}\", {",
            "  messageTtlSeconds: ${2:Number},",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "  type: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: kinesisvideo.CfnSignalingChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisvideo.CfnSignalingChannel",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-kinesisvideo-signalingchannel",
        "scope": "javascript,typescript"
    },
    "kinesisvideo.CfnStream": {
        "body": [
            "new kinesisvideo.CfnStream(this, \"${1:id}\", {",
            "  dataRetentionInHours: ${2:Number},",
            "  deviceName: \"${3:string}\",",
            "  kmsKeyId: \"${4:string}\",",
            "  mediaType: \"${5:string}\",",
            "  name: \"${6:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kinesisvideo.CfnStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kinesisvideo.CfnStream",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-kinesisvideo-stream",
        "scope": "javascript,typescript"
    },
    "kms.CfnAlias": {
        "body": [
            "new kms.CfnAlias(this, \"${1:id}\", {",
            "  aliasName: \"${2:string}\", // Required",
            "  targetKeyId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: kms.CfnAlias",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kms.CfnAlias"
        ],
        "prefix": "l1-kms-alias",
        "scope": "javascript,typescript"
    },
    "kms.CfnKey": {
        "body": [
            "new kms.CfnKey(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  enableKeyRotation: ${3|false,true|},",
            "  enabled: ${4|false,true|},",
            "  keyPolicy: ${5:JSON}, // Required",
            "  keySpec: \"${6:string}\",",
            "  keyUsage: \"${7:string}\",",
            "  multiRegion: ${8|false,true|},",
            "  pendingWindowInDays: ${9:Number},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kms.CfnKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kms.CfnKey",
            "Attributes: ",
            "  attrArn",
            "  attrKeyId"
        ],
        "prefix": "l1-kms-key",
        "scope": "javascript,typescript"
    },
    "kms.CfnReplicaKey": {
        "body": [
            "new kms.CfnReplicaKey(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  enabled: ${3|false,true|},",
            "  keyPolicy: ${4:JSON}, // Required",
            "  pendingWindowInDays: ${5:Number},",
            "  primaryKeyArn: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: kms.CfnReplicaKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-kms.CfnReplicaKey",
            "Attributes: ",
            "  attrArn",
            "  attrKeyId"
        ],
        "prefix": "l1-kms-replicakey",
        "scope": "javascript,typescript"
    },
    "lakeformation.CfnDataLakeSettings": {
        "body": [
            "new lakeformation.CfnDataLakeSettings(this, \"${1:id}\", {",
            "  admins: {",
            "  },",
            "  trustedResourceOwners: [],",
            "})"
        ],
        "description": [
            "Construct: lakeformation.CfnDataLakeSettings",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lakeformation.CfnDataLakeSettings"
        ],
        "prefix": "l1-lakeformation-datalakesettings",
        "scope": "javascript,typescript"
    },
    "lakeformation.CfnPermissions": {
        "body": [
            "new lakeformation.CfnPermissions(this, \"${1:id}\", {",
            "  dataLakePrincipal: {",
            "    dataLakePrincipalIdentifier: \"${2:string}\",",
            "  },",
            "  permissions: [],",
            "  permissionsWithGrantOption: [],",
            "  resource: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: lakeformation.CfnPermissions",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lakeformation.CfnPermissions"
        ],
        "prefix": "l1-lakeformation-permissions",
        "scope": "javascript,typescript"
    },
    "lakeformation.CfnResource": {
        "body": [
            "new lakeformation.CfnResource(this, \"${1:id}\", {",
            "  resourceArn: \"${2:string}\", // Required",
            "  roleArn: \"${3:string}\",",
            "  useServiceLinkedRole: ${4|false,true|}, // Required",
            "})"
        ],
        "description": [
            "Construct: lakeformation.CfnResource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lakeformation.CfnResource"
        ],
        "prefix": "l1-lakeformation-resource",
        "scope": "javascript,typescript"
    },
    "lambda.CfnAlias": {
        "body": [
            "new lambda.CfnAlias(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  functionName: \"${3:string}\", // Required",
            "  functionVersion: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  provisionedConcurrencyConfig: {",
            "    provisionedConcurrentExecutions: ${6:Number},",
            "  },",
            "  routingConfig: {",
            "    additionalVersionWeights: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnAlias",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnAlias"
        ],
        "prefix": "l1-lambda-alias",
        "scope": "javascript,typescript"
    },
    "lambda.CfnCodeSigningConfig": {
        "body": [
            "new lambda.CfnCodeSigningConfig(this, \"${1:id}\", {",
            "  allowedPublishers: {",
            "    signingProfileVersionArns: [],",
            "  },",
            "  codeSigningPolicies: {",
            "    untrustedArtifactOnDeployment: \"${3:string}\",",
            "  },",
            "  description: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnCodeSigningConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnCodeSigningConfig",
            "Attributes: ",
            "  attrCodeSigningConfigId",
            "  attrCodeSigningConfigArn"
        ],
        "prefix": "l1-lambda-codesigningconfig",
        "scope": "javascript,typescript"
    },
    "lambda.CfnEventInvokeConfig": {
        "body": [
            "new lambda.CfnEventInvokeConfig(this, \"${1:id}\", {",
            "  destinationConfig: {",
            "  },",
            "  functionName: \"${3:string}\", // Required",
            "  maximumEventAgeInSeconds: ${4:Number},",
            "  maximumRetryAttempts: ${5:Number},",
            "  qualifier: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnEventInvokeConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnEventInvokeConfig"
        ],
        "prefix": "l1-lambda-eventinvokeconfig",
        "scope": "javascript,typescript"
    },
    "lambda.CfnEventSourceMapping": {
        "body": [
            "new lambda.CfnEventSourceMapping(this, \"${1:id}\", {",
            "  batchSize: ${2:Number},",
            "  bisectBatchOnFunctionError: ${3|false,true|},",
            "  destinationConfig: {",
            "  },",
            "  enabled: ${5|false,true|},",
            "  eventSourceArn: \"${6:string}\",",
            "  filterCriteria: {",
            "    filters: [],",
            "  },",
            "  functionName: \"${8:string}\", // Required",
            "  functionResponseTypes: [],",
            "  maximumBatchingWindowInSeconds: ${10:Number},",
            "  maximumRecordAgeInSeconds: ${11:Number},",
            "  maximumRetryAttempts: ${12:Number},",
            "  parallelizationFactor: ${13:Number},",
            "  queues: [],",
            "  selfManagedEventSource: {",
            "  },",
            "  sourceAccessConfigurations: [],",
            "  startingPosition: \"${17:string}\",",
            "  startingPositionTimestamp: ${18:Number},",
            "  topics: [],",
            "  tumblingWindowInSeconds: ${20:Number},",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnEventSourceMapping",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnEventSourceMapping",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-lambda-eventsourcemapping",
        "scope": "javascript,typescript"
    },
    "lambda.CfnFunction": {
        "body": [
            "new lambda.CfnFunction(this, \"${1:id}\", {",
            "  architectures: [],",
            "  code: {",
            "    imageUri: \"${3:string}\",",
            "    s3Bucket: \"${4:string}\",",
            "    s3Key: \"${5:string}\",",
            "    s3ObjectVersion: \"${6:string}\",",
            "    zipFile: \"${7:string}\",",
            "  },",
            "  codeSigningConfigArn: \"${4:string}\",",
            "  deadLetterConfig: {",
            "    targetArn: \"${5:string}\",",
            "  },",
            "  description: \"${6:string}\",",
            "  environment: {",
            "  },",
            "  ephemeralStorage: {",
            "    size: ${8:Number},",
            "  },",
            "  fileSystemConfigs: [],",
            "  functionName: \"${10:string}\",",
            "  handler: \"${11:string}\",",
            "  imageConfig: {",
            "    command: [],",
            "    entryPoint: [],",
            "    workingDirectory: \"${14:string}\",",
            "  },",
            "  kmsKeyArn: \"${13:string}\",",
            "  layers: [],",
            "  memorySize: ${15:Number},",
            "  packageType: \"${16:string}\",",
            "  reservedConcurrentExecutions: ${17:Number},",
            "  role: \"${18:string}\", // Required",
            "  runtime: \"${19:string}\",",
            "  tags: [],",
            "  timeout: ${21:Number},",
            "  tracingConfig: {",
            "    mode: \"${22:string}\",",
            "  },",
            "  vpcConfig: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnFunction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnFunction",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-lambda-function",
        "scope": "javascript,typescript"
    },
    "lambda.CfnLayerVersion": {
        "body": [
            "new lambda.CfnLayerVersion(this, \"${1:id}\", {",
            "  compatibleArchitectures: [],",
            "  compatibleRuntimes: [],",
            "  content: {",
            "    s3Bucket: \"${4:string}\",",
            "    s3Key: \"${5:string}\",",
            "    s3ObjectVersion: \"${6:string}\",",
            "  },",
            "  description: \"${5:string}\",",
            "  layerName: \"${6:string}\",",
            "  licenseInfo: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnLayerVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnLayerVersion"
        ],
        "prefix": "l1-lambda-layerversion",
        "scope": "javascript,typescript"
    },
    "lambda.CfnLayerVersionPermission": {
        "body": [
            "new lambda.CfnLayerVersionPermission(this, \"${1:id}\", {",
            "  action: \"${2:string}\", // Required",
            "  layerVersionArn: \"${3:string}\", // Required",
            "  organizationId: \"${4:string}\",",
            "  principal: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnLayerVersionPermission",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnLayerVersionPermission"
        ],
        "prefix": "l1-lambda-layerversionpermission",
        "scope": "javascript,typescript"
    },
    "lambda.CfnPermission": {
        "body": [
            "new lambda.CfnPermission(this, \"${1:id}\", {",
            "  action: \"${2:string}\", // Required",
            "  eventSourceToken: \"${3:string}\",",
            "  functionName: \"${4:string}\", // Required",
            "  functionUrlAuthType: \"${5:string}\",",
            "  principal: \"${6:string}\", // Required",
            "  principalOrgID: \"${7:string}\",",
            "  sourceAccount: \"${8:string}\",",
            "  sourceArn: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnPermission",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnPermission"
        ],
        "prefix": "l1-lambda-permission",
        "scope": "javascript,typescript"
    },
    "lambda.CfnUrl": {
        "body": [
            "new lambda.CfnUrl(this, \"${1:id}\", {",
            "  authType: \"${2:string}\", // Required",
            "  cors: {",
            "    allowCredentials: ${3|false,true|},",
            "    allowHeaders: [],",
            "    allowMethods: [],",
            "    allowOrigins: [],",
            "    exposeHeaders: [],",
            "    maxAge: ${8:Number},",
            "  },",
            "  qualifier: \"${4:string}\",",
            "  targetFunctionArn: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnUrl",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnUrl",
            "Attributes: ",
            "  attrFunctionArn",
            "  attrFunctionUrl"
        ],
        "prefix": "l1-lambda-url",
        "scope": "javascript,typescript"
    },
    "lambda.CfnVersion": {
        "body": [
            "new lambda.CfnVersion(this, \"${1:id}\", {",
            "  codeSha256: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  functionName: \"${4:string}\", // Required",
            "  provisionedConcurrencyConfig: {",
            "    provisionedConcurrentExecutions: ${5:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: lambda.CfnVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.CfnVersion",
            "Attributes: ",
            "  attrVersion"
        ],
        "prefix": "l1-lambda-version",
        "scope": "javascript,typescript"
    },
    "lex.CfnBot": {
        "body": [
            "new lex.CfnBot(this, \"${1:id}\", {",
            "  autoBuildBotLocales: ${2|false,true|},",
            "  botFileS3Location: {",
            "    s3Bucket: \"${3:string}\",",
            "    s3ObjectKey: \"${4:string}\",",
            "    s3ObjectVersion: \"${5:string}\",",
            "  },",
            "  botLocales: [],",
            "  botTags: [],",
            "  dataPrivacy: ${6:JSON}, // Required",
            "  description: \"${7:string}\",",
            "  idleSessionTTLInSeconds: ${8:Number}, // Required",
            "  name: \"${9:string}\", // Required",
            "  roleArn: \"${10:string}\", // Required",
            "  testBotAliasSettings: {",
            "    botAliasLocaleSettings: [],",
            "    description: \"${13:string}\",",
            "    sentimentAnalysisSettings: ${14:JSON},",
            "  },",
            "  testBotAliasTags: [],",
            "})"
        ],
        "description": [
            "Construct: lex.CfnBot",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lex.CfnBot",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-lex-bot",
        "scope": "javascript,typescript"
    },
    "lex.CfnBotAlias": {
        "body": [
            "new lex.CfnBotAlias(this, \"${1:id}\", {",
            "  botAliasLocaleSettings: [],",
            "  botAliasName: \"${3:string}\", // Required",
            "  botAliasTags: [],",
            "  botId: \"${5:string}\", // Required",
            "  botVersion: \"${6:string}\",",
            "  conversationLogSettings: {",
            "    audioLogSettings: [],",
            "    textLogSettings: [],",
            "  },",
            "  description: \"${8:string}\",",
            "  sentimentAnalysisSettings: ${9:JSON},",
            "})"
        ],
        "description": [
            "Construct: lex.CfnBotAlias",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lex.CfnBotAlias",
            "Attributes: ",
            "  attrBotAliasId",
            "  attrArn",
            "  attrBotAliasStatus"
        ],
        "prefix": "l1-lex-botalias",
        "scope": "javascript,typescript"
    },
    "lex.CfnBotVersion": {
        "body": [
            "new lex.CfnBotVersion(this, \"${1:id}\", {",
            "  botId: \"${2:string}\", // Required",
            "  botVersionLocaleSpecification: [], // Required",
            "  description: \"${4:string}\",",
            "})"
        ],
        "description": [
            "Construct: lex.CfnBotVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lex.CfnBotVersion",
            "Attributes: ",
            "  attrBotVersion"
        ],
        "prefix": "l1-lex-botversion",
        "scope": "javascript,typescript"
    },
    "lex.CfnResourcePolicy": {
        "body": [
            "new lex.CfnResourcePolicy(this, \"${1:id}\", {",
            "  policy: {",
            "  },",
            "  resourceArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lex.CfnResourcePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lex.CfnResourcePolicy",
            "Attributes: ",
            "  attrRevisionId",
            "  attrId"
        ],
        "prefix": "l1-lex-resourcepolicy",
        "scope": "javascript,typescript"
    },
    "licensemanager.CfnGrant": {
        "body": [
            "new licensemanager.CfnGrant(this, \"${1:id}\", {",
            "  allowedOperations: [],",
            "  grantName: \"${3:string}\",",
            "  homeRegion: \"${4:string}\",",
            "  licenseArn: \"${5:string}\",",
            "  principals: [],",
            "  status: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: licensemanager.CfnGrant",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-licensemanager.CfnGrant",
            "Attributes: ",
            "  attrGrantArn",
            "  attrVersion"
        ],
        "prefix": "l1-licensemanager-grant",
        "scope": "javascript,typescript"
    },
    "licensemanager.CfnLicense": {
        "body": [
            "new licensemanager.CfnLicense(this, \"${1:id}\", {",
            "  beneficiary: \"${2:string}\",",
            "  consumptionConfiguration: {",
            "    renewType: \"${5:string}\",",
            "  },",
            "  entitlements: [], // Required",
            "  homeRegion: \"${5:string}\", // Required",
            "  issuer: {",
            "    name: \"${6:string}\",",
            "    signKey: \"${7:string}\",",
            "  },",
            "  licenseMetadata: [],",
            "  licenseName: \"${8:string}\", // Required",
            "  productName: \"${9:string}\", // Required",
            "  productSKU: \"${10:string}\",",
            "  status: \"${11:string}\",",
            "  validity: {",
            "    begin: \"${12:string}\",",
            "    end: \"${13:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: licensemanager.CfnLicense",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-licensemanager.CfnLicense",
            "Attributes: ",
            "  attrLicenseArn",
            "  attrVersion"
        ],
        "prefix": "l1-licensemanager-license",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnAlarm": {
        "body": [
            "new lightsail.CfnAlarm(this, \"${1:id}\", {",
            "  alarmName: \"${2:string}\", // Required",
            "  comparisonOperator: \"${3:string}\", // Required",
            "  contactProtocols: [],",
            "  datapointsToAlarm: ${5:Number},",
            "  evaluationPeriods: ${6:Number}, // Required",
            "  metricName: \"${7:string}\", // Required",
            "  monitoredResourceName: \"${8:string}\", // Required",
            "  notificationEnabled: ${9|false,true|},",
            "  notificationTriggers: [],",
            "  threshold: ${11:Number}, // Required",
            "  treatMissingData: \"${12:string}\",",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnAlarm",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnAlarm",
            "Attributes: ",
            "  attrAlarmArn",
            "  attrState"
        ],
        "prefix": "l1-lightsail-alarm",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnBucket": {
        "body": [
            "new lightsail.CfnBucket(this, \"${1:id}\", {",
            "  accessRules: {",
            "    allowPublicOverrides: ${2|false,true|},",
            "    getObject: \"${3:string}\",",
            "  },",
            "  bucketName: \"${3:string}\", // Required",
            "  bundleId: \"${4:string}\", // Required",
            "  objectVersioning: ${5|false,true|},",
            "  readOnlyAccessAccounts: [],",
            "  resourcesReceivingAccess: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnBucket",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnBucket",
            "Attributes: ",
            "  attrBucketArn",
            "  attrUrl",
            "  attrAbleToUpdateBundle"
        ],
        "prefix": "l1-lightsail-bucket",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnCertificate": {
        "body": [
            "new lightsail.CfnCertificate(this, \"${1:id}\", {",
            "  certificateName: \"${2:string}\", // Required",
            "  domainName: \"${3:string}\", // Required",
            "  subjectAlternativeNames: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnCertificate",
            "Attributes: ",
            "  attrCertificateArn",
            "  attrStatus"
        ],
        "prefix": "l1-lightsail-certificate",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnContainer": {
        "body": [
            "new lightsail.CfnContainer(this, \"${1:id}\", {",
            "  containerServiceDeployment: {",
            "    containers: [],",
            "  },",
            "  isDisabled: ${3|false,true|},",
            "  power: \"${4:string}\", // Required",
            "  publicDomainNames: [],",
            "  scale: ${6:Number}, // Required",
            "  serviceName: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnContainer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnContainer",
            "Attributes: ",
            "  attrContainerArn",
            "  attrUrl"
        ],
        "prefix": "l1-lightsail-container",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnDatabase": {
        "body": [
            "new lightsail.CfnDatabase(this, \"${1:id}\", {",
            "  availabilityZone: \"${2:string}\",",
            "  backupRetention: ${3|false,true|},",
            "  caCertificateIdentifier: \"${4:string}\",",
            "  masterDatabaseName: \"${5:string}\", // Required",
            "  masterUserPassword: \"${6:string}\",",
            "  masterUsername: \"${7:string}\", // Required",
            "  preferredBackupWindow: \"${8:string}\",",
            "  preferredMaintenanceWindow: \"${9:string}\",",
            "  publiclyAccessible: ${10|false,true|},",
            "  relationalDatabaseBlueprintId: \"${11:string}\", // Required",
            "  relationalDatabaseBundleId: \"${12:string}\", // Required",
            "  relationalDatabaseName: \"${13:string}\", // Required",
            "  relationalDatabaseParameters: [],",
            "  rotateMasterUserPassword: ${15|false,true|},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnDatabase",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnDatabase",
            "Attributes: ",
            "  attrDatabaseArn"
        ],
        "prefix": "l1-lightsail-database",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnDisk": {
        "body": [
            "new lightsail.CfnDisk(this, \"${1:id}\", {",
            "  addOns: [],",
            "  availabilityZone: \"${3:string}\",",
            "  diskName: \"${4:string}\", // Required",
            "  sizeInGb: ${5:Number}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnDisk",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnDisk",
            "Attributes: ",
            "  attrDiskArn",
            "  attrSupportCode",
            "  attrResourceType",
            "  attrState",
            "  attrAttachmentState",
            "  attrIops",
            "  attrIsAttached",
            "  attrPath",
            "  attrAttachedTo"
        ],
        "prefix": "l1-lightsail-disk",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnDistribution": {
        "body": [
            "new lightsail.CfnDistribution(this, \"${1:id}\", {",
            "  bundleId: \"${2:string}\", // Required",
            "  cacheBehaviorSettings: {",
            "    allowedHTTPMethods: \"${3:string}\",",
            "    cachedHTTPMethods: \"${4:string}\",",
            "    defaultTTL: ${5:Number},",
            "    maximumTTL: ${9:Number},",
            "    minimumTTL: ${10:Number},",
            "  },",
            "  cacheBehaviors: [],",
            "  certificateName: \"${5:string}\",",
            "  defaultCacheBehavior: {",
            "    behavior: \"${6:string}\",",
            "  },",
            "  distributionName: \"${7:string}\", // Required",
            "  ipAddressType: \"${8:string}\",",
            "  isEnabled: ${9|false,true|},",
            "  origin: {",
            "    name: \"${10:string}\",",
            "    protocolPolicy: \"${11:string}\",",
            "    regionName: \"${12:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnDistribution",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnDistribution",
            "Attributes: ",
            "  attrDistributionArn",
            "  attrStatus",
            "  attrAbleToUpdateBundle"
        ],
        "prefix": "l1-lightsail-distribution",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnInstance": {
        "body": [
            "new lightsail.CfnInstance(this, \"${1:id}\", {",
            "  addOns: [],",
            "  availabilityZone: \"${3:string}\",",
            "  blueprintId: \"${4:string}\", // Required",
            "  bundleId: \"${5:string}\", // Required",
            "  hardware: {",
            "    cpuCount: ${6:Number},",
            "    disks: [],",
            "    ramSizeInGb: ${8:Number},",
            "  },",
            "  instanceName: \"${7:string}\", // Required",
            "  keyPairName: \"${8:string}\",",
            "  networking: {",
            "    ports: [],",
            "  },",
            "  tags: [],",
            "  userData: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnInstance",
            "Attributes: ",
            "  attrSupportCode",
            "  attrResourceType",
            "  attrIsStaticIp",
            "  attrPrivateIpAddress",
            "  attrPublicIpAddress",
            "  attrLocation.AvailabilityZone",
            "  attrLocation.RegionName",
            "  attrHardware.CpuCount",
            "  attrHardware.RamSizeInGb",
            "  attrState.Code",
            "  attrState.Name",
            "  attrNetworking.MonthlyTransfer.GbPerMonthAllocated",
            "  attrUserName",
            "  attrSshKeyName",
            "  attrInstanceArn"
        ],
        "prefix": "l1-lightsail-instance",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnLoadBalancer": {
        "body": [
            "new lightsail.CfnLoadBalancer(this, \"${1:id}\", {",
            "  attachedInstances: [],",
            "  healthCheckPath: \"${3:string}\",",
            "  instancePort: ${4:Number}, // Required",
            "  ipAddressType: \"${5:string}\",",
            "  loadBalancerName: \"${6:string}\", // Required",
            "  sessionStickinessEnabled: ${7|false,true|},",
            "  sessionStickinessLBCookieDurationSeconds: \"${8:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnLoadBalancer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnLoadBalancer",
            "Attributes: ",
            "  attrLoadBalancerArn"
        ],
        "prefix": "l1-lightsail-loadbalancer",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnLoadBalancerTlsCertificate": {
        "body": [
            "new lightsail.CfnLoadBalancerTlsCertificate(this, \"${1:id}\", {",
            "  certificateAlternativeNames: [],",
            "  certificateDomainName: \"${3:string}\", // Required",
            "  certificateName: \"${4:string}\", // Required",
            "  isAttached: ${5|false,true|},",
            "  loadBalancerName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnLoadBalancerTlsCertificate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnLoadBalancerTlsCertificate",
            "Attributes: ",
            "  attrLoadBalancerTlsCertificateArn",
            "  attrStatus"
        ],
        "prefix": "l1-lightsail-loadbalancertlscertificate",
        "scope": "javascript,typescript"
    },
    "lightsail.CfnStaticIp": {
        "body": [
            "new lightsail.CfnStaticIp(this, \"${1:id}\", {",
            "  attachedTo: \"${2:string}\",",
            "  staticIpName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lightsail.CfnStaticIp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lightsail.CfnStaticIp",
            "Attributes: ",
            "  attrIsAttached",
            "  attrIpAddress",
            "  attrStaticIpArn"
        ],
        "prefix": "l1-lightsail-staticip",
        "scope": "javascript,typescript"
    },
    "location.CfnGeofenceCollection": {
        "body": [
            "new location.CfnGeofenceCollection(this, \"${1:id}\", {",
            "  collectionName: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  kmsKeyId: \"${4:string}\",",
            "  pricingPlan: \"${5:string}\",",
            "  pricingPlanDataSource: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: location.CfnGeofenceCollection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnGeofenceCollection",
            "Attributes: ",
            "  attrCollectionArn",
            "  attrArn",
            "  attrCreateTime",
            "  attrUpdateTime"
        ],
        "prefix": "l1-location-geofencecollection",
        "scope": "javascript,typescript"
    },
    "location.CfnMap": {
        "body": [
            "new location.CfnMap(this, \"${1:id}\", {",
            "  configuration: {",
            "    style: \"${2:string}\",",
            "  },",
            "  description: \"${3:string}\",",
            "  mapName: \"${4:string}\", // Required",
            "  pricingPlan: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: location.CfnMap",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnMap",
            "Attributes: ",
            "  attrCreateTime",
            "  attrDataSource",
            "  attrMapArn",
            "  attrArn",
            "  attrUpdateTime"
        ],
        "prefix": "l1-location-map",
        "scope": "javascript,typescript"
    },
    "location.CfnPlaceIndex": {
        "body": [
            "new location.CfnPlaceIndex(this, \"${1:id}\", {",
            "  dataSource: \"${2:string}\", // Required",
            "  dataSourceConfiguration: {",
            "    intendedUse: \"${3:string}\",",
            "  },",
            "  description: \"${4:string}\",",
            "  indexName: \"${5:string}\", // Required",
            "  pricingPlan: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: location.CfnPlaceIndex",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnPlaceIndex",
            "Attributes: ",
            "  attrCreateTime",
            "  attrIndexArn",
            "  attrArn",
            "  attrUpdateTime"
        ],
        "prefix": "l1-location-placeindex",
        "scope": "javascript,typescript"
    },
    "location.CfnRouteCalculator": {
        "body": [
            "new location.CfnRouteCalculator(this, \"${1:id}\", {",
            "  calculatorName: \"${2:string}\", // Required",
            "  dataSource: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  pricingPlan: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: location.CfnRouteCalculator",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnRouteCalculator",
            "Attributes: ",
            "  attrCalculatorArn",
            "  attrArn",
            "  attrCreateTime",
            "  attrUpdateTime"
        ],
        "prefix": "l1-location-routecalculator",
        "scope": "javascript,typescript"
    },
    "location.CfnTracker": {
        "body": [
            "new location.CfnTracker(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  kmsKeyId: \"${3:string}\",",
            "  positionFiltering: \"${4:string}\",",
            "  pricingPlan: \"${5:string}\",",
            "  pricingPlanDataSource: \"${6:string}\",",
            "  trackerName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: location.CfnTracker",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnTracker",
            "Attributes: ",
            "  attrCreateTime",
            "  attrTrackerArn",
            "  attrArn",
            "  attrUpdateTime"
        ],
        "prefix": "l1-location-tracker",
        "scope": "javascript,typescript"
    },
    "location.CfnTrackerConsumer": {
        "body": [
            "new location.CfnTrackerConsumer(this, \"${1:id}\", {",
            "  consumerArn: \"${2:string}\", // Required",
            "  trackerName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: location.CfnTrackerConsumer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-location.CfnTrackerConsumer"
        ],
        "prefix": "l1-location-trackerconsumer",
        "scope": "javascript,typescript"
    },
    "logs.CfnDestination": {
        "body": [
            "new logs.CfnDestination(this, \"${1:id}\", {",
            "  destinationName: \"${2:string}\", // Required",
            "  destinationPolicy: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\", // Required",
            "  targetArn: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: logs.CfnDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnDestination",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-logs-destination",
        "scope": "javascript,typescript"
    },
    "logs.CfnLogGroup": {
        "body": [
            "new logs.CfnLogGroup(this, \"${1:id}\", {",
            "  kmsKeyId: \"${2:string}\",",
            "  logGroupName: \"${3:string}\",",
            "  retentionInDays: ${4:Number},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: logs.CfnLogGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnLogGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-logs-loggroup",
        "scope": "javascript,typescript"
    },
    "logs.CfnLogStream": {
        "body": [
            "new logs.CfnLogStream(this, \"${1:id}\", {",
            "  logGroupName: \"${2:string}\", // Required",
            "  logStreamName: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: logs.CfnLogStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnLogStream"
        ],
        "prefix": "l1-logs-logstream",
        "scope": "javascript,typescript"
    },
    "logs.CfnMetricFilter": {
        "body": [
            "new logs.CfnMetricFilter(this, \"${1:id}\", {",
            "  filterPattern: \"${2:string}\", // Required",
            "  logGroupName: \"${3:string}\", // Required",
            "  metricTransformations: [], // Required",
            "})"
        ],
        "description": [
            "Construct: logs.CfnMetricFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnMetricFilter"
        ],
        "prefix": "l1-logs-metricfilter",
        "scope": "javascript,typescript"
    },
    "logs.CfnQueryDefinition": {
        "body": [
            "new logs.CfnQueryDefinition(this, \"${1:id}\", {",
            "  logGroupNames: [],",
            "  name: \"${3:string}\", // Required",
            "  queryString: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: logs.CfnQueryDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnQueryDefinition",
            "Attributes: ",
            "  attrQueryDefinitionId"
        ],
        "prefix": "l1-logs-querydefinition",
        "scope": "javascript,typescript"
    },
    "logs.CfnResourcePolicy": {
        "body": [
            "new logs.CfnResourcePolicy(this, \"${1:id}\", {",
            "  policyDocument: \"${2:string}\", // Required",
            "  policyName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: logs.CfnResourcePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnResourcePolicy"
        ],
        "prefix": "l1-logs-resourcepolicy",
        "scope": "javascript,typescript"
    },
    "logs.CfnSubscriptionFilter": {
        "body": [
            "new logs.CfnSubscriptionFilter(this, \"${1:id}\", {",
            "  destinationArn: \"${2:string}\", // Required",
            "  filterPattern: \"${3:string}\", // Required",
            "  logGroupName: \"${4:string}\", // Required",
            "  roleArn: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: logs.CfnSubscriptionFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-logs.CfnSubscriptionFilter"
        ],
        "prefix": "l1-logs-subscriptionfilter",
        "scope": "javascript,typescript"
    },
    "lookoutequipment.CfnInferenceScheduler": {
        "body": [
            "new lookoutequipment.CfnInferenceScheduler(this, \"${1:id}\", {",
            "  dataDelayOffsetInMinutes: ${2:Number},",
            "  dataInputConfiguration: ${3:JSON}, // Required",
            "  dataOutputConfiguration: ${4:JSON}, // Required",
            "  dataUploadFrequency: \"${5:string}\", // Required",
            "  inferenceSchedulerName: \"${6:string}\",",
            "  modelName: \"${7:string}\", // Required",
            "  roleArn: \"${8:string}\", // Required",
            "  serverSideKmsKeyId: \"${9:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: lookoutequipment.CfnInferenceScheduler",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lookoutequipment.CfnInferenceScheduler",
            "Attributes: ",
            "  attrInferenceSchedulerArn"
        ],
        "prefix": "l1-lookoutequipment-inferencescheduler",
        "scope": "javascript,typescript"
    },
    "lookoutmetrics.CfnAlert": {
        "body": [
            "new lookoutmetrics.CfnAlert(this, \"${1:id}\", {",
            "  action: {",
            "  },",
            "  alertDescription: \"${3:string}\",",
            "  alertName: \"${4:string}\",",
            "  alertSensitivityThreshold: ${5:Number}, // Required",
            "  anomalyDetectorArn: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lookoutmetrics.CfnAlert",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lookoutmetrics.CfnAlert",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-lookoutmetrics-alert",
        "scope": "javascript,typescript"
    },
    "lookoutmetrics.CfnAnomalyDetector": {
        "body": [
            "new lookoutmetrics.CfnAnomalyDetector(this, \"${1:id}\", {",
            "  anomalyDetectorConfig: {",
            "    anomalyDetectorFrequency: \"${2:string}\",",
            "  },",
            "  anomalyDetectorDescription: \"${3:string}\",",
            "  anomalyDetectorName: \"${4:string}\",",
            "  kmsKeyArn: \"${5:string}\",",
            "  metricSetList: [], // Required",
            "})"
        ],
        "description": [
            "Construct: lookoutmetrics.CfnAnomalyDetector",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lookoutmetrics.CfnAnomalyDetector",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-lookoutmetrics-anomalydetector",
        "scope": "javascript,typescript"
    },
    "lookoutvision.CfnProject": {
        "body": [
            "new lookoutvision.CfnProject(this, \"${1:id}\", {",
            "  projectName: \"${2:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: lookoutvision.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lookoutvision.CfnProject",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-lookoutvision-project",
        "scope": "javascript,typescript"
    },
    "macie.CfnCustomDataIdentifier": {
        "body": [
            "new macie.CfnCustomDataIdentifier(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  ignoreWords: [],",
            "  keywords: [],",
            "  maximumMatchDistance: ${5:Number},",
            "  name: \"${6:string}\", // Required",
            "  regex: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: macie.CfnCustomDataIdentifier",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-macie.CfnCustomDataIdentifier",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-macie-customdataidentifier",
        "scope": "javascript,typescript"
    },
    "macie.CfnFindingsFilter": {
        "body": [
            "new macie.CfnFindingsFilter(this, \"${1:id}\", {",
            "  action: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  findingCriteria: {",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  position: ${6:Number},",
            "})"
        ],
        "description": [
            "Construct: macie.CfnFindingsFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-macie.CfnFindingsFilter",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrFindingsFilterListItems"
        ],
        "prefix": "l1-macie-findingsfilter",
        "scope": "javascript,typescript"
    },
    "macie.CfnSession": {
        "body": [
            "new macie.CfnSession(this, \"${1:id}\", {",
            "  findingPublishingFrequency: \"${2:string}\",",
            "  status: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: macie.CfnSession",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-macie.CfnSession",
            "Attributes: ",
            "  attrAwsAccountId",
            "  attrServiceRole"
        ],
        "prefix": "l1-macie-session",
        "scope": "javascript,typescript"
    },
    "managedblockchain.CfnMember": {
        "body": [
            "new managedblockchain.CfnMember(this, \"${1:id}\", {",
            "  invitationId: \"${2:string}\",",
            "  memberConfiguration: {",
            "    description: \"${3:string}\",",
            "    name: \"${5:string}\",",
            "  },",
            "  networkConfiguration: {",
            "    description: \"${4:string}\",",
            "    framework: \"${5:string}\",",
            "    frameworkVersion: \"${6:string}\",",
            "    name: \"${7:string}\",",
            "  },",
            "  networkId: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: managedblockchain.CfnMember",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-managedblockchain.CfnMember",
            "Attributes: ",
            "  attrMemberId",
            "  attrNetworkId"
        ],
        "prefix": "l1-managedblockchain-member",
        "scope": "javascript,typescript"
    },
    "managedblockchain.CfnNode": {
        "body": [
            "new managedblockchain.CfnNode(this, \"${1:id}\", {",
            "  memberId: \"${2:string}\",",
            "  networkId: \"${3:string}\", // Required",
            "  nodeConfiguration: {",
            "    availabilityZone: \"${4:string}\",",
            "    instanceType: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: managedblockchain.CfnNode",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-managedblockchain.CfnNode",
            "Attributes: ",
            "  attrMemberId",
            "  attrNodeId",
            "  attrArn",
            "  attrNetworkId"
        ],
        "prefix": "l1-managedblockchain-node",
        "scope": "javascript,typescript"
    },
    "mediaconnect.CfnFlow": {
        "body": [
            "new mediaconnect.CfnFlow(this, \"${1:id}\", {",
            "  availabilityZone: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  source: {",
            "    description: \"${5:string}\",",
            "    entitlementArn: \"${6:string}\",",
            "    ingestIp: \"${7:string}\",",
            "    ingestPort: ${8:Number},",
            "    maxBitrate: ${9:Number},",
            "    maxLatency: ${10:Number},",
            "    minLatency: ${11:Number},",
            "    name: \"${12:string}\",",
            "    protocol: \"${13:string}\",",
            "    sourceArn: \"${14:string}\",",
            "    sourceIngestPort: \"${15:string}\",",
            "    streamId: \"${16:string}\",",
            "    vpcInterfaceName: \"${17:string}\",",
            "    whitelistCidr: \"${18:string}\",",
            "  },",
            "  sourceFailoverConfig: {",
            "    recoveryWindow: ${5:Number},",
            "    state: \"${6:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: mediaconnect.CfnFlow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconnect.CfnFlow",
            "Attributes: ",
            "  attrFlowArn",
            "  attrFlowAvailabilityZone",
            "  attrSource.SourceArn",
            "  attrSource.IngestIp",
            "  attrSource.SourceIngestPort"
        ],
        "prefix": "l1-mediaconnect-flow",
        "scope": "javascript,typescript"
    },
    "mediaconnect.CfnFlowEntitlement": {
        "body": [
            "new mediaconnect.CfnFlowEntitlement(this, \"${1:id}\", {",
            "  dataTransferSubscriberFeePercent: ${2:Number},",
            "  description: \"${3:string}\", // Required",
            "  encryption: {",
            "    algorithm: \"${4:string}\",",
            "    constantInitializationVector: \"${5:string}\",",
            "    deviceId: \"${6:string}\",",
            "    keyType: \"${7:string}\",",
            "    region: \"${8:string}\",",
            "    resourceId: \"${9:string}\",",
            "    roleArn: \"${10:string}\",",
            "    secretArn: \"${11:string}\",",
            "    url: \"${12:string}\",",
            "  },",
            "  entitlementStatus: \"${5:string}\",",
            "  flowArn: \"${6:string}\", // Required",
            "  name: \"${7:string}\", // Required",
            "  subscribers: [], // Required",
            "})"
        ],
        "description": [
            "Construct: mediaconnect.CfnFlowEntitlement",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconnect.CfnFlowEntitlement",
            "Attributes: ",
            "  attrEntitlementArn"
        ],
        "prefix": "l1-mediaconnect-flowentitlement",
        "scope": "javascript,typescript"
    },
    "mediaconnect.CfnFlowOutput": {
        "body": [
            "new mediaconnect.CfnFlowOutput(this, \"${1:id}\", {",
            "  cidrAllowList: [],",
            "  description: \"${3:string}\",",
            "  destination: \"${4:string}\",",
            "  encryption: {",
            "    algorithm: \"${5:string}\",",
            "    keyType: \"${6:string}\",",
            "    roleArn: \"${7:string}\",",
            "    secretArn: \"${8:string}\",",
            "  },",
            "  flowArn: \"${6:string}\", // Required",
            "  maxLatency: ${7:Number},",
            "  minLatency: ${8:Number},",
            "  name: \"${9:string}\",",
            "  port: ${10:Number},",
            "  protocol: \"${11:string}\", // Required",
            "  remoteId: \"${12:string}\",",
            "  smoothingLatency: ${13:Number},",
            "  streamId: \"${14:string}\",",
            "  vpcInterfaceAttachment: {",
            "    vpcInterfaceName: \"${15:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: mediaconnect.CfnFlowOutput",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconnect.CfnFlowOutput",
            "Attributes: ",
            "  attrOutputArn"
        ],
        "prefix": "l1-mediaconnect-flowoutput",
        "scope": "javascript,typescript"
    },
    "mediaconnect.CfnFlowSource": {
        "body": [
            "new mediaconnect.CfnFlowSource(this, \"${1:id}\", {",
            "  decryption: {",
            "    algorithm: \"${2:string}\",",
            "    constantInitializationVector: \"${3:string}\",",
            "    deviceId: \"${4:string}\",",
            "    keyType: \"${5:string}\",",
            "    region: \"${6:string}\",",
            "    resourceId: \"${7:string}\",",
            "    roleArn: \"${8:string}\",",
            "    secretArn: \"${9:string}\",",
            "    url: \"${10:string}\",",
            "  },",
            "  description: \"${3:string}\", // Required",
            "  entitlementArn: \"${4:string}\",",
            "  flowArn: \"${5:string}\",",
            "  ingestPort: ${6:Number},",
            "  maxBitrate: ${7:Number},",
            "  maxLatency: ${8:Number},",
            "  name: \"${9:string}\", // Required",
            "  protocol: \"${10:string}\",",
            "  streamId: \"${11:string}\",",
            "  vpcInterfaceName: \"${12:string}\",",
            "  whitelistCidr: \"${13:string}\",",
            "})"
        ],
        "description": [
            "Construct: mediaconnect.CfnFlowSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconnect.CfnFlowSource",
            "Attributes: ",
            "  attrSourceArn",
            "  attrIngestIp",
            "  attrSourceIngestPort"
        ],
        "prefix": "l1-mediaconnect-flowsource",
        "scope": "javascript,typescript"
    },
    "mediaconnect.CfnFlowVpcInterface": {
        "body": [
            "new mediaconnect.CfnFlowVpcInterface(this, \"${1:id}\", {",
            "  flowArn: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\", // Required",
            "  securityGroupIds: [], // Required",
            "  subnetId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: mediaconnect.CfnFlowVpcInterface",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconnect.CfnFlowVpcInterface",
            "Attributes: ",
            "  attrNetworkInterfaceIds"
        ],
        "prefix": "l1-mediaconnect-flowvpcinterface",
        "scope": "javascript,typescript"
    },
    "mediaconvert.CfnJobTemplate": {
        "body": [
            "new mediaconvert.CfnJobTemplate(this, \"${1:id}\", {",
            "  accelerationSettings: {",
            "    mode: \"${2:string}\",",
            "  },",
            "  category: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  hopDestinations: [],",
            "  name: \"${6:string}\",",
            "  priority: ${7:Number},",
            "  queue: \"${8:string}\",",
            "  settingsJson: ${9:JSON}, // Required",
            "  statusUpdateInterval: \"${10:string}\",",
            "  tags: ${11:JSON},",
            "})"
        ],
        "description": [
            "Construct: mediaconvert.CfnJobTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconvert.CfnJobTemplate",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-mediaconvert-jobtemplate",
        "scope": "javascript,typescript"
    },
    "mediaconvert.CfnPreset": {
        "body": [
            "new mediaconvert.CfnPreset(this, \"${1:id}\", {",
            "  category: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  settingsJson: ${5:JSON}, // Required",
            "  tags: ${6:JSON},",
            "})"
        ],
        "description": [
            "Construct: mediaconvert.CfnPreset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconvert.CfnPreset",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-mediaconvert-preset",
        "scope": "javascript,typescript"
    },
    "mediaconvert.CfnQueue": {
        "body": [
            "new mediaconvert.CfnQueue(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\",",
            "  pricingPlan: \"${4:string}\",",
            "  status: \"${5:string}\",",
            "  tags: ${6:JSON},",
            "})"
        ],
        "description": [
            "Construct: mediaconvert.CfnQueue",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediaconvert.CfnQueue",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-mediaconvert-queue",
        "scope": "javascript,typescript"
    },
    "medialive.CfnChannel": {
        "body": [
            "new medialive.CfnChannel(this, \"${1:id}\", {",
            "  cdiInputSpecification: {",
            "    resolution: \"${2:string}\",",
            "  },",
            "  channelClass: \"${3:string}\",",
            "  destinations: [],",
            "  encoderSettings: {",
            "    audioDescriptions: [],",
            "    captionDescriptions: [],",
            "    outputGroups: [],",
            "    videoDescriptions: [],",
            "  },",
            "  inputAttachments: [],",
            "  inputSpecification: {",
            "    codec: \"${7:string}\",",
            "    maximumBitrate: \"${8:string}\",",
            "    resolution: \"${9:string}\",",
            "  },",
            "  logLevel: \"${8:string}\",",
            "  name: \"${9:string}\",",
            "  roleArn: \"${10:string}\",",
            "  tags: ${11:JSON},",
            "  vpc: {",
            "    publicAddressAllocationIds: [],",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: medialive.CfnChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-medialive.CfnChannel",
            "Attributes: ",
            "  attrArn",
            "  attrInputs"
        ],
        "prefix": "l1-medialive-channel",
        "scope": "javascript,typescript"
    },
    "medialive.CfnInput": {
        "body": [
            "new medialive.CfnInput(this, \"${1:id}\", {",
            "  destinations: [],",
            "  inputDevices: [],",
            "  inputSecurityGroups: [],",
            "  mediaConnectFlows: [],",
            "  name: \"${6:string}\",",
            "  roleArn: \"${7:string}\",",
            "  sources: [],",
            "  tags: ${9:JSON},",
            "  type: \"${10:string}\",",
            "  vpc: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: medialive.CfnInput",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-medialive.CfnInput",
            "Attributes: ",
            "  attrDestinations",
            "  attrArn",
            "  attrSources"
        ],
        "prefix": "l1-medialive-input",
        "scope": "javascript,typescript"
    },
    "medialive.CfnInputSecurityGroup": {
        "body": [
            "new medialive.CfnInputSecurityGroup(this, \"${1:id}\", {",
            "  tags: ${2:JSON},",
            "  whitelistRules: [],",
            "})"
        ],
        "description": [
            "Construct: medialive.CfnInputSecurityGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-medialive.CfnInputSecurityGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-medialive-inputsecuritygroup",
        "scope": "javascript,typescript"
    },
    "mediapackage.CfnAsset": {
        "body": [
            "new mediapackage.CfnAsset(this, \"${1:id}\", {",
            "  id: \"${2:string}\", // Required",
            "  packagingGroupId: \"${3:string}\", // Required",
            "  resourceId: \"${4:string}\",",
            "  sourceArn: \"${5:string}\", // Required",
            "  sourceRoleArn: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: mediapackage.CfnAsset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediapackage.CfnAsset",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedAt",
            "  attrEgressEndpoints"
        ],
        "prefix": "l1-mediapackage-asset",
        "scope": "javascript,typescript"
    },
    "mediapackage.CfnChannel": {
        "body": [
            "new mediapackage.CfnChannel(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  egressAccessLogs: {",
            "    logGroupName: \"${3:string}\",",
            "  },",
            "  id: \"${4:string}\", // Required",
            "  ingressAccessLogs: {",
            "    logGroupName: \"${5:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: mediapackage.CfnChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediapackage.CfnChannel",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-mediapackage-channel",
        "scope": "javascript,typescript"
    },
    "mediapackage.CfnOriginEndpoint": {
        "body": [
            "new mediapackage.CfnOriginEndpoint(this, \"${1:id}\", {",
            "  authorization: {",
            "    cdnIdentifierSecret: \"${2:string}\",",
            "    secretsRoleArn: \"${3:string}\",",
            "  },",
            "  channelId: \"${3:string}\", // Required",
            "  cmafPackage: {",
            "    hlsManifests: [],",
            "    segmentDurationSeconds: ${6:Number},",
            "    segmentPrefix: \"${7:string}\",",
            "  },",
            "  dashPackage: {",
            "    adTriggers: [],",
            "    adsOnDeliveryRestrictions: \"${6:string}\",",
            "    manifestLayout: \"${8:string}\",",
            "    manifestWindowSeconds: ${9:Number},",
            "    minBufferTimeSeconds: ${10:Number},",
            "    minUpdatePeriodSeconds: ${11:Number},",
            "    periodTriggers: [],",
            "    profile: \"${13:string}\",",
            "    segmentDurationSeconds: ${14:Number},",
            "    segmentTemplateFormat: \"${15:string}\",",
            "    suggestedPresentationDelaySeconds: ${17:Number},",
            "    utcTiming: \"${18:string}\",",
            "    utcTimingUri: \"${19:string}\",",
            "  },",
            "  description: \"${6:string}\",",
            "  hlsPackage: {",
            "    adMarkers: \"${7:string}\",",
            "    adTriggers: [],",
            "    adsOnDeliveryRestrictions: \"${9:string}\",",
            "    includeIframeOnlyStream: ${11|false,true|},",
            "    playlistType: \"${12:string}\",",
            "    playlistWindowSeconds: ${13:Number},",
            "    programDateTimeIntervalSeconds: ${14:Number},",
            "    segmentDurationSeconds: ${15:Number},",
            "    useAudioRenditionGroup: ${17|false,true|},",
            "  },",
            "  id: \"${8:string}\", // Required",
            "  manifestName: \"${9:string}\",",
            "  mssPackage: {",
            "    manifestWindowSeconds: ${11:Number},",
            "    segmentDurationSeconds: ${12:Number},",
            "  },",
            "  origination: \"${11:string}\",",
            "  startoverWindowSeconds: ${12:Number},",
            "  tags: [],",
            "  timeDelaySeconds: ${14:Number},",
            "  whitelist: [],",
            "})"
        ],
        "description": [
            "Construct: mediapackage.CfnOriginEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediapackage.CfnOriginEndpoint",
            "Attributes: ",
            "  attrArn",
            "  attrUrl"
        ],
        "prefix": "l1-mediapackage-originendpoint",
        "scope": "javascript,typescript"
    },
    "mediapackage.CfnPackagingConfiguration": {
        "body": [
            "new mediapackage.CfnPackagingConfiguration(this, \"${1:id}\", {",
            "  cmafPackage: {",
            "    hlsManifests: [],",
            "    includeEncoderConfigurationInSegments: ${4|false,true|},",
            "    segmentDurationSeconds: ${5:Number},",
            "  },",
            "  dashPackage: {",
            "    dashManifests: [],",
            "    includeEncoderConfigurationInSegments: ${5|false,true|},",
            "    periodTriggers: [],",
            "    segmentDurationSeconds: ${7:Number},",
            "    segmentTemplateFormat: \"${8:string}\",",
            "  },",
            "  hlsPackage: {",
            "    hlsManifests: [],",
            "    segmentDurationSeconds: ${6:Number},",
            "    useAudioRenditionGroup: ${7|false,true|},",
            "  },",
            "  id: \"${5:string}\", // Required",
            "  mssPackage: {",
            "    mssManifests: [],",
            "    segmentDurationSeconds: ${8:Number},",
            "  },",
            "  packagingGroupId: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: mediapackage.CfnPackagingConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediapackage.CfnPackagingConfiguration",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-mediapackage-packagingconfiguration",
        "scope": "javascript,typescript"
    },
    "mediapackage.CfnPackagingGroup": {
        "body": [
            "new mediapackage.CfnPackagingGroup(this, \"${1:id}\", {",
            "  authorization: {",
            "    cdnIdentifierSecret: \"${2:string}\",",
            "    secretsRoleArn: \"${3:string}\",",
            "  },",
            "  egressAccessLogs: {",
            "    logGroupName: \"${3:string}\",",
            "  },",
            "  id: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: mediapackage.CfnPackagingGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediapackage.CfnPackagingGroup",
            "Attributes: ",
            "  attrArn",
            "  attrDomainName"
        ],
        "prefix": "l1-mediapackage-packaginggroup",
        "scope": "javascript,typescript"
    },
    "mediastore.CfnContainer": {
        "body": [
            "new mediastore.CfnContainer(this, \"${1:id}\", {",
            "  accessLoggingEnabled: ${2|false,true|},",
            "  containerName: \"${3:string}\", // Required",
            "  corsPolicy: [],",
            "  lifecyclePolicy: \"${5:string}\",",
            "  metricPolicy: {",
            "    containerLevelMetrics: \"${6:string}\",",
            "    metricPolicyRules: [],",
            "  },",
            "  policy: \"${7:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: mediastore.CfnContainer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediastore.CfnContainer",
            "Attributes: ",
            "  attrEndpoint"
        ],
        "prefix": "l1-mediastore-container",
        "scope": "javascript,typescript"
    },
    "mediatailor.CfnPlaybackConfiguration": {
        "body": [
            "new mediatailor.CfnPlaybackConfiguration(this, \"${1:id}\", {",
            "  adDecisionServerUrl: \"${2:string}\", // Required",
            "  availSuppression: {",
            "    mode: \"${3:string}\",",
            "    value: \"${4:string}\",",
            "  },",
            "  bumper: {",
            "    endUrl: \"${4:string}\",",
            "    startUrl: \"${5:string}\",",
            "  },",
            "  cdnConfiguration: {",
            "    adSegmentUrlPrefix: \"${5:string}\",",
            "    contentSegmentUrlPrefix: \"${6:string}\",",
            "  },",
            "  configurationAliases: {",
            "  },",
            "  dashConfiguration: {",
            "    mpdLocation: \"${7:string}\",",
            "    originManifestType: \"${8:string}\",",
            "  },",
            "  livePreRollConfiguration: {",
            "    adDecisionServerUrl: \"${8:string}\",",
            "    maxDurationSeconds: ${9:Number},",
            "  },",
            "  manifestProcessingRules: {",
            "  },",
            "  name: \"${10:string}\", // Required",
            "  personalizationThresholdSeconds: ${11:Number},",
            "  sessionInitializationEndpointPrefix: \"${12:string}\",",
            "  slateAdUrl: \"${13:string}\",",
            "  tags: [],",
            "  transcodeProfileName: \"${15:string}\",",
            "  videoContentSourceUrl: \"${16:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: mediatailor.CfnPlaybackConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mediatailor.CfnPlaybackConfiguration"
        ],
        "prefix": "l1-mediatailor-playbackconfiguration",
        "scope": "javascript,typescript"
    },
    "memorydb.CfnACL": {
        "body": [
            "new memorydb.CfnACL(this, \"${1:id}\", {",
            "  aCLName: \"${2:string}\", // Required",
            "  tags: [],",
            "  userNames: [],",
            "})"
        ],
        "description": [
            "Construct: memorydb.CfnACL",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-memorydb.CfnACL",
            "Attributes: ",
            "  attrStatus",
            "  attrArn"
        ],
        "prefix": "l1-memorydb-acl",
        "scope": "javascript,typescript"
    },
    "memorydb.CfnCluster": {
        "body": [
            "new memorydb.CfnCluster(this, \"${1:id}\", {",
            "  aCLName: \"${2:string}\", // Required",
            "  autoMinorVersionUpgrade: ${3|false,true|},",
            "  clusterName: \"${4:string}\", // Required",
            "  description: \"${5:string}\",",
            "  engineVersion: \"${6:string}\",",
            "  finalSnapshotName: \"${7:string}\",",
            "  kmsKeyId: \"${8:string}\",",
            "  maintenanceWindow: \"${9:string}\",",
            "  nodeType: \"${10:string}\", // Required",
            "  numReplicasPerShard: ${11:Number},",
            "  numShards: ${12:Number},",
            "  parameterGroupName: \"${13:string}\",",
            "  port: ${14:Number},",
            "  securityGroupIds: [],",
            "  snapshotArns: [],",
            "  snapshotName: \"${17:string}\",",
            "  snapshotRetentionLimit: ${18:Number},",
            "  snapshotWindow: \"${19:string}\",",
            "  snsTopicArn: \"${20:string}\",",
            "  snsTopicStatus: \"${21:string}\",",
            "  subnetGroupName: \"${22:string}\",",
            "  tLSEnabled: ${23|false,true|},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: memorydb.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-memorydb.CfnCluster",
            "Attributes: ",
            "  attrStatus",
            "  attrParameterGroupStatus",
            "  attrARN",
            "  attrClusterEndpoint.Address",
            "  attrClusterEndpoint.Port"
        ],
        "prefix": "l1-memorydb-cluster",
        "scope": "javascript,typescript"
    },
    "memorydb.CfnParameterGroup": {
        "body": [
            "new memorydb.CfnParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  family: \"${3:string}\", // Required",
            "  parameterGroupName: \"${4:string}\", // Required",
            "  parameters: ${5:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: memorydb.CfnParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-memorydb.CfnParameterGroup",
            "Attributes: ",
            "  attrARN"
        ],
        "prefix": "l1-memorydb-parametergroup",
        "scope": "javascript,typescript"
    },
    "memorydb.CfnSubnetGroup": {
        "body": [
            "new memorydb.CfnSubnetGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  subnetGroupName: \"${3:string}\", // Required",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: memorydb.CfnSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-memorydb.CfnSubnetGroup",
            "Attributes: ",
            "  attrARN"
        ],
        "prefix": "l1-memorydb-subnetgroup",
        "scope": "javascript,typescript"
    },
    "memorydb.CfnUser": {
        "body": [
            "new memorydb.CfnUser(this, \"${1:id}\", {",
            "  accessString: \"${2:string}\", // Required",
            "  authenticationMode: ${3:JSON}, // Required",
            "  tags: [],",
            "  userName: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: memorydb.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-memorydb.CfnUser",
            "Attributes: ",
            "  attrStatus",
            "  attrArn"
        ],
        "prefix": "l1-memorydb-user",
        "scope": "javascript,typescript"
    },
    "msk.CfnBatchScramSecret": {
        "body": [
            "new msk.CfnBatchScramSecret(this, \"${1:id}\", {",
            "  clusterArn: \"${2:string}\", // Required",
            "  secretArnList: [],",
            "})"
        ],
        "description": [
            "Construct: msk.CfnBatchScramSecret",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-msk.CfnBatchScramSecret"
        ],
        "prefix": "l1-msk-batchscramsecret",
        "scope": "javascript,typescript"
    },
    "msk.CfnCluster": {
        "body": [
            "new msk.CfnCluster(this, \"${1:id}\", {",
            "  brokerNodeGroupInfo: {",
            "    brokerAZDistribution: \"${2:string}\",",
            "    clientSubnets: [],",
            "    instanceType: \"${5:string}\",",
            "    securityGroups: [],",
            "  },",
            "  clientAuthentication: {",
            "  },",
            "  clusterName: \"${4:string}\", // Required",
            "  configurationInfo: {",
            "    arn: \"${5:string}\",",
            "    revision: ${6:Number},",
            "  },",
            "  currentVersion: \"${6:string}\",",
            "  encryptionInfo: {",
            "  },",
            "  enhancedMonitoring: \"${8:string}\",",
            "  kafkaVersion: \"${9:string}\", // Required",
            "  loggingInfo: {",
            "  },",
            "  numberOfBrokerNodes: ${11:Number}, // Required",
            "  openMonitoring: {",
            "  },",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: msk.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-msk.CfnCluster",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-msk-cluster",
        "scope": "javascript,typescript"
    },
    "msk.CfnConfiguration": {
        "body": [
            "new msk.CfnConfiguration(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  kafkaVersionsList: [],",
            "  name: \"${4:string}\", // Required",
            "  serverProperties: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: msk.CfnConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-msk.CfnConfiguration",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-msk-configuration",
        "scope": "javascript,typescript"
    },
    "mwaa.CfnEnvironment": {
        "body": [
            "new mwaa.CfnEnvironment(this, \"${1:id}\", {",
            "  airflowConfigurationOptions: ${2:JSON},",
            "  airflowVersion: \"${3:string}\",",
            "  dagS3Path: \"${4:string}\",",
            "  environmentClass: \"${5:string}\",",
            "  executionRoleArn: \"${6:string}\",",
            "  kmsKey: \"${7:string}\",",
            "  loggingConfiguration: {",
            "  },",
            "  maxWorkers: ${9:Number},",
            "  minWorkers: ${10:Number},",
            "  name: \"${11:string}\", // Required",
            "  networkConfiguration: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "  pluginsS3ObjectVersion: \"${13:string}\",",
            "  pluginsS3Path: \"${14:string}\",",
            "  requirementsS3ObjectVersion: \"${15:string}\",",
            "  requirementsS3Path: \"${16:string}\",",
            "  schedulers: ${17:Number},",
            "  sourceBucketArn: \"${18:string}\",",
            "  tags: ${19:JSON},",
            "  webserverAccessMode: \"${20:string}\",",
            "  weeklyMaintenanceWindowStart: \"${21:string}\",",
            "})"
        ],
        "description": [
            "Construct: mwaa.CfnEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-mwaa.CfnEnvironment",
            "Attributes: ",
            "  attrArn",
            "  attrWebserverUrl",
            "  attrLoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn",
            "  attrLoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn",
            "  attrLoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn",
            "  attrLoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn",
            "  attrLoggingConfiguration.TaskLogs.CloudWatchLogGroupArn"
        ],
        "prefix": "l1-mwaa-environment",
        "scope": "javascript,typescript"
    },
    "neptune.CfnDBCluster": {
        "body": [
            "new neptune.CfnDBCluster(this, \"${1:id}\", {",
            "  associatedRoles: [],",
            "  availabilityZones: [],",
            "  backupRetentionPeriod: ${4:Number},",
            "  dBClusterIdentifier: \"${5:string}\",",
            "  dBClusterParameterGroupName: \"${6:string}\",",
            "  dBSubnetGroupName: \"${7:string}\",",
            "  deletionProtection: ${8|false,true|},",
            "  enableCloudwatchLogsExports: [],",
            "  engineVersion: \"${10:string}\",",
            "  iamAuthEnabled: ${11|false,true|},",
            "  kmsKeyId: \"${12:string}\",",
            "  port: ${13:Number},",
            "  preferredBackupWindow: \"${14:string}\",",
            "  preferredMaintenanceWindow: \"${15:string}\",",
            "  restoreToTime: \"${16:string}\",",
            "  restoreType: \"${17:string}\",",
            "  snapshotIdentifier: \"${18:string}\",",
            "  sourceDBClusterIdentifier: \"${19:string}\",",
            "  storageEncrypted: ${20|false,true|},",
            "  tags: [],",
            "  useLatestRestorableTime: ${22|false,true|},",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: neptune.CfnDBCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-neptune.CfnDBCluster",
            "Attributes: ",
            "  attrClusterResourceId",
            "  attrEndpoint",
            "  attrPort",
            "  attrReadEndpoint"
        ],
        "prefix": "l1-neptune-dbcluster",
        "scope": "javascript,typescript"
    },
    "neptune.CfnDBClusterParameterGroup": {
        "body": [
            "new neptune.CfnDBClusterParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  family: \"${3:string}\", // Required",
            "  name: \"${4:string}\",",
            "  parameters: ${5:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: neptune.CfnDBClusterParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-neptune.CfnDBClusterParameterGroup"
        ],
        "prefix": "l1-neptune-dbclusterparametergroup",
        "scope": "javascript,typescript"
    },
    "neptune.CfnDBInstance": {
        "body": [
            "new neptune.CfnDBInstance(this, \"${1:id}\", {",
            "  allowMajorVersionUpgrade: ${2|false,true|},",
            "  autoMinorVersionUpgrade: ${3|false,true|},",
            "  availabilityZone: \"${4:string}\",",
            "  dBClusterIdentifier: \"${5:string}\",",
            "  dBInstanceClass: \"${6:string}\", // Required",
            "  dBInstanceIdentifier: \"${7:string}\",",
            "  dBParameterGroupName: \"${8:string}\",",
            "  dBSnapshotIdentifier: \"${9:string}\",",
            "  dBSubnetGroupName: \"${10:string}\",",
            "  preferredMaintenanceWindow: \"${11:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: neptune.CfnDBInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-neptune.CfnDBInstance",
            "Attributes: ",
            "  attrEndpoint",
            "  attrPort"
        ],
        "prefix": "l1-neptune-dbinstance",
        "scope": "javascript,typescript"
    },
    "neptune.CfnDBParameterGroup": {
        "body": [
            "new neptune.CfnDBParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  family: \"${3:string}\", // Required",
            "  name: \"${4:string}\",",
            "  parameters: ${5:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: neptune.CfnDBParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-neptune.CfnDBParameterGroup"
        ],
        "prefix": "l1-neptune-dbparametergroup",
        "scope": "javascript,typescript"
    },
    "neptune.CfnDBSubnetGroup": {
        "body": [
            "new neptune.CfnDBSubnetGroup(this, \"${1:id}\", {",
            "  dBSubnetGroupDescription: \"${2:string}\", // Required",
            "  dBSubnetGroupName: \"${3:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: neptune.CfnDBSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-neptune.CfnDBSubnetGroup"
        ],
        "prefix": "l1-neptune-dbsubnetgroup",
        "scope": "javascript,typescript"
    },
    "networkfirewall.CfnFirewall": {
        "body": [
            "new networkfirewall.CfnFirewall(this, \"${1:id}\", {",
            "  deleteProtection: ${2|false,true|},",
            "  description: \"${3:string}\",",
            "  firewallName: \"${4:string}\", // Required",
            "  firewallPolicyArn: \"${5:string}\", // Required",
            "  firewallPolicyChangeProtection: ${6|false,true|},",
            "  subnetChangeProtection: ${7|false,true|},",
            "  subnetMappings: [], // Required",
            "  tags: [],",
            "  vpcId: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: networkfirewall.CfnFirewall",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkfirewall.CfnFirewall",
            "Attributes: ",
            "  attrFirewallArn",
            "  attrFirewallId",
            "  attrEndpointIds"
        ],
        "prefix": "l1-networkfirewall-firewall",
        "scope": "javascript,typescript"
    },
    "networkfirewall.CfnFirewallPolicy": {
        "body": [
            "new networkfirewall.CfnFirewallPolicy(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  firewallPolicy: {",
            "    statefulDefaultActions: [],",
            "    statefulRuleGroupReferences: [],",
            "    statelessCustomActions: [],",
            "    statelessDefaultActions: [],",
            "    statelessFragmentDefaultActions: [],",
            "    statelessRuleGroupReferences: [],",
            "  },",
            "  firewallPolicyName: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: networkfirewall.CfnFirewallPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkfirewall.CfnFirewallPolicy",
            "Attributes: ",
            "  attrFirewallPolicyArn",
            "  attrFirewallPolicyId"
        ],
        "prefix": "l1-networkfirewall-firewallpolicy",
        "scope": "javascript,typescript"
    },
    "networkfirewall.CfnLoggingConfiguration": {
        "body": [
            "new networkfirewall.CfnLoggingConfiguration(this, \"${1:id}\", {",
            "  firewallArn: \"${2:string}\", // Required",
            "  firewallName: \"${3:string}\",",
            "  loggingConfiguration: {",
            "    logDestinationConfigs: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: networkfirewall.CfnLoggingConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkfirewall.CfnLoggingConfiguration"
        ],
        "prefix": "l1-networkfirewall-loggingconfiguration",
        "scope": "javascript,typescript"
    },
    "networkfirewall.CfnRuleGroup": {
        "body": [
            "new networkfirewall.CfnRuleGroup(this, \"${1:id}\", {",
            "  capacity: ${2:Number}, // Required",
            "  description: \"${3:string}\",",
            "  ruleGroup: {",
            "  },",
            "  ruleGroupName: \"${5:string}\", // Required",
            "  tags: [],",
            "  type: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: networkfirewall.CfnRuleGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkfirewall.CfnRuleGroup",
            "Attributes: ",
            "  attrRuleGroupArn",
            "  attrRuleGroupId"
        ],
        "prefix": "l1-networkfirewall-rulegroup",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnCustomerGatewayAssociation": {
        "body": [
            "new networkmanager.CfnCustomerGatewayAssociation(this, \"${1:id}\", {",
            "  customerGatewayArn: \"${2:string}\", // Required",
            "  deviceId: \"${3:string}\", // Required",
            "  globalNetworkId: \"${4:string}\", // Required",
            "  linkId: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnCustomerGatewayAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnCustomerGatewayAssociation"
        ],
        "prefix": "l1-networkmanager-customergatewayassociation",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnDevice": {
        "body": [
            "new networkmanager.CfnDevice(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  globalNetworkId: \"${3:string}\", // Required",
            "  location: {",
            "    address: \"${4:string}\",",
            "    latitude: \"${5:string}\",",
            "    longitude: \"${6:string}\",",
            "  },",
            "  model: \"${5:string}\",",
            "  serialNumber: \"${6:string}\",",
            "  siteId: \"${7:string}\",",
            "  tags: [],",
            "  type: \"${9:string}\",",
            "  vendor: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnDevice",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnDevice",
            "Attributes: ",
            "  attrDeviceArn",
            "  attrDeviceId"
        ],
        "prefix": "l1-networkmanager-device",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnGlobalNetwork": {
        "body": [
            "new networkmanager.CfnGlobalNetwork(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnGlobalNetwork",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnGlobalNetwork",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-networkmanager-globalnetwork",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnLink": {
        "body": [
            "new networkmanager.CfnLink(this, \"${1:id}\", {",
            "  bandwidth: {",
            "    downloadSpeed: ${2:Number},",
            "    uploadSpeed: ${3:Number},",
            "  },",
            "  description: \"${3:string}\",",
            "  globalNetworkId: \"${4:string}\", // Required",
            "  provider: \"${5:string}\",",
            "  siteId: \"${6:string}\", // Required",
            "  tags: [],",
            "  type: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnLink",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnLink",
            "Attributes: ",
            "  attrLinkArn",
            "  attrLinkId"
        ],
        "prefix": "l1-networkmanager-link",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnLinkAssociation": {
        "body": [
            "new networkmanager.CfnLinkAssociation(this, \"${1:id}\", {",
            "  deviceId: \"${2:string}\", // Required",
            "  globalNetworkId: \"${3:string}\", // Required",
            "  linkId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnLinkAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnLinkAssociation"
        ],
        "prefix": "l1-networkmanager-linkassociation",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnSite": {
        "body": [
            "new networkmanager.CfnSite(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  globalNetworkId: \"${3:string}\", // Required",
            "  location: {",
            "    address: \"${4:string}\",",
            "    latitude: \"${5:string}\",",
            "    longitude: \"${6:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnSite",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnSite",
            "Attributes: ",
            "  attrSiteArn",
            "  attrSiteId"
        ],
        "prefix": "l1-networkmanager-site",
        "scope": "javascript,typescript"
    },
    "networkmanager.CfnTransitGatewayRegistration": {
        "body": [
            "new networkmanager.CfnTransitGatewayRegistration(this, \"${1:id}\", {",
            "  globalNetworkId: \"${2:string}\", // Required",
            "  transitGatewayArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: networkmanager.CfnTransitGatewayRegistration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-networkmanager.CfnTransitGatewayRegistration"
        ],
        "prefix": "l1-networkmanager-transitgatewayregistration",
        "scope": "javascript,typescript"
    },
    "nimblestudio.CfnLaunchProfile": {
        "body": [
            "new nimblestudio.CfnLaunchProfile(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  ec2SubnetIds: [], // Required",
            "  launchProfileProtocolVersions: [], // Required",
            "  name: \"${5:string}\", // Required",
            "  streamConfiguration: {",
            "    clipboardMode: \"${6:string}\",",
            "    ec2InstanceTypes: [],",
            "    maxSessionLengthInMinutes: ${8:Number},",
            "    maxStoppedSessionLengthInMinutes: ${9:Number},",
            "    streamingImageIds: [],",
            "  },",
            "  studioComponentIds: [], // Required",
            "  studioId: \"${8:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: nimblestudio.CfnLaunchProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-nimblestudio.CfnLaunchProfile",
            "Attributes: ",
            "  attrLaunchProfileId"
        ],
        "prefix": "l1-nimblestudio-launchprofile",
        "scope": "javascript,typescript"
    },
    "nimblestudio.CfnStreamingImage": {
        "body": [
            "new nimblestudio.CfnStreamingImage(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  ec2ImageId: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  studioId: \"${5:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: nimblestudio.CfnStreamingImage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-nimblestudio.CfnStreamingImage",
            "Attributes: ",
            "  attrEulaIds",
            "  attrOwner",
            "  attrPlatform",
            "  attrStreamingImageId"
        ],
        "prefix": "l1-nimblestudio-streamingimage",
        "scope": "javascript,typescript"
    },
    "nimblestudio.CfnStudio": {
        "body": [
            "new nimblestudio.CfnStudio(this, \"${1:id}\", {",
            "  adminRoleArn: \"${2:string}\", // Required",
            "  displayName: \"${3:string}\", // Required",
            "  studioEncryptionConfiguration: {",
            "    keyArn: \"${4:string}\",",
            "    keyType: \"${5:string}\",",
            "  },",
            "  studioName: \"${5:string}\", // Required",
            "  tags: {",
            "  },",
            "  userRoleArn: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: nimblestudio.CfnStudio",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-nimblestudio.CfnStudio",
            "Attributes: ",
            "  attrHomeRegion",
            "  attrSsoClientId",
            "  attrStudioId",
            "  attrStudioUrl"
        ],
        "prefix": "l1-nimblestudio-studio",
        "scope": "javascript,typescript"
    },
    "nimblestudio.CfnStudioComponent": {
        "body": [
            "new nimblestudio.CfnStudioComponent(this, \"${1:id}\", {",
            "  configuration: {",
            "  },",
            "  description: \"${3:string}\",",
            "  ec2SecurityGroupIds: [],",
            "  initializationScripts: [],",
            "  name: \"${6:string}\", // Required",
            "  scriptParameters: [],",
            "  studioId: \"${8:string}\", // Required",
            "  subtype: \"${9:string}\",",
            "  tags: {",
            "  },",
            "  type: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: nimblestudio.CfnStudioComponent",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-nimblestudio.CfnStudioComponent",
            "Attributes: ",
            "  attrStudioComponentId"
        ],
        "prefix": "l1-nimblestudio-studiocomponent",
        "scope": "javascript,typescript"
    },
    "opensearchservice.CfnDomain": {
        "body": [
            "new opensearchservice.CfnDomain(this, \"${1:id}\", {",
            "  accessPolicies: ${2:JSON},",
            "  advancedOptions: {",
            "  },",
            "  advancedSecurityOptions: {",
            "    enabled: ${4|false,true|},",
            "    internalUserDatabaseEnabled: ${5|false,true|},",
            "  },",
            "  clusterConfig: {",
            "    dedicatedMasterCount: ${5:Number},",
            "    dedicatedMasterEnabled: ${6|false,true|},",
            "    dedicatedMasterType: \"${7:string}\",",
            "    instanceCount: ${8:Number},",
            "    instanceType: \"${9:string}\",",
            "    warmCount: ${10:Number},",
            "    warmEnabled: ${11|false,true|},",
            "    warmType: \"${12:string}\",",
            "    zoneAwarenessEnabled: ${14|false,true|},",
            "  },",
            "  cognitoOptions: {",
            "    enabled: ${6|false,true|},",
            "    identityPoolId: \"${7:string}\",",
            "    roleArn: \"${8:string}\",",
            "    userPoolId: \"${9:string}\",",
            "  },",
            "  domainEndpointOptions: {",
            "    customEndpoint: \"${7:string}\",",
            "    customEndpointCertificateArn: \"${8:string}\",",
            "    customEndpointEnabled: ${9|false,true|},",
            "    enforceHTTPS: ${10|false,true|},",
            "    tLSSecurityPolicy: \"${11:string}\",",
            "  },",
            "  domainName: \"${8:string}\",",
            "  eBSOptions: {",
            "    eBSEnabled: ${9|false,true|},",
            "    iops: ${10:Number},",
            "    volumeSize: ${11:Number},",
            "    volumeType: \"${12:string}\",",
            "  },",
            "  encryptionAtRestOptions: {",
            "    enabled: ${10|false,true|},",
            "    kmsKeyId: \"${11:string}\",",
            "  },",
            "  engineVersion: \"${11:string}\",",
            "  logPublishingOptions: {",
            "  },",
            "  nodeToNodeEncryptionOptions: {",
            "    enabled: ${13|false,true|},",
            "  },",
            "  snapshotOptions: {",
            "    automatedSnapshotStartHour: ${14:Number},",
            "  },",
            "  tags: [],",
            "  vPCOptions: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: opensearchservice.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opensearchservice.CfnDomain",
            "Attributes: ",
            "  attrDomainEndpoint",
            "  attrId",
            "  attrArn",
            "  attrDomainArn"
        ],
        "prefix": "l1-opensearchservice-domain",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnApp": {
        "body": [
            "new opsworks.CfnApp(this, \"${1:id}\", {",
            "  appSource: {",
            "    password: \"${2:string}\",",
            "    revision: \"${3:string}\",",
            "    sshKey: \"${4:string}\",",
            "    type: \"${5:string}\",",
            "    url: \"${6:string}\",",
            "    username: \"${7:string}\",",
            "  },",
            "  attributes: {",
            "  },",
            "  dataSources: [],",
            "  description: \"${5:string}\",",
            "  domains: [],",
            "  enableSsl: ${7|false,true|},",
            "  environment: [],",
            "  name: \"${9:string}\", // Required",
            "  shortname: \"${10:string}\",",
            "  sslConfiguration: {",
            "    certificate: \"${11:string}\",",
            "    chain: \"${12:string}\",",
            "    privateKey: \"${13:string}\",",
            "  },",
            "  stackId: \"${12:string}\", // Required",
            "  type: \"${13:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnApp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnApp"
        ],
        "prefix": "l1-opsworks-app",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnElasticLoadBalancerAttachment": {
        "body": [
            "new opsworks.CfnElasticLoadBalancerAttachment(this, \"${1:id}\", {",
            "  elasticLoadBalancerName: \"${2:string}\", // Required",
            "  layerId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnElasticLoadBalancerAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnElasticLoadBalancerAttachment"
        ],
        "prefix": "l1-opsworks-elasticloadbalancerattachment",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnInstance": {
        "body": [
            "new opsworks.CfnInstance(this, \"${1:id}\", {",
            "  agentVersion: \"${2:string}\",",
            "  amiId: \"${3:string}\",",
            "  architecture: \"${4:string}\",",
            "  autoScalingType: \"${5:string}\",",
            "  availabilityZone: \"${6:string}\",",
            "  blockDeviceMappings: [],",
            "  ebsOptimized: ${8|false,true|},",
            "  elasticIps: [],",
            "  hostname: \"${10:string}\",",
            "  installUpdatesOnBoot: ${11|false,true|},",
            "  instanceType: \"${12:string}\", // Required",
            "  layerIds: [], // Required",
            "  os: \"${14:string}\",",
            "  rootDeviceType: \"${15:string}\",",
            "  sshKeyName: \"${16:string}\",",
            "  stackId: \"${17:string}\", // Required",
            "  subnetId: \"${18:string}\",",
            "  tenancy: \"${19:string}\",",
            "  timeBasedAutoScaling: {",
            "  },",
            "  virtualizationType: \"${21:string}\",",
            "  volumes: [],",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnInstance",
            "Attributes: ",
            "  attrAvailabilityZone",
            "  attrPrivateDnsName",
            "  attrPrivateIp",
            "  attrPublicDnsName",
            "  attrPublicIp"
        ],
        "prefix": "l1-opsworks-instance",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnLayer": {
        "body": [
            "new opsworks.CfnLayer(this, \"${1:id}\", {",
            "  attributes: {",
            "  },",
            "  autoAssignElasticIps: ${3|false,true|}, // Required",
            "  autoAssignPublicIps: ${4|false,true|}, // Required",
            "  customInstanceProfileArn: \"${5:string}\",",
            "  customJson: ${6:JSON},",
            "  customRecipes: {",
            "    configure: [],",
            "    deploy: [],",
            "    setup: [],",
            "    shutdown: [],",
            "    undeploy: [],",
            "  },",
            "  customSecurityGroupIds: [],",
            "  enableAutoHealing: ${9|false,true|}, // Required",
            "  installUpdatesOnBoot: ${10|false,true|},",
            "  lifecycleEventConfiguration: {",
            "  },",
            "  loadBasedAutoScaling: {",
            "    enable: ${13|false,true|},",
            "  },",
            "  name: \"${13:string}\", // Required",
            "  packages: [],",
            "  shortname: \"${15:string}\", // Required",
            "  stackId: \"${16:string}\", // Required",
            "  tags: [],",
            "  type: \"${18:string}\", // Required",
            "  useEbsOptimizedInstances: ${19|false,true|},",
            "  volumeConfigurations: [],",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnLayer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnLayer"
        ],
        "prefix": "l1-opsworks-layer",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnStack": {
        "body": [
            "new opsworks.CfnStack(this, \"${1:id}\", {",
            "  agentVersion: \"${2:string}\",",
            "  attributes: {",
            "  },",
            "  chefConfiguration: {",
            "    berkshelfVersion: \"${4:string}\",",
            "    manageBerkshelf: ${5|false,true|},",
            "  },",
            "  cloneAppIds: [],",
            "  clonePermissions: ${6|false,true|},",
            "  configurationManager: {",
            "    name: \"${7:string}\",",
            "    version: \"${8:string}\",",
            "  },",
            "  customCookbooksSource: {",
            "    password: \"${8:string}\",",
            "    revision: \"${9:string}\",",
            "    sshKey: \"${10:string}\",",
            "    type: \"${11:string}\",",
            "    url: \"${12:string}\",",
            "    username: \"${13:string}\",",
            "  },",
            "  customJson: ${9:JSON},",
            "  defaultAvailabilityZone: \"${10:string}\",",
            "  defaultInstanceProfileArn: \"${11:string}\", // Required",
            "  defaultOs: \"${12:string}\",",
            "  defaultRootDeviceType: \"${13:string}\",",
            "  defaultSshKeyName: \"${14:string}\",",
            "  defaultSubnetId: \"${15:string}\",",
            "  ecsClusterArn: \"${16:string}\",",
            "  elasticIps: [],",
            "  hostnameTheme: \"${18:string}\",",
            "  name: \"${19:string}\", // Required",
            "  rdsDbInstances: [],",
            "  serviceRoleArn: \"${21:string}\", // Required",
            "  sourceStackId: \"${22:string}\",",
            "  tags: [],",
            "  useCustomCookbooks: ${24|false,true|},",
            "  useOpsworksSecurityGroups: ${25|false,true|},",
            "  vpcId: \"${26:string}\",",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnStack",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnStack"
        ],
        "prefix": "l1-opsworks-stack",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnUserProfile": {
        "body": [
            "new opsworks.CfnUserProfile(this, \"${1:id}\", {",
            "  allowSelfManagement: ${2|false,true|},",
            "  iamUserArn: \"${3:string}\", // Required",
            "  sshPublicKey: \"${4:string}\",",
            "  sshUsername: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnUserProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnUserProfile",
            "Attributes: ",
            "  attrSshUsername"
        ],
        "prefix": "l1-opsworks-userprofile",
        "scope": "javascript,typescript"
    },
    "opsworks.CfnVolume": {
        "body": [
            "new opsworks.CfnVolume(this, \"${1:id}\", {",
            "  ec2VolumeId: \"${2:string}\", // Required",
            "  mountPoint: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  stackId: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: opsworks.CfnVolume",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworks.CfnVolume"
        ],
        "prefix": "l1-opsworks-volume",
        "scope": "javascript,typescript"
    },
    "opsworkscm.CfnServer": {
        "body": [
            "new opsworkscm.CfnServer(this, \"${1:id}\", {",
            "  associatePublicIpAddress: ${2|false,true|},",
            "  backupId: \"${3:string}\",",
            "  backupRetentionCount: ${4:Number},",
            "  customCertificate: \"${5:string}\",",
            "  customDomain: \"${6:string}\",",
            "  customPrivateKey: \"${7:string}\",",
            "  disableAutomatedBackup: ${8|false,true|},",
            "  engine: \"${9:string}\",",
            "  engineAttributes: [],",
            "  engineModel: \"${11:string}\",",
            "  engineVersion: \"${12:string}\",",
            "  instanceProfileArn: \"${13:string}\", // Required",
            "  instanceType: \"${14:string}\", // Required",
            "  keyPair: \"${15:string}\",",
            "  preferredBackupWindow: \"${16:string}\",",
            "  preferredMaintenanceWindow: \"${17:string}\",",
            "  securityGroupIds: [],",
            "  serverName: \"${19:string}\",",
            "  serviceRoleArn: \"${20:string}\", // Required",
            "  subnetIds: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: opsworkscm.CfnServer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-opsworkscm.CfnServer",
            "Attributes: ",
            "  attrEndpoint",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-opsworkscm-server",
        "scope": "javascript,typescript"
    },
    "panorama.CfnApplicationInstance": {
        "body": [
            "new panorama.CfnApplicationInstance(this, \"${1:id}\", {",
            "  applicationInstanceIdToReplace: \"${2:string}\",",
            "  defaultRuntimeContextDevice: \"${3:string}\", // Required",
            "  description: \"${4:string}\",",
            "  deviceId: \"${5:string}\",",
            "  manifestOverridesPayload: {",
            "    payloadData: \"${6:string}\",",
            "  },",
            "  manifestPayload: {",
            "    payloadData: \"${7:string}\",",
            "  },",
            "  name: \"${8:string}\",",
            "  runtimeRoleArn: \"${9:string}\",",
            "  statusFilter: \"${10:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: panorama.CfnApplicationInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-panorama.CfnApplicationInstance",
            "Attributes: ",
            "  attrDefaultRuntimeContextDeviceName",
            "  attrApplicationInstanceId",
            "  attrStatus",
            "  attrHealthStatus",
            "  attrStatusDescription",
            "  attrCreatedTime",
            "  attrLastUpdatedTime",
            "  attrArn"
        ],
        "prefix": "l1-panorama-applicationinstance",
        "scope": "javascript,typescript"
    },
    "panorama.CfnPackage": {
        "body": [
            "new panorama.CfnPackage(this, \"${1:id}\", {",
            "  packageName: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: panorama.CfnPackage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-panorama.CfnPackage",
            "Attributes: ",
            "  attrPackageId",
            "  attrArn",
            "  attrCreatedTime"
        ],
        "prefix": "l1-panorama-package",
        "scope": "javascript,typescript"
    },
    "panorama.CfnPackageVersion": {
        "body": [
            "new panorama.CfnPackageVersion(this, \"${1:id}\", {",
            "  markLatest: ${2|false,true|},",
            "  ownerAccount: \"${3:string}\",",
            "  packageId: \"${4:string}\", // Required",
            "  packageVersion: \"${5:string}\", // Required",
            "  patchVersion: \"${6:string}\", // Required",
            "  updatedLatestPatchVersion: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: panorama.CfnPackageVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-panorama.CfnPackageVersion",
            "Attributes: ",
            "  attrPackageArn",
            "  attrIsLatestPatch",
            "  attrPackageName",
            "  attrStatus",
            "  attrStatusDescription",
            "  attrRegisteredTime"
        ],
        "prefix": "l1-panorama-packageversion",
        "scope": "javascript,typescript"
    },
    "personalize.CfnDataset": {
        "body": [
            "new personalize.CfnDataset(this, \"${1:id}\", {",
            "  datasetGroupArn: \"${2:string}\", // Required",
            "  datasetImportJob: {",
            "    dataSource: ${3:JSON},",
            "    datasetArn: \"${4:string}\",",
            "    datasetImportJobArn: \"${5:string}\",",
            "    jobName: \"${6:string}\",",
            "    roleArn: \"${7:string}\",",
            "  },",
            "  datasetType: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  schemaArn: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: personalize.CfnDataset",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-personalize.CfnDataset",
            "Attributes: ",
            "  attrDatasetArn"
        ],
        "prefix": "l1-personalize-dataset",
        "scope": "javascript,typescript"
    },
    "personalize.CfnDatasetGroup": {
        "body": [
            "new personalize.CfnDatasetGroup(this, \"${1:id}\", {",
            "  domain: \"${2:string}\",",
            "  kmsKeyArn: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  roleArn: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: personalize.CfnDatasetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-personalize.CfnDatasetGroup",
            "Attributes: ",
            "  attrDatasetGroupArn"
        ],
        "prefix": "l1-personalize-datasetgroup",
        "scope": "javascript,typescript"
    },
    "personalize.CfnSchema": {
        "body": [
            "new personalize.CfnSchema(this, \"${1:id}\", {",
            "  domain: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  schema: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: personalize.CfnSchema",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-personalize.CfnSchema",
            "Attributes: ",
            "  attrSchemaArn"
        ],
        "prefix": "l1-personalize-schema",
        "scope": "javascript,typescript"
    },
    "personalize.CfnSolution": {
        "body": [
            "new personalize.CfnSolution(this, \"${1:id}\", {",
            "  datasetGroupArn: \"${2:string}\", // Required",
            "  eventType: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  performAutoML: ${5|false,true|},",
            "  performHPO: ${6|false,true|},",
            "  recipeArn: \"${7:string}\",",
            "  solutionConfig: {",
            "    autoMLConfig: ${9:JSON},",
            "    eventValueThreshold: \"${10:string}\",",
            "    hpoConfig: ${12:JSON},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: personalize.CfnSolution",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-personalize.CfnSolution",
            "Attributes: ",
            "  attrSolutionArn"
        ],
        "prefix": "l1-personalize-solution",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnADMChannel": {
        "body": [
            "new pinpoint.CfnADMChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  clientId: \"${3:string}\", // Required",
            "  clientSecret: \"${4:string}\", // Required",
            "  enabled: ${5|false,true|},",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnADMChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnADMChannel"
        ],
        "prefix": "l1-pinpoint-admchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnAPNSChannel": {
        "body": [
            "new pinpoint.CfnAPNSChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  bundleId: \"${3:string}\",",
            "  certificate: \"${4:string}\",",
            "  defaultAuthenticationMethod: \"${5:string}\",",
            "  enabled: ${6|false,true|},",
            "  privateKey: \"${7:string}\",",
            "  teamId: \"${8:string}\",",
            "  tokenKey: \"${9:string}\",",
            "  tokenKeyId: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnAPNSChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnAPNSChannel"
        ],
        "prefix": "l1-pinpoint-apnschannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnAPNSSandboxChannel": {
        "body": [
            "new pinpoint.CfnAPNSSandboxChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  bundleId: \"${3:string}\",",
            "  certificate: \"${4:string}\",",
            "  defaultAuthenticationMethod: \"${5:string}\",",
            "  enabled: ${6|false,true|},",
            "  privateKey: \"${7:string}\",",
            "  teamId: \"${8:string}\",",
            "  tokenKey: \"${9:string}\",",
            "  tokenKeyId: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnAPNSSandboxChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnAPNSSandboxChannel"
        ],
        "prefix": "l1-pinpoint-apnssandboxchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnAPNSVoipChannel": {
        "body": [
            "new pinpoint.CfnAPNSVoipChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  bundleId: \"${3:string}\",",
            "  certificate: \"${4:string}\",",
            "  defaultAuthenticationMethod: \"${5:string}\",",
            "  enabled: ${6|false,true|},",
            "  privateKey: \"${7:string}\",",
            "  teamId: \"${8:string}\",",
            "  tokenKey: \"${9:string}\",",
            "  tokenKeyId: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnAPNSVoipChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnAPNSVoipChannel"
        ],
        "prefix": "l1-pinpoint-apnsvoipchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnAPNSVoipSandboxChannel": {
        "body": [
            "new pinpoint.CfnAPNSVoipSandboxChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  bundleId: \"${3:string}\",",
            "  certificate: \"${4:string}\",",
            "  defaultAuthenticationMethod: \"${5:string}\",",
            "  enabled: ${6|false,true|},",
            "  privateKey: \"${7:string}\",",
            "  teamId: \"${8:string}\",",
            "  tokenKey: \"${9:string}\",",
            "  tokenKeyId: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnAPNSVoipSandboxChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnAPNSVoipSandboxChannel"
        ],
        "prefix": "l1-pinpoint-apnsvoipsandboxchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnApp": {
        "body": [
            "new pinpoint.CfnApp(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  tags: ${3:JSON},",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnApp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnApp",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-app",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnApplicationSettings": {
        "body": [
            "new pinpoint.CfnApplicationSettings(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  campaignHook: {",
            "    lambdaFunctionName: \"${3:string}\",",
            "    mode: \"${4:string}\",",
            "    webUrl: \"${5:string}\",",
            "  },",
            "  cloudWatchMetricsEnabled: ${4|false,true|},",
            "  limits: {",
            "    daily: ${5:Number},",
            "    maximumDuration: ${6:Number},",
            "    messagesPerSecond: ${7:Number},",
            "    total: ${8:Number},",
            "  },",
            "  quietTime: {",
            "    end: \"${6:string}\",",
            "    start: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnApplicationSettings",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnApplicationSettings"
        ],
        "prefix": "l1-pinpoint-applicationsettings",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnBaiduChannel": {
        "body": [
            "new pinpoint.CfnBaiduChannel(this, \"${1:id}\", {",
            "  apiKey: \"${2:string}\", // Required",
            "  applicationId: \"${3:string}\", // Required",
            "  enabled: ${4|false,true|},",
            "  secretKey: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnBaiduChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnBaiduChannel"
        ],
        "prefix": "l1-pinpoint-baiduchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnCampaign": {
        "body": [
            "new pinpoint.CfnCampaign(this, \"${1:id}\", {",
            "  additionalTreatments: [],",
            "  applicationId: \"${3:string}\", // Required",
            "  campaignHook: {",
            "    lambdaFunctionName: \"${4:string}\",",
            "    mode: \"${5:string}\",",
            "    webUrl: \"${6:string}\",",
            "  },",
            "  description: \"${5:string}\",",
            "  holdoutPercent: ${6:Number},",
            "  isPaused: ${7|false,true|},",
            "  limits: {",
            "    daily: ${8:Number},",
            "    maximumDuration: ${9:Number},",
            "    messagesPerSecond: ${10:Number},",
            "    session: ${11:Number},",
            "    total: ${12:Number},",
            "  },",
            "  messageConfiguration: {",
            "  },",
            "  name: \"${10:string}\", // Required",
            "  priority: ${11:Number},",
            "  schedule: {",
            "    endTime: \"${12:string}\",",
            "    frequency: \"${14:string}\",",
            "    isLocalTime: ${15|false,true|},",
            "    startTime: \"${17:string}\",",
            "    timeZone: \"${18:string}\",",
            "  },",
            "  segmentId: \"${13:string}\", // Required",
            "  segmentVersion: ${14:Number},",
            "  tags: ${15:JSON},",
            "  treatmentDescription: \"${16:string}\",",
            "  treatmentName: \"${17:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnCampaign",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnCampaign",
            "Attributes: ",
            "  attrCampaignId",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-campaign",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnEmailChannel": {
        "body": [
            "new pinpoint.CfnEmailChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  configurationSet: \"${3:string}\",",
            "  enabled: ${4|false,true|},",
            "  fromAddress: \"${5:string}\", // Required",
            "  identity: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnEmailChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnEmailChannel"
        ],
        "prefix": "l1-pinpoint-emailchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnEmailTemplate": {
        "body": [
            "new pinpoint.CfnEmailTemplate(this, \"${1:id}\", {",
            "  defaultSubstitutions: \"${2:string}\",",
            "  htmlPart: \"${3:string}\",",
            "  subject: \"${4:string}\", // Required",
            "  tags: ${5:JSON},",
            "  templateDescription: \"${6:string}\",",
            "  templateName: \"${7:string}\", // Required",
            "  textPart: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnEmailTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnEmailTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-emailtemplate",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnEventStream": {
        "body": [
            "new pinpoint.CfnEventStream(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  destinationStreamArn: \"${3:string}\", // Required",
            "  roleArn: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnEventStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnEventStream"
        ],
        "prefix": "l1-pinpoint-eventstream",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnGCMChannel": {
        "body": [
            "new pinpoint.CfnGCMChannel(this, \"${1:id}\", {",
            "  apiKey: \"${2:string}\", // Required",
            "  applicationId: \"${3:string}\", // Required",
            "  enabled: ${4|false,true|},",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnGCMChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnGCMChannel"
        ],
        "prefix": "l1-pinpoint-gcmchannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnInAppTemplate": {
        "body": [
            "new pinpoint.CfnInAppTemplate(this, \"${1:id}\", {",
            "  content: [],",
            "  customConfig: ${3:JSON},",
            "  layout: \"${4:string}\",",
            "  tags: ${5:JSON},",
            "  templateDescription: \"${6:string}\",",
            "  templateName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnInAppTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnInAppTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-inapptemplate",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnPushTemplate": {
        "body": [
            "new pinpoint.CfnPushTemplate(this, \"${1:id}\", {",
            "  aDM: {",
            "    action: \"${2:string}\",",
            "    body: \"${3:string}\",",
            "    imageIconUrl: \"${4:string}\",",
            "    imageUrl: \"${5:string}\",",
            "    smallImageIconUrl: \"${6:string}\",",
            "    sound: \"${7:string}\",",
            "    title: \"${8:string}\",",
            "    url: \"${9:string}\",",
            "  },",
            "  aPNS: {",
            "    action: \"${3:string}\",",
            "    body: \"${4:string}\",",
            "    mediaUrl: \"${5:string}\",",
            "    sound: \"${6:string}\",",
            "    title: \"${7:string}\",",
            "    url: \"${8:string}\",",
            "  },",
            "  baidu: {",
            "    action: \"${4:string}\",",
            "    body: \"${5:string}\",",
            "    imageIconUrl: \"${6:string}\",",
            "    imageUrl: \"${7:string}\",",
            "    smallImageIconUrl: \"${8:string}\",",
            "    sound: \"${9:string}\",",
            "    title: \"${10:string}\",",
            "    url: \"${11:string}\",",
            "  },",
            "  default: {",
            "    action: \"${5:string}\",",
            "    body: \"${6:string}\",",
            "    sound: \"${7:string}\",",
            "    title: \"${8:string}\",",
            "    url: \"${9:string}\",",
            "  },",
            "  defaultSubstitutions: \"${6:string}\",",
            "  gCM: {",
            "    action: \"${7:string}\",",
            "    body: \"${8:string}\",",
            "    imageIconUrl: \"${9:string}\",",
            "    imageUrl: \"${10:string}\",",
            "    smallImageIconUrl: \"${11:string}\",",
            "    sound: \"${12:string}\",",
            "    title: \"${13:string}\",",
            "    url: \"${14:string}\",",
            "  },",
            "  tags: ${8:JSON},",
            "  templateDescription: \"${9:string}\",",
            "  templateName: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnPushTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnPushTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-pushtemplate",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnSMSChannel": {
        "body": [
            "new pinpoint.CfnSMSChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  enabled: ${3|false,true|},",
            "  senderId: \"${4:string}\",",
            "  shortCode: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnSMSChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnSMSChannel"
        ],
        "prefix": "l1-pinpoint-smschannel",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnSegment": {
        "body": [
            "new pinpoint.CfnSegment(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  dimensions: {",
            "    attributes: ${3:JSON},",
            "    metrics: ${7:JSON},",
            "    userAttributes: ${8:JSON},",
            "  },",
            "  name: \"${4:string}\", // Required",
            "  segmentGroups: {",
            "    groups: [],",
            "    include: \"${6:string}\",",
            "  },",
            "  tags: ${6:JSON},",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnSegment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnSegment",
            "Attributes: ",
            "  attrSegmentId",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-segment",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnSmsTemplate": {
        "body": [
            "new pinpoint.CfnSmsTemplate(this, \"${1:id}\", {",
            "  body: \"${2:string}\", // Required",
            "  defaultSubstitutions: \"${3:string}\",",
            "  tags: ${4:JSON},",
            "  templateDescription: \"${5:string}\",",
            "  templateName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnSmsTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnSmsTemplate",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-pinpoint-smstemplate",
        "scope": "javascript,typescript"
    },
    "pinpoint.CfnVoiceChannel": {
        "body": [
            "new pinpoint.CfnVoiceChannel(this, \"${1:id}\", {",
            "  applicationId: \"${2:string}\", // Required",
            "  enabled: ${3|false,true|},",
            "})"
        ],
        "description": [
            "Construct: pinpoint.CfnVoiceChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpoint.CfnVoiceChannel"
        ],
        "prefix": "l1-pinpoint-voicechannel",
        "scope": "javascript,typescript"
    },
    "pinpointemail.CfnConfigurationSet": {
        "body": [
            "new pinpointemail.CfnConfigurationSet(this, \"${1:id}\", {",
            "  deliveryOptions: {",
            "    sendingPoolName: \"${2:string}\",",
            "  },",
            "  name: \"${3:string}\", // Required",
            "  reputationOptions: {",
            "    reputationMetricsEnabled: ${4|false,true|},",
            "  },",
            "  sendingOptions: {",
            "    sendingEnabled: ${5|false,true|},",
            "  },",
            "  tags: [],",
            "  trackingOptions: {",
            "    customRedirectDomain: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: pinpointemail.CfnConfigurationSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpointemail.CfnConfigurationSet"
        ],
        "prefix": "l1-pinpointemail-configurationset",
        "scope": "javascript,typescript"
    },
    "pinpointemail.CfnConfigurationSetEventDestination": {
        "body": [
            "new pinpointemail.CfnConfigurationSetEventDestination(this, \"${1:id}\", {",
            "  configurationSetName: \"${2:string}\", // Required",
            "  eventDestination: {",
            "    enabled: ${4|false,true|},",
            "    matchingEventTypes: [],",
            "  },",
            "  eventDestinationName: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: pinpointemail.CfnConfigurationSetEventDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpointemail.CfnConfigurationSetEventDestination"
        ],
        "prefix": "l1-pinpointemail-configurationseteventdestination",
        "scope": "javascript,typescript"
    },
    "pinpointemail.CfnDedicatedIpPool": {
        "body": [
            "new pinpointemail.CfnDedicatedIpPool(this, \"${1:id}\", {",
            "  poolName: \"${2:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: pinpointemail.CfnDedicatedIpPool",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpointemail.CfnDedicatedIpPool"
        ],
        "prefix": "l1-pinpointemail-dedicatedippool",
        "scope": "javascript,typescript"
    },
    "pinpointemail.CfnIdentity": {
        "body": [
            "new pinpointemail.CfnIdentity(this, \"${1:id}\", {",
            "  dkimSigningEnabled: ${2|false,true|},",
            "  feedbackForwardingEnabled: ${3|false,true|},",
            "  mailFromAttributes: {",
            "    behaviorOnMxFailure: \"${4:string}\",",
            "    mailFromDomain: \"${5:string}\",",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: pinpointemail.CfnIdentity",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-pinpointemail.CfnIdentity",
            "Attributes: ",
            "  attrIdentityDNSRecordName3",
            "  attrIdentityDNSRecordName1",
            "  attrIdentityDNSRecordName2",
            "  attrIdentityDNSRecordValue3",
            "  attrIdentityDNSRecordValue2",
            "  attrIdentityDNSRecordValue1"
        ],
        "prefix": "l1-pinpointemail-identity",
        "scope": "javascript,typescript"
    },
    "qldb.CfnLedger": {
        "body": [
            "new qldb.CfnLedger(this, \"${1:id}\", {",
            "  deletionProtection: ${2|false,true|},",
            "  kmsKey: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  permissionsMode: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: qldb.CfnLedger",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-qldb.CfnLedger"
        ],
        "prefix": "l1-qldb-ledger",
        "scope": "javascript,typescript"
    },
    "qldb.CfnStream": {
        "body": [
            "new qldb.CfnStream(this, \"${1:id}\", {",
            "  exclusiveEndTime: \"${2:string}\",",
            "  inclusiveStartTime: \"${3:string}\", // Required",
            "  kinesisConfiguration: {",
            "    aggregationEnabled: ${4|false,true|},",
            "    streamArn: \"${5:string}\",",
            "  },",
            "  ledgerName: \"${5:string}\", // Required",
            "  roleArn: \"${6:string}\", // Required",
            "  streamName: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: qldb.CfnStream",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-qldb.CfnStream",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-qldb-stream",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnAnalysis": {
        "body": [
            "new quicksight.CfnAnalysis(this, \"${1:id}\", {",
            "  analysisId: \"${2:string}\", // Required",
            "  awsAccountId: \"${3:string}\", // Required",
            "  errors: [],",
            "  name: \"${5:string}\",",
            "  parameters: {",
            "    dateTimeParameters: [],",
            "    decimalParameters: [],",
            "    integerParameters: [],",
            "    stringParameters: [],",
            "  },",
            "  permissions: [],",
            "  sourceEntity: {",
            "  },",
            "  tags: [],",
            "  themeArn: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnAnalysis",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnAnalysis",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrDataSetArns",
            "  attrLastUpdatedTime",
            "  attrSheets",
            "  attrStatus"
        ],
        "prefix": "l1-quicksight-analysis",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnDashboard": {
        "body": [
            "new quicksight.CfnDashboard(this, \"${1:id}\", {",
            "  awsAccountId: \"${2:string}\", // Required",
            "  dashboardId: \"${3:string}\", // Required",
            "  dashboardPublishOptions: {",
            "  },",
            "  name: \"${5:string}\",",
            "  parameters: {",
            "    dateTimeParameters: [],",
            "    decimalParameters: [],",
            "    integerParameters: [],",
            "    stringParameters: [],",
            "  },",
            "  permissions: [],",
            "  sourceEntity: {",
            "  },",
            "  tags: [],",
            "  themeArn: \"${10:string}\",",
            "  versionDescription: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnDashboard",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnDashboard",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastPublishedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-quicksight-dashboard",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnDataSet": {
        "body": [
            "new quicksight.CfnDataSet(this, \"${1:id}\", {",
            "  awsAccountId: \"${2:string}\",",
            "  columnGroups: [],",
            "  columnLevelPermissionRules: [],",
            "  dataSetId: \"${5:string}\",",
            "  fieldFolders: {",
            "  },",
            "  importMode: \"${7:string}\",",
            "  ingestionWaitPolicy: {",
            "    ingestionWaitTimeInHours: ${8:Number},",
            "    waitForSpiceIngestion: ${9|false,true|},",
            "  },",
            "  logicalTableMap: {",
            "  },",
            "  name: \"${10:string}\",",
            "  permissions: [],",
            "  physicalTableMap: {",
            "  },",
            "  rowLevelPermissionDataSet: {",
            "    arn: \"${13:string}\",",
            "    formatVersion: \"${14:string}\",",
            "    namespace: \"${15:string}\",",
            "    permissionPolicy: \"${16:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnDataSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnDataSet",
            "Attributes: ",
            "  attrArn",
            "  attrConsumedSpiceCapacityInBytes",
            "  attrCreatedTime",
            "  attrLastUpdatedTime",
            "  attrOutputColumns"
        ],
        "prefix": "l1-quicksight-dataset",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnDataSource": {
        "body": [
            "new quicksight.CfnDataSource(this, \"${1:id}\", {",
            "  alternateDataSourceParameters: [],",
            "  awsAccountId: \"${3:string}\",",
            "  credentials: {",
            "    copySourceArn: \"${4:string}\",",
            "  },",
            "  dataSourceId: \"${5:string}\",",
            "  dataSourceParameters: {",
            "  },",
            "  errorInfo: {",
            "    message: \"${7:string}\",",
            "    type: \"${8:string}\",",
            "  },",
            "  name: \"${8:string}\",",
            "  permissions: [],",
            "  sslProperties: {",
            "    disableSsl: ${10|false,true|},",
            "  },",
            "  tags: [],",
            "  type: \"${12:string}\",",
            "  vpcConnectionProperties: {",
            "    vpcConnectionArn: \"${13:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnDataSource",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnDataSource",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime",
            "  attrStatus"
        ],
        "prefix": "l1-quicksight-datasource",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnTemplate": {
        "body": [
            "new quicksight.CfnTemplate(this, \"${1:id}\", {",
            "  awsAccountId: \"${2:string}\", // Required",
            "  name: \"${3:string}\",",
            "  permissions: [],",
            "  sourceEntity: {",
            "  },",
            "  tags: [],",
            "  templateId: \"${7:string}\", // Required",
            "  versionDescription: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnTemplate",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime"
        ],
        "prefix": "l1-quicksight-template",
        "scope": "javascript,typescript"
    },
    "quicksight.CfnTheme": {
        "body": [
            "new quicksight.CfnTheme(this, \"${1:id}\", {",
            "  awsAccountId: \"${2:string}\", // Required",
            "  baseThemeId: \"${3:string}\",",
            "  configuration: {",
            "  },",
            "  name: \"${5:string}\",",
            "  permissions: [],",
            "  tags: [],",
            "  themeId: \"${8:string}\", // Required",
            "  versionDescription: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: quicksight.CfnTheme",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-quicksight.CfnTheme",
            "Attributes: ",
            "  attrArn",
            "  attrCreatedTime",
            "  attrLastUpdatedTime",
            "  attrType"
        ],
        "prefix": "l1-quicksight-theme",
        "scope": "javascript,typescript"
    },
    "ram.CfnResourceShare": {
        "body": [
            "new ram.CfnResourceShare(this, \"${1:id}\", {",
            "  allowExternalPrincipals: ${2|false,true|},",
            "  name: \"${3:string}\", // Required",
            "  permissionArns: [],",
            "  principals: [],",
            "  resourceArns: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ram.CfnResourceShare",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ram.CfnResourceShare",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ram-resourceshare",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBCluster": {
        "body": [
            "new rds.CfnDBCluster(this, \"${1:id}\", {",
            "  associatedRoles: [],",
            "  availabilityZones: [],",
            "  backtrackWindow: ${4:Number},",
            "  backupRetentionPeriod: ${5:Number},",
            "  copyTagsToSnapshot: ${6|false,true|},",
            "  dBClusterIdentifier: \"${7:string}\",",
            "  dBClusterParameterGroupName: \"${8:string}\",",
            "  dBSubnetGroupName: \"${9:string}\",",
            "  databaseName: \"${10:string}\",",
            "  deletionProtection: ${11|false,true|},",
            "  enableCloudwatchLogsExports: [],",
            "  enableHttpEndpoint: ${13|false,true|},",
            "  enableIAMDatabaseAuthentication: ${14|false,true|},",
            "  engine: \"${15:string}\", // Required",
            "  engineMode: \"${16:string}\",",
            "  engineVersion: \"${17:string}\",",
            "  globalClusterIdentifier: \"${18:string}\",",
            "  kmsKeyId: \"${19:string}\",",
            "  masterUserPassword: \"${20:string}\",",
            "  masterUsername: \"${21:string}\",",
            "  port: ${22:Number},",
            "  preferredBackupWindow: \"${23:string}\",",
            "  preferredMaintenanceWindow: \"${24:string}\",",
            "  replicationSourceIdentifier: \"${25:string}\",",
            "  restoreType: \"${26:string}\",",
            "  scalingConfiguration: {",
            "    autoPause: ${27|false,true|},",
            "    maxCapacity: ${28:Number},",
            "    minCapacity: ${29:Number},",
            "    secondsUntilAutoPause: ${30:Number},",
            "  },",
            "  snapshotIdentifier: \"${28:string}\",",
            "  sourceDBClusterIdentifier: \"${29:string}\",",
            "  sourceRegion: \"${30:string}\",",
            "  storageEncrypted: ${31|false,true|},",
            "  tags: [],",
            "  useLatestRestorableTime: ${33|false,true|},",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBCluster",
            "Attributes: ",
            "  attrEndpoint.Address",
            "  attrEndpoint.Port",
            "  attrReadEndpoint.Address"
        ],
        "prefix": "l1-rds-dbcluster",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBClusterParameterGroup": {
        "body": [
            "new rds.CfnDBClusterParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  family: \"${3:string}\", // Required",
            "  parameters: ${4:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBClusterParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBClusterParameterGroup"
        ],
        "prefix": "l1-rds-dbclusterparametergroup",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBInstance": {
        "body": [
            "new rds.CfnDBInstance(this, \"${1:id}\", {",
            "  allocatedStorage: \"${2:string}\",",
            "  allowMajorVersionUpgrade: ${3|false,true|},",
            "  associatedRoles: [],",
            "  autoMinorVersionUpgrade: ${5|false,true|},",
            "  availabilityZone: \"${6:string}\",",
            "  backupRetentionPeriod: ${7:Number},",
            "  cACertificateIdentifier: \"${8:string}\",",
            "  characterSetName: \"${9:string}\",",
            "  copyTagsToSnapshot: ${10|false,true|},",
            "  dBClusterIdentifier: \"${11:string}\",",
            "  dBInstanceClass: \"${12:string}\", // Required",
            "  dBInstanceIdentifier: \"${13:string}\",",
            "  dBName: \"${14:string}\",",
            "  dBParameterGroupName: \"${15:string}\",",
            "  dBSecurityGroups: [],",
            "  dBSnapshotIdentifier: \"${17:string}\",",
            "  dBSubnetGroupName: \"${18:string}\",",
            "  deleteAutomatedBackups: ${19|false,true|},",
            "  deletionProtection: ${20|false,true|},",
            "  domain: \"${21:string}\",",
            "  domainIAMRoleName: \"${22:string}\",",
            "  enableCloudwatchLogsExports: [],",
            "  enableIAMDatabaseAuthentication: ${24|false,true|},",
            "  enablePerformanceInsights: ${25|false,true|},",
            "  engine: \"${26:string}\",",
            "  engineVersion: \"${27:string}\",",
            "  iops: ${28:Number},",
            "  kmsKeyId: \"${29:string}\",",
            "  licenseModel: \"${30:string}\",",
            "  masterUserPassword: \"${31:string}\",",
            "  masterUsername: \"${32:string}\",",
            "  maxAllocatedStorage: ${33:Number},",
            "  monitoringInterval: ${34:Number},",
            "  monitoringRoleArn: \"${35:string}\",",
            "  multiAZ: ${36|false,true|},",
            "  optionGroupName: \"${37:string}\",",
            "  performanceInsightsKMSKeyId: \"${38:string}\",",
            "  performanceInsightsRetentionPeriod: ${39:Number},",
            "  port: \"${40:string}\",",
            "  preferredBackupWindow: \"${41:string}\",",
            "  preferredMaintenanceWindow: \"${42:string}\",",
            "  processorFeatures: [],",
            "  promotionTier: ${44:Number},",
            "  publiclyAccessible: ${45|false,true|},",
            "  sourceDBInstanceIdentifier: \"${46:string}\",",
            "  sourceRegion: \"${47:string}\",",
            "  storageEncrypted: ${48|false,true|},",
            "  storageType: \"${49:string}\",",
            "  tags: [],",
            "  timezone: \"${51:string}\",",
            "  useDefaultProcessorFeatures: ${52|false,true|},",
            "  vPCSecurityGroups: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBInstance",
            "Attributes: ",
            "  attrEndpoint.Address",
            "  attrEndpoint.Port"
        ],
        "prefix": "l1-rds-dbinstance",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBParameterGroup": {
        "body": [
            "new rds.CfnDBParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  family: \"${3:string}\", // Required",
            "  parameters: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBParameterGroup"
        ],
        "prefix": "l1-rds-dbparametergroup",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBProxy": {
        "body": [
            "new rds.CfnDBProxy(this, \"${1:id}\", {",
            "  auth: [], // Required",
            "  dBProxyName: \"${3:string}\", // Required",
            "  debugLogging: ${4|false,true|},",
            "  engineFamily: \"${5:string}\", // Required",
            "  idleClientTimeout: ${6:Number},",
            "  requireTLS: ${7|false,true|},",
            "  roleArn: \"${8:string}\", // Required",
            "  tags: [],",
            "  vpcSecurityGroupIds: [],",
            "  vpcSubnetIds: [], // Required",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBProxy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBProxy",
            "Attributes: ",
            "  attrDBProxyArn",
            "  attrEndpoint"
        ],
        "prefix": "l1-rds-dbproxy",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBProxyEndpoint": {
        "body": [
            "new rds.CfnDBProxyEndpoint(this, \"${1:id}\", {",
            "  dBProxyEndpointName: \"${2:string}\", // Required",
            "  dBProxyName: \"${3:string}\", // Required",
            "  tags: [],",
            "  targetRole: \"${5:string}\",",
            "  vpcSecurityGroupIds: [],",
            "  vpcSubnetIds: [], // Required",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBProxyEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBProxyEndpoint",
            "Attributes: ",
            "  attrDBProxyEndpointArn",
            "  attrVpcId",
            "  attrEndpoint",
            "  attrIsDefault"
        ],
        "prefix": "l1-rds-dbproxyendpoint",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBProxyTargetGroup": {
        "body": [
            "new rds.CfnDBProxyTargetGroup(this, \"${1:id}\", {",
            "  connectionPoolConfigurationInfo: {",
            "    connectionBorrowTimeout: ${2:Number},",
            "    initQuery: \"${3:string}\",",
            "    maxConnectionsPercent: ${4:Number},",
            "    maxIdleConnectionsPercent: ${5:Number},",
            "    sessionPinningFilters: [],",
            "  },",
            "  dBClusterIdentifiers: [],",
            "  dBInstanceIdentifiers: [],",
            "  dBProxyName: \"${5:string}\", // Required",
            "  targetGroupName: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBProxyTargetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBProxyTargetGroup",
            "Attributes: ",
            "  attrTargetGroupArn"
        ],
        "prefix": "l1-rds-dbproxytargetgroup",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBSecurityGroup": {
        "body": [
            "new rds.CfnDBSecurityGroup(this, \"${1:id}\", {",
            "  dBSecurityGroupIngress: [], // Required",
            "  eC2VpcId: \"${3:string}\",",
            "  groupDescription: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBSecurityGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBSecurityGroup"
        ],
        "prefix": "l1-rds-dbsecuritygroup",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBSecurityGroupIngress": {
        "body": [
            "new rds.CfnDBSecurityGroupIngress(this, \"${1:id}\", {",
            "  cIDRIP: \"${2:string}\",",
            "  dBSecurityGroupName: \"${3:string}\", // Required",
            "  eC2SecurityGroupId: \"${4:string}\",",
            "  eC2SecurityGroupName: \"${5:string}\",",
            "  eC2SecurityGroupOwnerId: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBSecurityGroupIngress",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBSecurityGroupIngress"
        ],
        "prefix": "l1-rds-dbsecuritygroupingress",
        "scope": "javascript,typescript"
    },
    "rds.CfnDBSubnetGroup": {
        "body": [
            "new rds.CfnDBSubnetGroup(this, \"${1:id}\", {",
            "  dBSubnetGroupDescription: \"${2:string}\", // Required",
            "  dBSubnetGroupName: \"${3:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnDBSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnDBSubnetGroup"
        ],
        "prefix": "l1-rds-dbsubnetgroup",
        "scope": "javascript,typescript"
    },
    "rds.CfnEventSubscription": {
        "body": [
            "new rds.CfnEventSubscription(this, \"${1:id}\", {",
            "  enabled: ${2|false,true|},",
            "  eventCategories: [],",
            "  snsTopicArn: \"${4:string}\", // Required",
            "  sourceIds: [],",
            "  sourceType: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: rds.CfnEventSubscription",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnEventSubscription"
        ],
        "prefix": "l1-rds-eventsubscription",
        "scope": "javascript,typescript"
    },
    "rds.CfnGlobalCluster": {
        "body": [
            "new rds.CfnGlobalCluster(this, \"${1:id}\", {",
            "  deletionProtection: ${2|false,true|},",
            "  engine: \"${3:string}\",",
            "  engineVersion: \"${4:string}\",",
            "  globalClusterIdentifier: \"${5:string}\",",
            "  sourceDBClusterIdentifier: \"${6:string}\",",
            "  storageEncrypted: ${7|false,true|},",
            "})"
        ],
        "description": [
            "Construct: rds.CfnGlobalCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnGlobalCluster"
        ],
        "prefix": "l1-rds-globalcluster",
        "scope": "javascript,typescript"
    },
    "rds.CfnOptionGroup": {
        "body": [
            "new rds.CfnOptionGroup(this, \"${1:id}\", {",
            "  engineName: \"${2:string}\", // Required",
            "  majorEngineVersion: \"${3:string}\", // Required",
            "  optionConfigurations: [], // Required",
            "  optionGroupDescription: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rds.CfnOptionGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rds.CfnOptionGroup"
        ],
        "prefix": "l1-rds-optiongroup",
        "scope": "javascript,typescript"
    },
    "redshift.CfnCluster": {
        "body": [
            "new redshift.CfnCluster(this, \"${1:id}\", {",
            "  allowVersionUpgrade: ${2|false,true|},",
            "  aquaConfigurationStatus: \"${3:string}\",",
            "  automatedSnapshotRetentionPeriod: ${4:Number},",
            "  availabilityZone: \"${5:string}\",",
            "  availabilityZoneRelocation: ${6|false,true|},",
            "  availabilityZoneRelocationStatus: \"${7:string}\",",
            "  classic: ${8|false,true|},",
            "  clusterIdentifier: \"${9:string}\",",
            "  clusterParameterGroupName: \"${10:string}\",",
            "  clusterSecurityGroups: [],",
            "  clusterSubnetGroupName: \"${12:string}\",",
            "  clusterType: \"${13:string}\", // Required",
            "  clusterVersion: \"${14:string}\",",
            "  dBName: \"${15:string}\", // Required",
            "  deferMaintenance: ${16|false,true|},",
            "  deferMaintenanceDuration: ${17:Number},",
            "  deferMaintenanceEndTime: \"${18:string}\",",
            "  deferMaintenanceStartTime: \"${19:string}\",",
            "  destinationRegion: \"${20:string}\",",
            "  elasticIp: \"${21:string}\",",
            "  encrypted: ${22|false,true|},",
            "  enhancedVpcRouting: ${23|false,true|},",
            "  hsmClientCertificateIdentifier: \"${24:string}\",",
            "  hsmConfigurationIdentifier: \"${25:string}\",",
            "  iamRoles: [],",
            "  kmsKeyId: \"${27:string}\",",
            "  loggingProperties: {",
            "    bucketName: \"${28:string}\",",
            "    s3KeyPrefix: \"${29:string}\",",
            "  },",
            "  maintenanceTrackName: \"${29:string}\",",
            "  manualSnapshotRetentionPeriod: ${30:Number},",
            "  masterUserPassword: \"${31:string}\", // Required",
            "  masterUsername: \"${32:string}\", // Required",
            "  nodeType: \"${33:string}\", // Required",
            "  numberOfNodes: ${34:Number},",
            "  ownerAccount: \"${35:string}\",",
            "  port: ${36:Number},",
            "  preferredMaintenanceWindow: \"${37:string}\",",
            "  publiclyAccessible: ${38|false,true|},",
            "  resourceAction: \"${39:string}\",",
            "  revisionTarget: \"${40:string}\",",
            "  rotateEncryptionKey: ${41|false,true|},",
            "  snapshotClusterIdentifier: \"${42:string}\",",
            "  snapshotCopyGrantName: \"${43:string}\",",
            "  snapshotCopyManual: ${44|false,true|},",
            "  snapshotCopyRetentionPeriod: ${45:Number},",
            "  snapshotIdentifier: \"${46:string}\",",
            "  tags: [],",
            "  vpcSecurityGroupIds: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnCluster",
            "Attributes: ",
            "  attrId",
            "  attrEndpoint.Port",
            "  attrEndpoint.Address",
            "  attrDeferMaintenanceIdentifier"
        ],
        "prefix": "l1-redshift-cluster",
        "scope": "javascript,typescript"
    },
    "redshift.CfnClusterParameterGroup": {
        "body": [
            "new redshift.CfnClusterParameterGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  parameterGroupFamily: \"${3:string}\", // Required",
            "  parameters: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnClusterParameterGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnClusterParameterGroup"
        ],
        "prefix": "l1-redshift-clusterparametergroup",
        "scope": "javascript,typescript"
    },
    "redshift.CfnClusterSecurityGroup": {
        "body": [
            "new redshift.CfnClusterSecurityGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnClusterSecurityGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnClusterSecurityGroup"
        ],
        "prefix": "l1-redshift-clustersecuritygroup",
        "scope": "javascript,typescript"
    },
    "redshift.CfnClusterSecurityGroupIngress": {
        "body": [
            "new redshift.CfnClusterSecurityGroupIngress(this, \"${1:id}\", {",
            "  cIDRIP: \"${2:string}\",",
            "  clusterSecurityGroupName: \"${3:string}\", // Required",
            "  eC2SecurityGroupName: \"${4:string}\",",
            "  eC2SecurityGroupOwnerId: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnClusterSecurityGroupIngress",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnClusterSecurityGroupIngress"
        ],
        "prefix": "l1-redshift-clustersecuritygroupingress",
        "scope": "javascript,typescript"
    },
    "redshift.CfnClusterSubnetGroup": {
        "body": [
            "new redshift.CfnClusterSubnetGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\", // Required",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnClusterSubnetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnClusterSubnetGroup"
        ],
        "prefix": "l1-redshift-clustersubnetgroup",
        "scope": "javascript,typescript"
    },
    "redshift.CfnEndpointAccess": {
        "body": [
            "new redshift.CfnEndpointAccess(this, \"${1:id}\", {",
            "  clusterIdentifier: \"${2:string}\",",
            "  endpointName: \"${3:string}\", // Required",
            "  resourceOwner: \"${4:string}\",",
            "  subnetGroupName: \"${5:string}\",",
            "  vpcSecurityGroupIds: [], // Required",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnEndpointAccess",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnEndpointAccess",
            "Attributes: ",
            "  attrAddress",
            "  attrVpcSecurityGroups",
            "  attrEndpointStatus",
            "  attrEndpointCreateTime",
            "  attrPort"
        ],
        "prefix": "l1-redshift-endpointaccess",
        "scope": "javascript,typescript"
    },
    "redshift.CfnEndpointAuthorization": {
        "body": [
            "new redshift.CfnEndpointAuthorization(this, \"${1:id}\", {",
            "  account: \"${2:string}\", // Required",
            "  clusterIdentifier: \"${3:string}\", // Required",
            "  force: ${4|false,true|},",
            "  vpcIds: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnEndpointAuthorization",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnEndpointAuthorization",
            "Attributes: ",
            "  attrGrantor",
            "  attrGrantee",
            "  attrAuthorizeTime",
            "  attrClusterStatus",
            "  attrStatus",
            "  attrAllowedAllVPCs",
            "  attrAllowedVPCs",
            "  attrEndpointCount"
        ],
        "prefix": "l1-redshift-endpointauthorization",
        "scope": "javascript,typescript"
    },
    "redshift.CfnEventSubscription": {
        "body": [
            "new redshift.CfnEventSubscription(this, \"${1:id}\", {",
            "  enabled: ${2|false,true|},",
            "  eventCategories: [],",
            "  severity: \"${4:string}\",",
            "  snsTopicArn: \"${5:string}\",",
            "  sourceIds: [],",
            "  sourceType: \"${7:string}\",",
            "  subscriptionName: \"${8:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnEventSubscription",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnEventSubscription",
            "Attributes: ",
            "  attrCustomerAwsId",
            "  attrCustSubscriptionId",
            "  attrStatus",
            "  attrSubscriptionCreationTime",
            "  attrSourceIdsList",
            "  attrEventCategoriesList"
        ],
        "prefix": "l1-redshift-eventsubscription",
        "scope": "javascript,typescript"
    },
    "redshift.CfnScheduledAction": {
        "body": [
            "new redshift.CfnScheduledAction(this, \"${1:id}\", {",
            "  enable: ${2|false,true|},",
            "  endTime: \"${3:string}\",",
            "  iamRole: \"${4:string}\",",
            "  schedule: \"${5:string}\",",
            "  scheduledActionDescription: \"${6:string}\",",
            "  scheduledActionName: \"${7:string}\", // Required",
            "  startTime: \"${8:string}\",",
            "  targetAction: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: redshift.CfnScheduledAction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.CfnScheduledAction",
            "Attributes: ",
            "  attrState",
            "  attrNextInvocations"
        ],
        "prefix": "l1-redshift-scheduledaction",
        "scope": "javascript,typescript"
    },
    "refactorspaces.CfnApplication": {
        "body": [
            "new refactorspaces.CfnApplication(this, \"${1:id}\", {",
            "  apiGatewayProxy: {",
            "    endpointType: \"${2:string}\",",
            "    stageName: \"${3:string}\",",
            "  },",
            "  environmentIdentifier: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  proxyType: \"${5:string}\",",
            "  tags: [],",
            "  vpcId: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: refactorspaces.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-refactorspaces.CfnApplication",
            "Attributes: ",
            "  attrArn",
            "  attrApiGatewayId",
            "  attrVpcLinkId",
            "  attrNlbArn",
            "  attrNlbName",
            "  attrApplicationIdentifier",
            "  attrStageName",
            "  attrProxyUrl"
        ],
        "prefix": "l1-refactorspaces-application",
        "scope": "javascript,typescript"
    },
    "refactorspaces.CfnEnvironment": {
        "body": [
            "new refactorspaces.CfnEnvironment(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\",",
            "  networkFabricType: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: refactorspaces.CfnEnvironment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-refactorspaces.CfnEnvironment",
            "Attributes: ",
            "  attrEnvironmentIdentifier",
            "  attrArn",
            "  attrTransitGatewayId"
        ],
        "prefix": "l1-refactorspaces-environment",
        "scope": "javascript,typescript"
    },
    "refactorspaces.CfnRoute": {
        "body": [
            "new refactorspaces.CfnRoute(this, \"${1:id}\", {",
            "  applicationIdentifier: \"${2:string}\", // Required",
            "  environmentIdentifier: \"${3:string}\", // Required",
            "  routeType: \"${4:string}\",",
            "  serviceIdentifier: \"${5:string}\", // Required",
            "  tags: [],",
            "  uriPathRoute: {",
            "    activationState: \"${7:string}\",",
            "    includeChildPaths: ${8|false,true|},",
            "    methods: [],",
            "    sourcePath: \"${10:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: refactorspaces.CfnRoute",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-refactorspaces.CfnRoute",
            "Attributes: ",
            "  attrPathResourceToId",
            "  attrArn",
            "  attrRouteIdentifier"
        ],
        "prefix": "l1-refactorspaces-route",
        "scope": "javascript,typescript"
    },
    "refactorspaces.CfnService": {
        "body": [
            "new refactorspaces.CfnService(this, \"${1:id}\", {",
            "  applicationIdentifier: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  endpointType: \"${4:string}\",",
            "  environmentIdentifier: \"${5:string}\", // Required",
            "  lambdaEndpoint: {",
            "    arn: \"${6:string}\",",
            "  },",
            "  name: \"${7:string}\",",
            "  tags: [],",
            "  urlEndpoint: {",
            "    healthUrl: \"${9:string}\",",
            "    url: \"${10:string}\",",
            "  },",
            "  vpcId: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: refactorspaces.CfnService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-refactorspaces.CfnService",
            "Attributes: ",
            "  attrArn",
            "  attrServiceIdentifier"
        ],
        "prefix": "l1-refactorspaces-service",
        "scope": "javascript,typescript"
    },
    "rekognition.CfnCollection": {
        "body": [
            "new rekognition.CfnCollection(this, \"${1:id}\", {",
            "  collectionId: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rekognition.CfnCollection",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rekognition.CfnCollection",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-rekognition-collection",
        "scope": "javascript,typescript"
    },
    "rekognition.CfnProject": {
        "body": [
            "new rekognition.CfnProject(this, \"${1:id}\", {",
            "  projectName: \"${2:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: rekognition.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rekognition.CfnProject",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-rekognition-project",
        "scope": "javascript,typescript"
    },
    "rekognition.CfnStreamProcessor": {
        "body": [
            "new rekognition.CfnStreamProcessor(this, \"${1:id}\", {",
            "  boundingBoxRegionsOfInterest: [],",
            "  connectedHomeSettings: {",
            "    labels: [],",
            "    minConfidence: ${4:Number},",
            "  },",
            "  dataSharingPreference: {",
            "    optIn: ${4|false,true|},",
            "  },",
            "  faceSearchSettings: {",
            "    collectionId: \"${5:string}\",",
            "    faceMatchThreshold: ${6:Number},",
            "  },",
            "  kinesisDataStream: {",
            "    arn: \"${6:string}\",",
            "  },",
            "  kinesisVideoStream: {",
            "    arn: \"${7:string}\",",
            "  },",
            "  kmsKeyId: \"${8:string}\",",
            "  name: \"${9:string}\",",
            "  notificationChannel: {",
            "    arn: \"${10:string}\",",
            "  },",
            "  polygonRegionsOfInterest: [],",
            "  roleArn: \"${12:string}\", // Required",
            "  s3Destination: {",
            "    bucketName: \"${13:string}\",",
            "    objectKeyPrefix: \"${14:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rekognition.CfnStreamProcessor",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rekognition.CfnStreamProcessor",
            "Attributes: ",
            "  attrArn",
            "  attrStatus",
            "  attrStatusMessage"
        ],
        "prefix": "l1-rekognition-streamprocessor",
        "scope": "javascript,typescript"
    },
    "resiliencehub.CfnApp": {
        "body": [
            "new resiliencehub.CfnApp(this, \"${1:id}\", {",
            "  appTemplateBody: \"${2:string}\", // Required",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  resiliencyPolicyArn: \"${5:string}\",",
            "  resourceMappings: [], // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: resiliencehub.CfnApp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-resiliencehub.CfnApp",
            "Attributes: ",
            "  attrAppArn"
        ],
        "prefix": "l1-resiliencehub-app",
        "scope": "javascript,typescript"
    },
    "resiliencehub.CfnResiliencyPolicy": {
        "body": [
            "new resiliencehub.CfnResiliencyPolicy(this, \"${1:id}\", {",
            "  dataLocationConstraint: \"${2:string}\",",
            "  policy: {",
            "  },",
            "  policyDescription: \"${4:string}\",",
            "  policyName: \"${5:string}\", // Required",
            "  tags: {",
            "  },",
            "  tier: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: resiliencehub.CfnResiliencyPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-resiliencehub.CfnResiliencyPolicy",
            "Attributes: ",
            "  attrPolicyArn"
        ],
        "prefix": "l1-resiliencehub-resiliencypolicy",
        "scope": "javascript,typescript"
    },
    "resourcegroups.CfnGroup": {
        "body": [
            "new resourcegroups.CfnGroup(this, \"${1:id}\", {",
            "  configuration: [],",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  resourceQuery: {",
            "    type: \"${6:string}\",",
            "  },",
            "  resources: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: resourcegroups.CfnGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-resourcegroups.CfnGroup",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-resourcegroups-group",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnFleet": {
        "body": [
            "new robomaker.CfnFleet(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnFleet",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-robomaker-fleet",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnRobot": {
        "body": [
            "new robomaker.CfnRobot(this, \"${1:id}\", {",
            "  architecture: \"${2:string}\", // Required",
            "  fleet: \"${3:string}\",",
            "  greengrassGroupId: \"${4:string}\", // Required",
            "  name: \"${5:string}\",",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnRobot",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnRobot",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-robomaker-robot",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnRobotApplication": {
        "body": [
            "new robomaker.CfnRobotApplication(this, \"${1:id}\", {",
            "  currentRevisionId: \"${2:string}\",",
            "  environment: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  robotSoftwareSuite: {",
            "    name: \"${5:string}\",",
            "    version: \"${6:string}\",",
            "  },",
            "  sources: [],",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnRobotApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnRobotApplication",
            "Attributes: ",
            "  attrCurrentRevisionId",
            "  attrArn"
        ],
        "prefix": "l1-robomaker-robotapplication",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnRobotApplicationVersion": {
        "body": [
            "new robomaker.CfnRobotApplicationVersion(this, \"${1:id}\", {",
            "  application: \"${2:string}\", // Required",
            "  currentRevisionId: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnRobotApplicationVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnRobotApplicationVersion",
            "Attributes: ",
            "  attrApplicationVersion",
            "  attrArn"
        ],
        "prefix": "l1-robomaker-robotapplicationversion",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnSimulationApplication": {
        "body": [
            "new robomaker.CfnSimulationApplication(this, \"${1:id}\", {",
            "  currentRevisionId: \"${2:string}\",",
            "  environment: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  renderingEngine: {",
            "    name: \"${5:string}\",",
            "    version: \"${6:string}\",",
            "  },",
            "  robotSoftwareSuite: {",
            "    name: \"${6:string}\",",
            "    version: \"${7:string}\",",
            "  },",
            "  simulationSoftwareSuite: {",
            "    name: \"${7:string}\",",
            "    version: \"${8:string}\",",
            "  },",
            "  sources: [],",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnSimulationApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnSimulationApplication",
            "Attributes: ",
            "  attrArn",
            "  attrCurrentRevisionId"
        ],
        "prefix": "l1-robomaker-simulationapplication",
        "scope": "javascript,typescript"
    },
    "robomaker.CfnSimulationApplicationVersion": {
        "body": [
            "new robomaker.CfnSimulationApplicationVersion(this, \"${1:id}\", {",
            "  application: \"${2:string}\", // Required",
            "  currentRevisionId: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: robomaker.CfnSimulationApplicationVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-robomaker.CfnSimulationApplicationVersion",
            "Attributes: ",
            "  attrApplicationVersion",
            "  attrArn"
        ],
        "prefix": "l1-robomaker-simulationapplicationversion",
        "scope": "javascript,typescript"
    },
    "route53.CfnDNSSEC": {
        "body": [
            "new route53.CfnDNSSEC(this, \"${1:id}\", {",
            "  hostedZoneId: \"${2:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53.CfnDNSSEC",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnDNSSEC"
        ],
        "prefix": "l1-route53-dnssec",
        "scope": "javascript,typescript"
    },
    "route53.CfnHealthCheck": {
        "body": [
            "new route53.CfnHealthCheck(this, \"${1:id}\", {",
            "  healthCheckConfig: ${2:JSON}, // Required",
            "  healthCheckTags: [],",
            "})"
        ],
        "description": [
            "Construct: route53.CfnHealthCheck",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnHealthCheck",
            "Attributes: ",
            "  attrHealthCheckId"
        ],
        "prefix": "l1-route53-healthcheck",
        "scope": "javascript,typescript"
    },
    "route53.CfnHostedZone": {
        "body": [
            "new route53.CfnHostedZone(this, \"${1:id}\", {",
            "  hostedZoneConfig: {",
            "    comment: \"${2:string}\",",
            "  },",
            "  hostedZoneTags: [],",
            "  name: \"${4:string}\",",
            "  queryLoggingConfig: {",
            "    cloudWatchLogsLogGroupArn: \"${5:string}\",",
            "  },",
            "  vPCs: [],",
            "})"
        ],
        "description": [
            "Construct: route53.CfnHostedZone",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnHostedZone",
            "Attributes: ",
            "  attrId",
            "  attrNameServers"
        ],
        "prefix": "l1-route53-hostedzone",
        "scope": "javascript,typescript"
    },
    "route53.CfnKeySigningKey": {
        "body": [
            "new route53.CfnKeySigningKey(this, \"${1:id}\", {",
            "  hostedZoneId: \"${2:string}\", // Required",
            "  keyManagementServiceArn: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  status: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53.CfnKeySigningKey",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnKeySigningKey"
        ],
        "prefix": "l1-route53-keysigningkey",
        "scope": "javascript,typescript"
    },
    "route53.CfnRecordSet": {
        "body": [
            "new route53.CfnRecordSet(this, \"${1:id}\", {",
            "  aliasTarget: {",
            "    dNSName: \"${2:string}\",",
            "    evaluateTargetHealth: ${3|false,true|},",
            "    hostedZoneId: \"${4:string}\",",
            "  },",
            "  comment: \"${3:string}\",",
            "  failover: \"${4:string}\",",
            "  geoLocation: {",
            "    continentCode: \"${5:string}\",",
            "    countryCode: \"${6:string}\",",
            "    subdivisionCode: \"${7:string}\",",
            "  },",
            "  healthCheckId: \"${6:string}\",",
            "  hostedZoneId: \"${7:string}\",",
            "  hostedZoneName: \"${8:string}\",",
            "  multiValueAnswer: ${9|false,true|},",
            "  name: \"${10:string}\", // Required",
            "  region: \"${11:string}\",",
            "  resourceRecords: [],",
            "  setIdentifier: \"${13:string}\",",
            "  tTL: \"${14:string}\",",
            "  type: \"${15:string}\", // Required",
            "  weight: ${16:Number},",
            "})"
        ],
        "description": [
            "Construct: route53.CfnRecordSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnRecordSet"
        ],
        "prefix": "l1-route53-recordset",
        "scope": "javascript,typescript"
    },
    "route53.CfnRecordSetGroup": {
        "body": [
            "new route53.CfnRecordSetGroup(this, \"${1:id}\", {",
            "  comment: \"${2:string}\",",
            "  hostedZoneId: \"${3:string}\",",
            "  hostedZoneName: \"${4:string}\",",
            "  recordSets: [],",
            "})"
        ],
        "description": [
            "Construct: route53.CfnRecordSetGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53.CfnRecordSetGroup"
        ],
        "prefix": "l1-route53-recordsetgroup",
        "scope": "javascript,typescript"
    },
    "route53recoverycontrol.CfnCluster": {
        "body": [
            "new route53recoverycontrol.CfnCluster(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoverycontrol.CfnCluster",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoverycontrol.CfnCluster",
            "Attributes: ",
            "  attrClusterArn",
            "  attrStatus",
            "  attrClusterEndpoints"
        ],
        "prefix": "l1-route53recoverycontrol-cluster",
        "scope": "javascript,typescript"
    },
    "route53recoverycontrol.CfnControlPanel": {
        "body": [
            "new route53recoverycontrol.CfnControlPanel(this, \"${1:id}\", {",
            "  clusterArn: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoverycontrol.CfnControlPanel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoverycontrol.CfnControlPanel",
            "Attributes: ",
            "  attrControlPanelArn",
            "  attrStatus",
            "  attrDefaultControlPanel",
            "  attrRoutingControlCount"
        ],
        "prefix": "l1-route53recoverycontrol-controlpanel",
        "scope": "javascript,typescript"
    },
    "route53recoverycontrol.CfnRoutingControl": {
        "body": [
            "new route53recoverycontrol.CfnRoutingControl(this, \"${1:id}\", {",
            "  clusterArn: \"${2:string}\",",
            "  controlPanelArn: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53recoverycontrol.CfnRoutingControl",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoverycontrol.CfnRoutingControl",
            "Attributes: ",
            "  attrRoutingControlArn",
            "  attrStatus"
        ],
        "prefix": "l1-route53recoverycontrol-routingcontrol",
        "scope": "javascript,typescript"
    },
    "route53recoverycontrol.CfnSafetyRule": {
        "body": [
            "new route53recoverycontrol.CfnSafetyRule(this, \"${1:id}\", {",
            "  assertionRule: {",
            "    assertedControls: [],",
            "    waitPeriodMs: ${3:Number},",
            "  },",
            "  controlPanelArn: \"${3:string}\", // Required",
            "  gatingRule: {",
            "    gatingControls: [],",
            "    targetControls: [],",
            "    waitPeriodMs: ${6:Number},",
            "  },",
            "  name: \"${5:string}\", // Required",
            "  ruleConfig: {",
            "    inverted: ${6|false,true|},",
            "    threshold: ${7:Number},",
            "    type: \"${8:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoverycontrol.CfnSafetyRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoverycontrol.CfnSafetyRule",
            "Attributes: ",
            "  attrSafetyRuleArn",
            "  attrStatus"
        ],
        "prefix": "l1-route53recoverycontrol-safetyrule",
        "scope": "javascript,typescript"
    },
    "route53recoveryreadiness.CfnCell": {
        "body": [
            "new route53recoveryreadiness.CfnCell(this, \"${1:id}\", {",
            "  cellName: \"${2:string}\", // Required",
            "  cells: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoveryreadiness.CfnCell",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoveryreadiness.CfnCell",
            "Attributes: ",
            "  attrCellArn",
            "  attrParentReadinessScopes"
        ],
        "prefix": "l1-route53recoveryreadiness-cell",
        "scope": "javascript,typescript"
    },
    "route53recoveryreadiness.CfnReadinessCheck": {
        "body": [
            "new route53recoveryreadiness.CfnReadinessCheck(this, \"${1:id}\", {",
            "  readinessCheckName: \"${2:string}\", // Required",
            "  resourceSetName: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoveryreadiness.CfnReadinessCheck",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoveryreadiness.CfnReadinessCheck",
            "Attributes: ",
            "  attrReadinessCheckArn"
        ],
        "prefix": "l1-route53recoveryreadiness-readinesscheck",
        "scope": "javascript,typescript"
    },
    "route53recoveryreadiness.CfnRecoveryGroup": {
        "body": [
            "new route53recoveryreadiness.CfnRecoveryGroup(this, \"${1:id}\", {",
            "  cells: [],",
            "  recoveryGroupName: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoveryreadiness.CfnRecoveryGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoveryreadiness.CfnRecoveryGroup",
            "Attributes: ",
            "  attrRecoveryGroupArn"
        ],
        "prefix": "l1-route53recoveryreadiness-recoverygroup",
        "scope": "javascript,typescript"
    },
    "route53recoveryreadiness.CfnResourceSet": {
        "body": [
            "new route53recoveryreadiness.CfnResourceSet(this, \"${1:id}\", {",
            "  resourceSetName: \"${2:string}\", // Required",
            "  resourceSetType: \"${3:string}\", // Required",
            "  resources: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53recoveryreadiness.CfnResourceSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53recoveryreadiness.CfnResourceSet",
            "Attributes: ",
            "  attrResourceSetArn"
        ],
        "prefix": "l1-route53recoveryreadiness-resourceset",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnFirewallDomainList": {
        "body": [
            "new route53resolver.CfnFirewallDomainList(this, \"${1:id}\", {",
            "  domainFileUrl: \"${2:string}\",",
            "  domains: [],",
            "  name: \"${4:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnFirewallDomainList",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnFirewallDomainList",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrDomainCount",
            "  attrStatus",
            "  attrStatusMessage",
            "  attrManagedOwnerName",
            "  attrCreatorRequestId",
            "  attrCreationTime",
            "  attrModificationTime"
        ],
        "prefix": "l1-route53resolver-firewalldomainlist",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnFirewallRuleGroup": {
        "body": [
            "new route53resolver.CfnFirewallRuleGroup(this, \"${1:id}\", {",
            "  firewallRules: [],",
            "  name: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnFirewallRuleGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnFirewallRuleGroup",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrRuleCount",
            "  attrStatus",
            "  attrStatusMessage",
            "  attrOwnerId",
            "  attrShareStatus",
            "  attrCreatorRequestId",
            "  attrCreationTime",
            "  attrModificationTime"
        ],
        "prefix": "l1-route53resolver-firewallrulegroup",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnFirewallRuleGroupAssociation": {
        "body": [
            "new route53resolver.CfnFirewallRuleGroupAssociation(this, \"${1:id}\", {",
            "  firewallRuleGroupId: \"${2:string}\", // Required",
            "  mutationProtection: \"${3:string}\",",
            "  name: \"${4:string}\",",
            "  priority: ${5:Number}, // Required",
            "  tags: [],",
            "  vpcId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnFirewallRuleGroupAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnFirewallRuleGroupAssociation",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrManagedOwnerName",
            "  attrStatus",
            "  attrStatusMessage",
            "  attrCreatorRequestId",
            "  attrCreationTime",
            "  attrModificationTime"
        ],
        "prefix": "l1-route53resolver-firewallrulegroupassociation",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverConfig": {
        "body": [
            "new route53resolver.CfnResolverConfig(this, \"${1:id}\", {",
            "  autodefinedReverseFlag: \"${2:string}\", // Required",
            "  resourceId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverConfig",
            "Attributes: ",
            "  attrId",
            "  attrOwnerId",
            "  attrAutodefinedReverse"
        ],
        "prefix": "l1-route53resolver-resolverconfig",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverDNSSECConfig": {
        "body": [
            "new route53resolver.CfnResolverDNSSECConfig(this, \"${1:id}\", {",
            "  resourceId: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverDNSSECConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverDNSSECConfig",
            "Attributes: ",
            "  attrId",
            "  attrOwnerId",
            "  attrValidationStatus"
        ],
        "prefix": "l1-route53resolver-resolverdnssecconfig",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverEndpoint": {
        "body": [
            "new route53resolver.CfnResolverEndpoint(this, \"${1:id}\", {",
            "  direction: \"${2:string}\", // Required",
            "  ipAddresses: [], // Required",
            "  name: \"${4:string}\",",
            "  securityGroupIds: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverEndpoint",
            "Attributes: ",
            "  attrResolverEndpointId",
            "  attrIpAddressCount",
            "  attrArn",
            "  attrDirection",
            "  attrHostVPCId",
            "  attrName"
        ],
        "prefix": "l1-route53resolver-resolverendpoint",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverQueryLoggingConfig": {
        "body": [
            "new route53resolver.CfnResolverQueryLoggingConfig(this, \"${1:id}\", {",
            "  destinationArn: \"${2:string}\",",
            "  name: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverQueryLoggingConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverQueryLoggingConfig",
            "Attributes: ",
            "  attrId",
            "  attrOwnerId",
            "  attrStatus",
            "  attrShareStatus",
            "  attrAssociationCount",
            "  attrArn",
            "  attrCreatorRequestId",
            "  attrCreationTime"
        ],
        "prefix": "l1-route53resolver-resolverqueryloggingconfig",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverQueryLoggingConfigAssociation": {
        "body": [
            "new route53resolver.CfnResolverQueryLoggingConfigAssociation(this, \"${1:id}\", {",
            "  resolverQueryLogConfigId: \"${2:string}\",",
            "  resourceId: \"${3:string}\",",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverQueryLoggingConfigAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverQueryLoggingConfigAssociation",
            "Attributes: ",
            "  attrId",
            "  attrStatus",
            "  attrError",
            "  attrErrorMessage",
            "  attrCreationTime"
        ],
        "prefix": "l1-route53resolver-resolverqueryloggingconfigassociation",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverRule": {
        "body": [
            "new route53resolver.CfnResolverRule(this, \"${1:id}\", {",
            "  domainName: \"${2:string}\", // Required",
            "  name: \"${3:string}\",",
            "  resolverEndpointId: \"${4:string}\",",
            "  ruleType: \"${5:string}\", // Required",
            "  tags: [],",
            "  targetIps: [],",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverRule",
            "Attributes: ",
            "  attrResolverEndpointId",
            "  attrDomainName",
            "  attrName",
            "  attrTargetIps",
            "  attrArn",
            "  attrResolverRuleId"
        ],
        "prefix": "l1-route53resolver-resolverrule",
        "scope": "javascript,typescript"
    },
    "route53resolver.CfnResolverRuleAssociation": {
        "body": [
            "new route53resolver.CfnResolverRuleAssociation(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  resolverRuleId: \"${3:string}\", // Required",
            "  vPCId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: route53resolver.CfnResolverRuleAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-route53resolver.CfnResolverRuleAssociation",
            "Attributes: ",
            "  attrVPCId",
            "  attrResolverRuleId",
            "  attrResolverRuleAssociationId",
            "  attrName"
        ],
        "prefix": "l1-route53resolver-resolverruleassociation",
        "scope": "javascript,typescript"
    },
    "rum.CfnAppMonitor": {
        "body": [
            "new rum.CfnAppMonitor(this, \"${1:id}\", {",
            "  appMonitorConfiguration: {",
            "    allowCookies: ${2|false,true|},",
            "    enableXRay: ${3|false,true|},",
            "    excludedPages: [],",
            "    favoritePages: [],",
            "    guestRoleArn: \"${6:string}\",",
            "    identityPoolId: \"${7:string}\",",
            "    includedPages: [],",
            "    sessionSampleRate: ${9:Number},",
            "    telemetries: [],",
            "  },",
            "  cwLogEnabled: ${3|false,true|},",
            "  domain: \"${4:string}\", // Required",
            "  name: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: rum.CfnAppMonitor",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-rum.CfnAppMonitor"
        ],
        "prefix": "l1-rum-appmonitor",
        "scope": "javascript,typescript"
    },
    "s3.CfnAccessPoint": {
        "body": [
            "new s3.CfnAccessPoint(this, \"${1:id}\", {",
            "  bucket: \"${2:string}\", // Required",
            "  name: \"${3:string}\",",
            "  policy: ${4:JSON},",
            "  policyStatus: ${5:JSON},",
            "  publicAccessBlockConfiguration: {",
            "    blockPublicAcls: ${6|false,true|},",
            "    blockPublicPolicy: ${7|false,true|},",
            "    ignorePublicAcls: ${8|false,true|},",
            "    restrictPublicBuckets: ${9|false,true|},",
            "  },",
            "  vpcConfiguration: {",
            "    vpcId: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: s3.CfnAccessPoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnAccessPoint",
            "Attributes: ",
            "  attrName",
            "  attrAlias",
            "  attrNetworkOrigin",
            "  attrArn"
        ],
        "prefix": "l1-s3-accesspoint",
        "scope": "javascript,typescript"
    },
    "s3.CfnBucket": {
        "body": [
            "new s3.CfnBucket(this, \"${1:id}\", {",
            "  accelerateConfiguration: {",
            "    accelerationStatus: \"${2:string}\",",
            "  },",
            "  accessControl: \"${3:string}\",",
            "  analyticsConfigurations: [],",
            "  bucketEncryption: {",
            "    serverSideEncryptionConfiguration: [],",
            "  },",
            "  bucketName: \"${6:string}\",",
            "  corsConfiguration: {",
            "    corsRules: [],",
            "  },",
            "  intelligentTieringConfigurations: [],",
            "  inventoryConfigurations: [],",
            "  lifecycleConfiguration: {",
            "    rules: [],",
            "  },",
            "  loggingConfiguration: {",
            "    destinationBucketName: \"${11:string}\",",
            "    logFilePrefix: \"${12:string}\",",
            "  },",
            "  metricsConfigurations: [],",
            "  notificationConfiguration: {",
            "    lambdaConfigurations: [],",
            "    queueConfigurations: [],",
            "    topicConfigurations: [],",
            "  },",
            "  objectLockConfiguration: {",
            "    objectLockEnabled: \"${14:string}\",",
            "  },",
            "  objectLockEnabled: ${15|false,true|},",
            "  ownershipControls: {",
            "    rules: [],",
            "  },",
            "  publicAccessBlockConfiguration: {",
            "    blockPublicAcls: ${17|false,true|},",
            "    blockPublicPolicy: ${18|false,true|},",
            "    ignorePublicAcls: ${19|false,true|},",
            "    restrictPublicBuckets: ${20|false,true|},",
            "  },",
            "  replicationConfiguration: {",
            "    role: \"${18:string}\",",
            "    rules: [],",
            "  },",
            "  tags: [],",
            "  versioningConfiguration: {",
            "    status: \"${20:string}\",",
            "  },",
            "  websiteConfiguration: {",
            "    errorDocument: \"${21:string}\",",
            "    indexDocument: \"${22:string}\",",
            "    routingRules: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: s3.CfnBucket",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnBucket",
            "Attributes: ",
            "  attrArn",
            "  attrDomainName",
            "  attrDualStackDomainName",
            "  attrRegionalDomainName",
            "  attrWebsiteURL"
        ],
        "prefix": "l1-s3-bucket",
        "scope": "javascript,typescript"
    },
    "s3.CfnBucketPolicy": {
        "body": [
            "new s3.CfnBucketPolicy(this, \"${1:id}\", {",
            "  bucket: \"${2:string}\", // Required",
            "  policyDocument: ${3:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: s3.CfnBucketPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnBucketPolicy"
        ],
        "prefix": "l1-s3-bucketpolicy",
        "scope": "javascript,typescript"
    },
    "s3.CfnMultiRegionAccessPoint": {
        "body": [
            "new s3.CfnMultiRegionAccessPoint(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  publicAccessBlockConfiguration: {",
            "    blockPublicAcls: ${3|false,true|},",
            "    blockPublicPolicy: ${4|false,true|},",
            "    ignorePublicAcls: ${5|false,true|},",
            "    restrictPublicBuckets: ${6|false,true|},",
            "  },",
            "  regions: [], // Required",
            "})"
        ],
        "description": [
            "Construct: s3.CfnMultiRegionAccessPoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnMultiRegionAccessPoint",
            "Attributes: ",
            "  attrAlias",
            "  attrCreatedAt"
        ],
        "prefix": "l1-s3-multiregionaccesspoint",
        "scope": "javascript,typescript"
    },
    "s3.CfnMultiRegionAccessPointPolicy": {
        "body": [
            "new s3.CfnMultiRegionAccessPointPolicy(this, \"${1:id}\", {",
            "  mrapName: \"${2:string}\", // Required",
            "  policy: ${3:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: s3.CfnMultiRegionAccessPointPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnMultiRegionAccessPointPolicy"
        ],
        "prefix": "l1-s3-multiregionaccesspointpolicy",
        "scope": "javascript,typescript"
    },
    "s3.CfnStorageLens": {
        "body": [
            "new s3.CfnStorageLens(this, \"${1:id}\", {",
            "  storageLensConfiguration: {",
            "    id: \"${6:string}\",",
            "    isEnabled: ${8|false,true|},",
            "    storageLensArn: \"${9:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: s3.CfnStorageLens",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3.CfnStorageLens",
            "Attributes: ",
            "  attrStorageLensConfiguration.StorageLensArn"
        ],
        "prefix": "l1-s3-storagelens",
        "scope": "javascript,typescript"
    },
    "s3objectlambda.CfnAccessPoint": {
        "body": [
            "new s3objectlambda.CfnAccessPoint(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "  objectLambdaConfiguration: {",
            "    allowedFeatures: [],",
            "    cloudWatchMetricsEnabled: ${4|false,true|},",
            "    supportingAccessPoint: \"${5:string}\",",
            "    transformationConfigurations: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: s3objectlambda.CfnAccessPoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3objectlambda.CfnAccessPoint",
            "Attributes: ",
            "  attrArn",
            "  attrCreationDate"
        ],
        "prefix": "l1-s3objectlambda-accesspoint",
        "scope": "javascript,typescript"
    },
    "s3objectlambda.CfnAccessPointPolicy": {
        "body": [
            "new s3objectlambda.CfnAccessPointPolicy(this, \"${1:id}\", {",
            "  objectLambdaAccessPoint: \"${2:string}\", // Required",
            "  policyDocument: ${3:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: s3objectlambda.CfnAccessPointPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3objectlambda.CfnAccessPointPolicy"
        ],
        "prefix": "l1-s3objectlambda-accesspointpolicy",
        "scope": "javascript,typescript"
    },
    "s3outposts.CfnAccessPoint": {
        "body": [
            "new s3outposts.CfnAccessPoint(this, \"${1:id}\", {",
            "  bucket: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  policy: ${4:JSON},",
            "  vpcConfiguration: {",
            "    vpcId: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: s3outposts.CfnAccessPoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3outposts.CfnAccessPoint",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-s3outposts-accesspoint",
        "scope": "javascript,typescript"
    },
    "s3outposts.CfnBucket": {
        "body": [
            "new s3outposts.CfnBucket(this, \"${1:id}\", {",
            "  bucketName: \"${2:string}\", // Required",
            "  lifecycleConfiguration: {",
            "    rules: [],",
            "  },",
            "  outpostId: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: s3outposts.CfnBucket",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3outposts.CfnBucket",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-s3outposts-bucket",
        "scope": "javascript,typescript"
    },
    "s3outposts.CfnBucketPolicy": {
        "body": [
            "new s3outposts.CfnBucketPolicy(this, \"${1:id}\", {",
            "  bucket: \"${2:string}\", // Required",
            "  policyDocument: ${3:JSON}, // Required",
            "})"
        ],
        "description": [
            "Construct: s3outposts.CfnBucketPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3outposts.CfnBucketPolicy"
        ],
        "prefix": "l1-s3outposts-bucketpolicy",
        "scope": "javascript,typescript"
    },
    "s3outposts.CfnEndpoint": {
        "body": [
            "new s3outposts.CfnEndpoint(this, \"${1:id}\", {",
            "  accessType: \"${2:string}\",",
            "  customerOwnedIpv4Pool: \"${3:string}\",",
            "  outpostId: \"${4:string}\", // Required",
            "  securityGroupId: \"${5:string}\", // Required",
            "  subnetId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: s3outposts.CfnEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-s3outposts.CfnEndpoint",
            "Attributes: ",
            "  attrArn",
            "  attrCidrBlock",
            "  attrCreationTime",
            "  attrId",
            "  attrNetworkInterfaces",
            "  attrStatus"
        ],
        "prefix": "l1-s3outposts-endpoint",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnApp": {
        "body": [
            "new sagemaker.CfnApp(this, \"${1:id}\", {",
            "  appName: \"${2:string}\", // Required",
            "  appType: \"${3:string}\", // Required",
            "  domainId: \"${4:string}\", // Required",
            "  resourceSpec: {",
            "    instanceType: \"${5:string}\",",
            "    sageMakerImageArn: \"${6:string}\",",
            "    sageMakerImageVersionArn: \"${7:string}\",",
            "  },",
            "  tags: [],",
            "  userProfileName: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnApp",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnApp",
            "Attributes: ",
            "  attrAppArn"
        ],
        "prefix": "l1-sagemaker-app",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnAppImageConfig": {
        "body": [
            "new sagemaker.CfnAppImageConfig(this, \"${1:id}\", {",
            "  appImageConfigName: \"${2:string}\", // Required",
            "  kernelGatewayImageConfig: {",
            "    kernelSpecs: [],",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnAppImageConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnAppImageConfig",
            "Attributes: ",
            "  attrAppImageConfigArn"
        ],
        "prefix": "l1-sagemaker-appimageconfig",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnCodeRepository": {
        "body": [
            "new sagemaker.CfnCodeRepository(this, \"${1:id}\", {",
            "  codeRepositoryName: \"${2:string}\",",
            "  gitConfig: {",
            "    branch: \"${3:string}\",",
            "    repositoryUrl: \"${4:string}\",",
            "    secretArn: \"${5:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnCodeRepository",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnCodeRepository",
            "Attributes: ",
            "  attrCodeRepositoryName"
        ],
        "prefix": "l1-sagemaker-coderepository",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnDataQualityJobDefinition": {
        "body": [
            "new sagemaker.CfnDataQualityJobDefinition(this, \"${1:id}\", {",
            "  dataQualityAppSpecification: {",
            "    containerArguments: [],",
            "    containerEntrypoint: [],",
            "    imageUri: \"${5:string}\",",
            "    postAnalyticsProcessorSourceUri: \"${6:string}\",",
            "    recordPreprocessorSourceUri: \"${7:string}\",",
            "  },",
            "  dataQualityBaselineConfig: {",
            "    baseliningJobName: \"${3:string}\",",
            "  },",
            "  dataQualityJobInput: {",
            "  },",
            "  dataQualityJobOutputConfig: {",
            "    kmsKeyId: \"${5:string}\",",
            "    monitoringOutputs: [],",
            "  },",
            "  jobDefinitionName: \"${6:string}\",",
            "  jobResources: {",
            "  },",
            "  networkConfig: {",
            "    enableInterContainerTrafficEncryption: ${8|false,true|},",
            "    enableNetworkIsolation: ${9|false,true|},",
            "  },",
            "  roleArn: \"${9:string}\", // Required",
            "  stoppingCondition: {",
            "    maxRuntimeInSeconds: ${10:Number},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnDataQualityJobDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnDataQualityJobDefinition",
            "Attributes: ",
            "  attrJobDefinitionArn",
            "  attrCreationTime"
        ],
        "prefix": "l1-sagemaker-dataqualityjobdefinition",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnDevice": {
        "body": [
            "new sagemaker.CfnDevice(this, \"${1:id}\", {",
            "  device: {",
            "    description: \"${2:string}\",",
            "    deviceName: \"${3:string}\",",
            "    iotThingName: \"${4:string}\",",
            "  },",
            "  deviceFleetName: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnDevice",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnDevice"
        ],
        "prefix": "l1-sagemaker-device",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnDeviceFleet": {
        "body": [
            "new sagemaker.CfnDeviceFleet(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  deviceFleetName: \"${3:string}\", // Required",
            "  outputConfig: {",
            "    kmsKeyId: \"${4:string}\",",
            "    s3OutputLocation: \"${5:string}\",",
            "  },",
            "  roleArn: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnDeviceFleet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnDeviceFleet"
        ],
        "prefix": "l1-sagemaker-devicefleet",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnDomain": {
        "body": [
            "new sagemaker.CfnDomain(this, \"${1:id}\", {",
            "  appNetworkAccessType: \"${2:string}\",",
            "  appSecurityGroupManagement: \"${3:string}\",",
            "  authMode: \"${4:string}\", // Required",
            "  defaultUserSettings: {",
            "    executionRole: \"${5:string}\",",
            "    securityGroups: [],",
            "  },",
            "  domainName: \"${6:string}\", // Required",
            "  domainSettings: {",
            "    securityGroupIds: [],",
            "  },",
            "  kmsKeyId: \"${8:string}\",",
            "  subnetIds: [], // Required",
            "  tags: [],",
            "  vpcId: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnDomain",
            "Attributes: ",
            "  attrDomainArn",
            "  attrUrl",
            "  attrDomainId",
            "  attrHomeEfsFileSystemId",
            "  attrSingleSignOnManagedApplicationInstanceId",
            "  attrSecurityGroupIdForDomainBoundary"
        ],
        "prefix": "l1-sagemaker-domain",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnEndpoint": {
        "body": [
            "new sagemaker.CfnEndpoint(this, \"${1:id}\", {",
            "  deploymentConfig: {",
            "  },",
            "  endpointConfigName: \"${3:string}\", // Required",
            "  endpointName: \"${4:string}\",",
            "  excludeRetainedVariantProperties: [],",
            "  retainAllVariantProperties: ${6|false,true|},",
            "  retainDeploymentConfig: ${7|false,true|},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnEndpoint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnEndpoint",
            "Attributes: ",
            "  attrEndpointName"
        ],
        "prefix": "l1-sagemaker-endpoint",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnEndpointConfig": {
        "body": [
            "new sagemaker.CfnEndpointConfig(this, \"${1:id}\", {",
            "  asyncInferenceConfig: {",
            "  },",
            "  dataCaptureConfig: {",
            "    captureOptions: [],",
            "    destinationS3Uri: \"${5:string}\",",
            "    enableCapture: ${6|false,true|},",
            "    initialSamplingPercentage: ${7:Number},",
            "    kmsKeyId: \"${8:string}\",",
            "  },",
            "  endpointConfigName: \"${4:string}\",",
            "  kmsKeyId: \"${5:string}\",",
            "  productionVariants: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnEndpointConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnEndpointConfig",
            "Attributes: ",
            "  attrEndpointConfigName"
        ],
        "prefix": "l1-sagemaker-endpointconfig",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnFeatureGroup": {
        "body": [
            "new sagemaker.CfnFeatureGroup(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  eventTimeFeatureName: \"${3:string}\", // Required",
            "  featureDefinitions: [], // Required",
            "  featureGroupName: \"${5:string}\", // Required",
            "  offlineStoreConfig: ${6:JSON},",
            "  onlineStoreConfig: ${7:JSON},",
            "  recordIdentifierFeatureName: \"${8:string}\", // Required",
            "  roleArn: \"${9:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnFeatureGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnFeatureGroup"
        ],
        "prefix": "l1-sagemaker-featuregroup",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnImage": {
        "body": [
            "new sagemaker.CfnImage(this, \"${1:id}\", {",
            "  imageDescription: \"${2:string}\",",
            "  imageDisplayName: \"${3:string}\",",
            "  imageName: \"${4:string}\", // Required",
            "  imageRoleArn: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnImage",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnImage",
            "Attributes: ",
            "  attrImageArn"
        ],
        "prefix": "l1-sagemaker-image",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnImageVersion": {
        "body": [
            "new sagemaker.CfnImageVersion(this, \"${1:id}\", {",
            "  baseImage: \"${2:string}\", // Required",
            "  imageName: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnImageVersion",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnImageVersion",
            "Attributes: ",
            "  attrImageArn",
            "  attrImageVersionArn",
            "  attrContainerImage",
            "  attrVersion"
        ],
        "prefix": "l1-sagemaker-imageversion",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnModel": {
        "body": [
            "new sagemaker.CfnModel(this, \"${1:id}\", {",
            "  containers: [],",
            "  enableNetworkIsolation: ${3|false,true|},",
            "  executionRoleArn: \"${4:string}\", // Required",
            "  inferenceExecutionConfig: {",
            "    mode: \"${5:string}\",",
            "  },",
            "  modelName: \"${6:string}\",",
            "  primaryContainer: {",
            "    containerHostname: \"${7:string}\",",
            "    environment: ${8:JSON},",
            "    image: \"${9:string}\",",
            "    inferenceSpecificationName: \"${11:string}\",",
            "    mode: \"${12:string}\",",
            "    modelDataUrl: \"${13:string}\",",
            "    modelPackageName: \"${14:string}\",",
            "  },",
            "  tags: [],",
            "  vpcConfig: {",
            "    securityGroupIds: [],",
            "    subnets: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnModel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnModel",
            "Attributes: ",
            "  attrModelName"
        ],
        "prefix": "l1-sagemaker-model",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnModelBiasJobDefinition": {
        "body": [
            "new sagemaker.CfnModelBiasJobDefinition(this, \"${1:id}\", {",
            "  jobDefinitionName: \"${2:string}\",",
            "  jobResources: {",
            "  },",
            "  modelBiasAppSpecification: {",
            "    configUri: \"${4:string}\",",
            "    imageUri: \"${6:string}\",",
            "  },",
            "  modelBiasBaselineConfig: {",
            "    baseliningJobName: \"${5:string}\",",
            "  },",
            "  modelBiasJobInput: {",
            "  },",
            "  modelBiasJobOutputConfig: {",
            "    kmsKeyId: \"${7:string}\",",
            "    monitoringOutputs: [],",
            "  },",
            "  networkConfig: {",
            "    enableInterContainerTrafficEncryption: ${8|false,true|},",
            "    enableNetworkIsolation: ${9|false,true|},",
            "  },",
            "  roleArn: \"${9:string}\", // Required",
            "  stoppingCondition: {",
            "    maxRuntimeInSeconds: ${10:Number},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnModelBiasJobDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnModelBiasJobDefinition",
            "Attributes: ",
            "  attrJobDefinitionArn",
            "  attrCreationTime"
        ],
        "prefix": "l1-sagemaker-modelbiasjobdefinition",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnModelExplainabilityJobDefinition": {
        "body": [
            "new sagemaker.CfnModelExplainabilityJobDefinition(this, \"${1:id}\", {",
            "  jobDefinitionName: \"${2:string}\",",
            "  jobResources: {",
            "  },",
            "  modelExplainabilityAppSpecification: {",
            "    configUri: \"${4:string}\",",
            "    imageUri: \"${6:string}\",",
            "  },",
            "  modelExplainabilityBaselineConfig: {",
            "    baseliningJobName: \"${5:string}\",",
            "  },",
            "  modelExplainabilityJobInput: {",
            "  },",
            "  modelExplainabilityJobOutputConfig: {",
            "    kmsKeyId: \"${7:string}\",",
            "    monitoringOutputs: [],",
            "  },",
            "  networkConfig: {",
            "    enableInterContainerTrafficEncryption: ${8|false,true|},",
            "    enableNetworkIsolation: ${9|false,true|},",
            "  },",
            "  roleArn: \"${9:string}\", // Required",
            "  stoppingCondition: {",
            "    maxRuntimeInSeconds: ${10:Number},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnModelExplainabilityJobDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnModelExplainabilityJobDefinition",
            "Attributes: ",
            "  attrJobDefinitionArn",
            "  attrCreationTime"
        ],
        "prefix": "l1-sagemaker-modelexplainabilityjobdefinition",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnModelPackageGroup": {
        "body": [
            "new sagemaker.CfnModelPackageGroup(this, \"${1:id}\", {",
            "  modelPackageGroupDescription: \"${2:string}\",",
            "  modelPackageGroupName: \"${3:string}\", // Required",
            "  modelPackageGroupPolicy: ${4:JSON},",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnModelPackageGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnModelPackageGroup",
            "Attributes: ",
            "  attrModelPackageGroupArn",
            "  attrCreationTime",
            "  attrModelPackageGroupStatus"
        ],
        "prefix": "l1-sagemaker-modelpackagegroup",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnModelQualityJobDefinition": {
        "body": [
            "new sagemaker.CfnModelQualityJobDefinition(this, \"${1:id}\", {",
            "  jobDefinitionName: \"${2:string}\",",
            "  jobResources: {",
            "  },",
            "  modelQualityAppSpecification: {",
            "    containerArguments: [],",
            "    containerEntrypoint: [],",
            "    imageUri: \"${7:string}\",",
            "    postAnalyticsProcessorSourceUri: \"${8:string}\",",
            "    problemType: \"${9:string}\",",
            "    recordPreprocessorSourceUri: \"${10:string}\",",
            "  },",
            "  modelQualityBaselineConfig: {",
            "    baseliningJobName: \"${5:string}\",",
            "  },",
            "  modelQualityJobInput: {",
            "  },",
            "  modelQualityJobOutputConfig: {",
            "    kmsKeyId: \"${7:string}\",",
            "    monitoringOutputs: [],",
            "  },",
            "  networkConfig: {",
            "    enableInterContainerTrafficEncryption: ${8|false,true|},",
            "    enableNetworkIsolation: ${9|false,true|},",
            "  },",
            "  roleArn: \"${9:string}\", // Required",
            "  stoppingCondition: {",
            "    maxRuntimeInSeconds: ${10:Number},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnModelQualityJobDefinition",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnModelQualityJobDefinition",
            "Attributes: ",
            "  attrJobDefinitionArn",
            "  attrCreationTime"
        ],
        "prefix": "l1-sagemaker-modelqualityjobdefinition",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnMonitoringSchedule": {
        "body": [
            "new sagemaker.CfnMonitoringSchedule(this, \"${1:id}\", {",
            "  endpointName: \"${2:string}\",",
            "  failureReason: \"${3:string}\",",
            "  lastMonitoringExecutionSummary: {",
            "    creationTime: \"${4:string}\",",
            "    endpointName: \"${5:string}\",",
            "    failureReason: \"${6:string}\",",
            "    lastModifiedTime: \"${7:string}\",",
            "    monitoringExecutionStatus: \"${8:string}\",",
            "    monitoringScheduleName: \"${9:string}\",",
            "    processingJobArn: \"${10:string}\",",
            "    scheduledTime: \"${11:string}\",",
            "  },",
            "  monitoringScheduleConfig: {",
            "    monitoringJobDefinitionName: \"${6:string}\",",
            "    monitoringType: \"${7:string}\",",
            "  },",
            "  monitoringScheduleName: \"${6:string}\", // Required",
            "  monitoringScheduleStatus: \"${7:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnMonitoringSchedule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnMonitoringSchedule",
            "Attributes: ",
            "  attrMonitoringScheduleArn",
            "  attrCreationTime",
            "  attrLastModifiedTime"
        ],
        "prefix": "l1-sagemaker-monitoringschedule",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnNotebookInstance": {
        "body": [
            "new sagemaker.CfnNotebookInstance(this, \"${1:id}\", {",
            "  acceleratorTypes: [],",
            "  additionalCodeRepositories: [],",
            "  defaultCodeRepository: \"${4:string}\",",
            "  directInternetAccess: \"${5:string}\",",
            "  instanceType: \"${6:string}\", // Required",
            "  kmsKeyId: \"${7:string}\",",
            "  lifecycleConfigName: \"${8:string}\",",
            "  notebookInstanceName: \"${9:string}\",",
            "  platformIdentifier: \"${10:string}\",",
            "  roleArn: \"${11:string}\", // Required",
            "  rootAccess: \"${12:string}\",",
            "  securityGroupIds: [],",
            "  subnetId: \"${14:string}\",",
            "  tags: [],",
            "  volumeSizeInGB: ${16:Number},",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnNotebookInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnNotebookInstance",
            "Attributes: ",
            "  attrNotebookInstanceName"
        ],
        "prefix": "l1-sagemaker-notebookinstance",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnNotebookInstanceLifecycleConfig": {
        "body": [
            "new sagemaker.CfnNotebookInstanceLifecycleConfig(this, \"${1:id}\", {",
            "  notebookInstanceLifecycleConfigName: \"${2:string}\",",
            "  onCreate: [],",
            "  onStart: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnNotebookInstanceLifecycleConfig",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnNotebookInstanceLifecycleConfig",
            "Attributes: ",
            "  attrNotebookInstanceLifecycleConfigName"
        ],
        "prefix": "l1-sagemaker-notebookinstancelifecycleconfig",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnPipeline": {
        "body": [
            "new sagemaker.CfnPipeline(this, \"${1:id}\", {",
            "  parallelismConfiguration: ${2:JSON},",
            "  pipelineDefinition: ${3:JSON}, // Required",
            "  pipelineDescription: \"${4:string}\",",
            "  pipelineDisplayName: \"${5:string}\",",
            "  pipelineName: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnPipeline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnPipeline"
        ],
        "prefix": "l1-sagemaker-pipeline",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnProject": {
        "body": [
            "new sagemaker.CfnProject(this, \"${1:id}\", {",
            "  projectDescription: \"${2:string}\",",
            "  projectName: \"${3:string}\", // Required",
            "  serviceCatalogProvisioningDetails: ${4:JSON}, // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnProject",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnProject",
            "Attributes: ",
            "  attrProjectArn",
            "  attrProjectId",
            "  attrCreationTime",
            "  attrProjectStatus"
        ],
        "prefix": "l1-sagemaker-project",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnUserProfile": {
        "body": [
            "new sagemaker.CfnUserProfile(this, \"${1:id}\", {",
            "  domainId: \"${2:string}\", // Required",
            "  singleSignOnUserIdentifier: \"${3:string}\",",
            "  singleSignOnUserValue: \"${4:string}\",",
            "  tags: [],",
            "  userProfileName: \"${6:string}\", // Required",
            "  userSettings: {",
            "    executionRole: \"${7:string}\",",
            "    securityGroups: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnUserProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnUserProfile",
            "Attributes: ",
            "  attrUserProfileArn"
        ],
        "prefix": "l1-sagemaker-userprofile",
        "scope": "javascript,typescript"
    },
    "sagemaker.CfnWorkteam": {
        "body": [
            "new sagemaker.CfnWorkteam(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  memberDefinitions: [],",
            "  notificationConfiguration: {",
            "    notificationTopicArn: \"${4:string}\",",
            "  },",
            "  tags: [],",
            "  workteamName: \"${6:string}\",",
            "})"
        ],
        "description": [
            "Construct: sagemaker.CfnWorkteam",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sagemaker.CfnWorkteam",
            "Attributes: ",
            "  attrWorkteamName"
        ],
        "prefix": "l1-sagemaker-workteam",
        "scope": "javascript,typescript"
    },
    "sdb.CfnDomain": {
        "body": [
            "new sdb.CfnDomain(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: sdb.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sdb.CfnDomain"
        ],
        "prefix": "l1-sdb-domain",
        "scope": "javascript,typescript"
    },
    "secretsmanager.CfnResourcePolicy": {
        "body": [
            "new secretsmanager.CfnResourcePolicy(this, \"${1:id}\", {",
            "  blockPublicPolicy: ${2|false,true|},",
            "  resourcePolicy: ${3:JSON}, // Required",
            "  secretId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: secretsmanager.CfnResourcePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.CfnResourcePolicy"
        ],
        "prefix": "l1-secretsmanager-resourcepolicy",
        "scope": "javascript,typescript"
    },
    "secretsmanager.CfnRotationSchedule": {
        "body": [
            "new secretsmanager.CfnRotationSchedule(this, \"${1:id}\", {",
            "  hostedRotationLambda: {",
            "    excludeCharacters: \"${2:string}\",",
            "    kmsKeyArn: \"${3:string}\",",
            "    masterSecretArn: \"${4:string}\",",
            "    masterSecretKmsKeyArn: \"${5:string}\",",
            "    rotationLambdaName: \"${6:string}\",",
            "    rotationType: \"${7:string}\",",
            "    superuserSecretArn: \"${8:string}\",",
            "    superuserSecretKmsKeyArn: \"${9:string}\",",
            "    vpcSecurityGroupIds: \"${10:string}\",",
            "    vpcSubnetIds: \"${11:string}\",",
            "  },",
            "  rotateImmediatelyOnUpdate: ${3|false,true|},",
            "  rotationLambdaARN: \"${4:string}\",",
            "  rotationRules: {",
            "    automaticallyAfterDays: ${5:Number},",
            "    duration: \"${6:string}\",",
            "    scheduleExpression: \"${7:string}\",",
            "  },",
            "  secretId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: secretsmanager.CfnRotationSchedule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.CfnRotationSchedule"
        ],
        "prefix": "l1-secretsmanager-rotationschedule",
        "scope": "javascript,typescript"
    },
    "secretsmanager.CfnSecret": {
        "body": [
            "new secretsmanager.CfnSecret(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  generateSecretString: {",
            "    excludeCharacters: \"${3:string}\",",
            "    excludeLowercase: ${4|false,true|},",
            "    excludeNumbers: ${5|false,true|},",
            "    excludePunctuation: ${6|false,true|},",
            "    excludeUppercase: ${7|false,true|},",
            "    generateStringKey: \"${8:string}\",",
            "    includeSpace: ${9|false,true|},",
            "    passwordLength: ${10:Number},",
            "    requireEachIncludedType: ${11|false,true|},",
            "    secretStringTemplate: \"${12:string}\",",
            "  },",
            "  kmsKeyId: \"${4:string}\",",
            "  name: \"${5:string}\",",
            "  replicaRegions: [],",
            "  secretString: \"${7:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: secretsmanager.CfnSecret",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.CfnSecret"
        ],
        "prefix": "l1-secretsmanager-secret",
        "scope": "javascript,typescript"
    },
    "secretsmanager.CfnSecretTargetAttachment": {
        "body": [
            "new secretsmanager.CfnSecretTargetAttachment(this, \"${1:id}\", {",
            "  secretId: \"${2:string}\", // Required",
            "  targetId: \"${3:string}\", // Required",
            "  targetType: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: secretsmanager.CfnSecretTargetAttachment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.CfnSecretTargetAttachment"
        ],
        "prefix": "l1-secretsmanager-secrettargetattachment",
        "scope": "javascript,typescript"
    },
    "securityhub.CfnHub": {
        "body": [
            "new securityhub.CfnHub(this, \"${1:id}\", {",
            "  tags: ${2:JSON},",
            "})"
        ],
        "description": [
            "Construct: securityhub.CfnHub",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-securityhub.CfnHub"
        ],
        "prefix": "l1-securityhub-hub",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnAcceptedPortfolioShare": {
        "body": [
            "new servicecatalog.CfnAcceptedPortfolioShare(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  portfolioId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnAcceptedPortfolioShare",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnAcceptedPortfolioShare"
        ],
        "prefix": "l1-servicecatalog-acceptedportfolioshare",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnCloudFormationProduct": {
        "body": [
            "new servicecatalog.CfnCloudFormationProduct(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  distributor: \"${4:string}\",",
            "  name: \"${5:string}\", // Required",
            "  owner: \"${6:string}\", // Required",
            "  provisioningArtifactParameters: [], // Required",
            "  replaceProvisioningArtifacts: ${8|false,true|},",
            "  supportDescription: \"${9:string}\",",
            "  supportEmail: \"${10:string}\",",
            "  supportUrl: \"${11:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnCloudFormationProduct",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnCloudFormationProduct",
            "Attributes: ",
            "  attrProductName",
            "  attrProvisioningArtifactIds",
            "  attrProvisioningArtifactNames"
        ],
        "prefix": "l1-servicecatalog-cloudformationproduct",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnCloudFormationProvisionedProduct": {
        "body": [
            "new servicecatalog.CfnCloudFormationProvisionedProduct(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  notificationArns: [],",
            "  pathId: \"${4:string}\",",
            "  pathName: \"${5:string}\",",
            "  productId: \"${6:string}\",",
            "  productName: \"${7:string}\",",
            "  provisionedProductName: \"${8:string}\",",
            "  provisioningArtifactId: \"${9:string}\",",
            "  provisioningArtifactName: \"${10:string}\",",
            "  provisioningParameters: [],",
            "  provisioningPreferences: {",
            "    stackSetAccounts: [],",
            "    stackSetFailureToleranceCount: ${13:Number},",
            "    stackSetFailureTolerancePercentage: ${14:Number},",
            "    stackSetMaxConcurrencyCount: ${15:Number},",
            "    stackSetMaxConcurrencyPercentage: ${16:Number},",
            "    stackSetOperationType: \"${17:string}\",",
            "    stackSetRegions: [],",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnCloudFormationProvisionedProduct",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnCloudFormationProvisionedProduct",
            "Attributes: ",
            "  attrProvisionedProductId",
            "  attrRecordId",
            "  attrCloudformationStackArn"
        ],
        "prefix": "l1-servicecatalog-cloudformationprovisionedproduct",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnLaunchNotificationConstraint": {
        "body": [
            "new servicecatalog.CfnLaunchNotificationConstraint(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  notificationArns: [], // Required",
            "  portfolioId: \"${5:string}\", // Required",
            "  productId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnLaunchNotificationConstraint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnLaunchNotificationConstraint"
        ],
        "prefix": "l1-servicecatalog-launchnotificationconstraint",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnLaunchRoleConstraint": {
        "body": [
            "new servicecatalog.CfnLaunchRoleConstraint(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  localRoleName: \"${4:string}\",",
            "  portfolioId: \"${5:string}\", // Required",
            "  productId: \"${6:string}\", // Required",
            "  roleArn: \"${7:string}\",",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnLaunchRoleConstraint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnLaunchRoleConstraint"
        ],
        "prefix": "l1-servicecatalog-launchroleconstraint",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnLaunchTemplateConstraint": {
        "body": [
            "new servicecatalog.CfnLaunchTemplateConstraint(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  portfolioId: \"${4:string}\", // Required",
            "  productId: \"${5:string}\", // Required",
            "  rules: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnLaunchTemplateConstraint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnLaunchTemplateConstraint"
        ],
        "prefix": "l1-servicecatalog-launchtemplateconstraint",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnPortfolio": {
        "body": [
            "new servicecatalog.CfnPortfolio(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  displayName: \"${4:string}\", // Required",
            "  providerName: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnPortfolio",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnPortfolio",
            "Attributes: ",
            "  attrPortfolioName"
        ],
        "prefix": "l1-servicecatalog-portfolio",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnPortfolioPrincipalAssociation": {
        "body": [
            "new servicecatalog.CfnPortfolioPrincipalAssociation(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  portfolioId: \"${3:string}\", // Required",
            "  principalARN: \"${4:string}\", // Required",
            "  principalType: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnPortfolioPrincipalAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnPortfolioPrincipalAssociation"
        ],
        "prefix": "l1-servicecatalog-portfolioprincipalassociation",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnPortfolioProductAssociation": {
        "body": [
            "new servicecatalog.CfnPortfolioProductAssociation(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  portfolioId: \"${3:string}\", // Required",
            "  productId: \"${4:string}\", // Required",
            "  sourcePortfolioId: \"${5:string}\",",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnPortfolioProductAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnPortfolioProductAssociation"
        ],
        "prefix": "l1-servicecatalog-portfolioproductassociation",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnPortfolioShare": {
        "body": [
            "new servicecatalog.CfnPortfolioShare(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  accountId: \"${3:string}\", // Required",
            "  portfolioId: \"${4:string}\", // Required",
            "  shareTagOptions: ${5|false,true|},",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnPortfolioShare",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnPortfolioShare"
        ],
        "prefix": "l1-servicecatalog-portfolioshare",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnResourceUpdateConstraint": {
        "body": [
            "new servicecatalog.CfnResourceUpdateConstraint(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  portfolioId: \"${4:string}\", // Required",
            "  productId: \"${5:string}\", // Required",
            "  tagUpdateOnProvisionedProduct: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnResourceUpdateConstraint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnResourceUpdateConstraint"
        ],
        "prefix": "l1-servicecatalog-resourceupdateconstraint",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnServiceAction": {
        "body": [
            "new servicecatalog.CfnServiceAction(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  definition: [], // Required",
            "  definitionType: \"${4:string}\", // Required",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnServiceAction",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnServiceAction",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-servicecatalog-serviceaction",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnServiceActionAssociation": {
        "body": [
            "new servicecatalog.CfnServiceActionAssociation(this, \"${1:id}\", {",
            "  productId: \"${2:string}\", // Required",
            "  provisioningArtifactId: \"${3:string}\", // Required",
            "  serviceActionId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnServiceActionAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnServiceActionAssociation"
        ],
        "prefix": "l1-servicecatalog-serviceactionassociation",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnStackSetConstraint": {
        "body": [
            "new servicecatalog.CfnStackSetConstraint(this, \"${1:id}\", {",
            "  acceptLanguage: \"${2:string}\",",
            "  accountList: [], // Required",
            "  adminRole: \"${4:string}\", // Required",
            "  description: \"${5:string}\", // Required",
            "  executionRole: \"${6:string}\", // Required",
            "  portfolioId: \"${7:string}\", // Required",
            "  productId: \"${8:string}\", // Required",
            "  regionList: [], // Required",
            "  stackInstanceControl: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnStackSetConstraint",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnStackSetConstraint"
        ],
        "prefix": "l1-servicecatalog-stacksetconstraint",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnTagOption": {
        "body": [
            "new servicecatalog.CfnTagOption(this, \"${1:id}\", {",
            "  active: ${2|false,true|},",
            "  key: \"${3:string}\", // Required",
            "  value: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnTagOption",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnTagOption"
        ],
        "prefix": "l1-servicecatalog-tagoption",
        "scope": "javascript,typescript"
    },
    "servicecatalog.CfnTagOptionAssociation": {
        "body": [
            "new servicecatalog.CfnTagOptionAssociation(this, \"${1:id}\", {",
            "  resourceId: \"${2:string}\", // Required",
            "  tagOptionId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalog.CfnTagOptionAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalog.CfnTagOptionAssociation"
        ],
        "prefix": "l1-servicecatalog-tagoptionassociation",
        "scope": "javascript,typescript"
    },
    "servicecatalogappregistry.CfnApplication": {
        "body": [
            "new servicecatalogappregistry.CfnApplication(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: servicecatalogappregistry.CfnApplication",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalogappregistry.CfnApplication",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-servicecatalogappregistry-application",
        "scope": "javascript,typescript"
    },
    "servicecatalogappregistry.CfnAttributeGroup": {
        "body": [
            "new servicecatalogappregistry.CfnAttributeGroup(this, \"${1:id}\", {",
            "  attributes: ${2:JSON}, // Required",
            "  description: \"${3:string}\",",
            "  name: \"${4:string}\", // Required",
            "  tags: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: servicecatalogappregistry.CfnAttributeGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalogappregistry.CfnAttributeGroup",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-servicecatalogappregistry-attributegroup",
        "scope": "javascript,typescript"
    },
    "servicecatalogappregistry.CfnAttributeGroupAssociation": {
        "body": [
            "new servicecatalogappregistry.CfnAttributeGroupAssociation(this, \"${1:id}\", {",
            "  application: \"${2:string}\", // Required",
            "  attributeGroup: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalogappregistry.CfnAttributeGroupAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalogappregistry.CfnAttributeGroupAssociation",
            "Attributes: ",
            "  attrApplicationArn",
            "  attrAttributeGroupArn",
            "  attrId"
        ],
        "prefix": "l1-servicecatalogappregistry-attributegroupassociation",
        "scope": "javascript,typescript"
    },
    "servicecatalogappregistry.CfnResourceAssociation": {
        "body": [
            "new servicecatalogappregistry.CfnResourceAssociation(this, \"${1:id}\", {",
            "  application: \"${2:string}\", // Required",
            "  resource: \"${3:string}\", // Required",
            "  resourceType: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicecatalogappregistry.CfnResourceAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicecatalogappregistry.CfnResourceAssociation",
            "Attributes: ",
            "  attrApplicationArn",
            "  attrResourceArn",
            "  attrId"
        ],
        "prefix": "l1-servicecatalogappregistry-resourceassociation",
        "scope": "javascript,typescript"
    },
    "servicediscovery.CfnHttpNamespace": {
        "body": [
            "new servicediscovery.CfnHttpNamespace(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: servicediscovery.CfnHttpNamespace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicediscovery.CfnHttpNamespace",
            "Attributes: ",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-servicediscovery-httpnamespace",
        "scope": "javascript,typescript"
    },
    "servicediscovery.CfnInstance": {
        "body": [
            "new servicediscovery.CfnInstance(this, \"${1:id}\", {",
            "  instanceAttributes: ${2:JSON}, // Required",
            "  instanceId: \"${3:string}\",",
            "  serviceId: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicediscovery.CfnInstance",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicediscovery.CfnInstance"
        ],
        "prefix": "l1-servicediscovery-instance",
        "scope": "javascript,typescript"
    },
    "servicediscovery.CfnPrivateDnsNamespace": {
        "body": [
            "new servicediscovery.CfnPrivateDnsNamespace(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  properties: {",
            "  },",
            "  tags: [],",
            "  vpc: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: servicediscovery.CfnPrivateDnsNamespace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicediscovery.CfnPrivateDnsNamespace",
            "Attributes: ",
            "  attrHostedZoneId",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-servicediscovery-privatednsnamespace",
        "scope": "javascript,typescript"
    },
    "servicediscovery.CfnPublicDnsNamespace": {
        "body": [
            "new servicediscovery.CfnPublicDnsNamespace(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  properties: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: servicediscovery.CfnPublicDnsNamespace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicediscovery.CfnPublicDnsNamespace",
            "Attributes: ",
            "  attrHostedZoneId",
            "  attrId",
            "  attrArn"
        ],
        "prefix": "l1-servicediscovery-publicdnsnamespace",
        "scope": "javascript,typescript"
    },
    "servicediscovery.CfnService": {
        "body": [
            "new servicediscovery.CfnService(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  dnsConfig: {",
            "    dnsRecords: [],",
            "    namespaceId: \"${4:string}\",",
            "    routingPolicy: \"${5:string}\",",
            "  },",
            "  healthCheckConfig: {",
            "    failureThreshold: ${4:Number},",
            "    resourcePath: \"${5:string}\",",
            "    type: \"${6:string}\",",
            "  },",
            "  healthCheckCustomConfig: {",
            "    failureThreshold: ${5:Number},",
            "  },",
            "  name: \"${6:string}\",",
            "  namespaceId: \"${7:string}\",",
            "  tags: [],",
            "  type: \"${9:string}\",",
            "})"
        ],
        "description": [
            "Construct: servicediscovery.CfnService",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-servicediscovery.CfnService",
            "Attributes: ",
            "  attrId",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-servicediscovery-service",
        "scope": "javascript,typescript"
    },
    "ses.CfnConfigurationSet": {
        "body": [
            "new ses.CfnConfigurationSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: ses.CfnConfigurationSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnConfigurationSet"
        ],
        "prefix": "l1-ses-configurationset",
        "scope": "javascript,typescript"
    },
    "ses.CfnConfigurationSetEventDestination": {
        "body": [
            "new ses.CfnConfigurationSetEventDestination(this, \"${1:id}\", {",
            "  configurationSetName: \"${2:string}\", // Required",
            "  eventDestination: {",
            "    enabled: ${4|false,true|},",
            "    matchingEventTypes: [],",
            "    name: \"${7:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ses.CfnConfigurationSetEventDestination",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnConfigurationSetEventDestination",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ses-configurationseteventdestination",
        "scope": "javascript,typescript"
    },
    "ses.CfnContactList": {
        "body": [
            "new ses.CfnContactList(this, \"${1:id}\", {",
            "  contactListName: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  tags: [],",
            "  topics: [],",
            "})"
        ],
        "description": [
            "Construct: ses.CfnContactList",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnContactList"
        ],
        "prefix": "l1-ses-contactlist",
        "scope": "javascript,typescript"
    },
    "ses.CfnReceiptFilter": {
        "body": [
            "new ses.CfnReceiptFilter(this, \"${1:id}\", {",
            "  filter: {",
            "    name: \"${3:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ses.CfnReceiptFilter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnReceiptFilter"
        ],
        "prefix": "l1-ses-receiptfilter",
        "scope": "javascript,typescript"
    },
    "ses.CfnReceiptRule": {
        "body": [
            "new ses.CfnReceiptRule(this, \"${1:id}\", {",
            "  after: \"${2:string}\",",
            "  rule: {",
            "    actions: [],",
            "    enabled: ${4|false,true|},",
            "    name: \"${5:string}\",",
            "    recipients: [],",
            "    scanEnabled: ${7|false,true|},",
            "    tlsPolicy: \"${8:string}\",",
            "  },",
            "  ruleSetName: \"${4:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ses.CfnReceiptRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnReceiptRule"
        ],
        "prefix": "l1-ses-receiptrule",
        "scope": "javascript,typescript"
    },
    "ses.CfnReceiptRuleSet": {
        "body": [
            "new ses.CfnReceiptRuleSet(this, \"${1:id}\", {",
            "  ruleSetName: \"${2:string}\",",
            "})"
        ],
        "description": [
            "Construct: ses.CfnReceiptRuleSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnReceiptRuleSet"
        ],
        "prefix": "l1-ses-receiptruleset",
        "scope": "javascript,typescript"
    },
    "ses.CfnTemplate": {
        "body": [
            "new ses.CfnTemplate(this, \"${1:id}\", {",
            "  template: {",
            "    htmlPart: \"${2:string}\",",
            "    subjectPart: \"${3:string}\",",
            "    templateName: \"${4:string}\",",
            "    textPart: \"${5:string}\",",
            "  },",
            "})"
        ],
        "description": [
            "Construct: ses.CfnTemplate",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ses.CfnTemplate",
            "Attributes: ",
            "  attrId"
        ],
        "prefix": "l1-ses-template",
        "scope": "javascript,typescript"
    },
    "signer.CfnProfilePermission": {
        "body": [
            "new signer.CfnProfilePermission(this, \"${1:id}\", {",
            "  action: \"${2:string}\", // Required",
            "  principal: \"${3:string}\", // Required",
            "  profileName: \"${4:string}\", // Required",
            "  profileVersion: \"${5:string}\",",
            "  statementId: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: signer.CfnProfilePermission",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-signer.CfnProfilePermission"
        ],
        "prefix": "l1-signer-profilepermission",
        "scope": "javascript,typescript"
    },
    "signer.CfnSigningProfile": {
        "body": [
            "new signer.CfnSigningProfile(this, \"${1:id}\", {",
            "  platformId: \"${2:string}\", // Required",
            "  signatureValidityPeriod: {",
            "    type: \"${3:string}\",",
            "    value: ${4:Number},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: signer.CfnSigningProfile",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-signer.CfnSigningProfile",
            "Attributes: ",
            "  attrProfileName",
            "  attrProfileVersion",
            "  attrArn",
            "  attrProfileVersionArn"
        ],
        "prefix": "l1-signer-signingprofile",
        "scope": "javascript,typescript"
    },
    "sns.CfnSubscription": {
        "body": [
            "new sns.CfnSubscription(this, \"${1:id}\", {",
            "  deliveryPolicy: ${2:JSON},",
            "  endpoint: \"${3:string}\",",
            "  filterPolicy: ${4:JSON},",
            "  protocol: \"${5:string}\", // Required",
            "  rawMessageDelivery: ${6|false,true|},",
            "  redrivePolicy: ${7:JSON},",
            "  region: \"${8:string}\",",
            "  subscriptionRoleArn: \"${9:string}\",",
            "  topicArn: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sns.CfnSubscription",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sns.CfnSubscription"
        ],
        "prefix": "l1-sns-subscription",
        "scope": "javascript,typescript"
    },
    "sns.CfnTopic": {
        "body": [
            "new sns.CfnTopic(this, \"${1:id}\", {",
            "  contentBasedDeduplication: ${2|false,true|},",
            "  displayName: \"${3:string}\",",
            "  fifoTopic: ${4|false,true|},",
            "  kmsMasterKeyId: \"${5:string}\",",
            "  subscription: [],",
            "  tags: [],",
            "  topicName: \"${8:string}\",",
            "})"
        ],
        "description": [
            "Construct: sns.CfnTopic",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sns.CfnTopic",
            "Attributes: ",
            "  attrTopicName"
        ],
        "prefix": "l1-sns-topic",
        "scope": "javascript,typescript"
    },
    "sns.CfnTopicPolicy": {
        "body": [
            "new sns.CfnTopicPolicy(this, \"${1:id}\", {",
            "  policyDocument: ${2:JSON}, // Required",
            "  topics: [], // Required",
            "})"
        ],
        "description": [
            "Construct: sns.CfnTopicPolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sns.CfnTopicPolicy"
        ],
        "prefix": "l1-sns-topicpolicy",
        "scope": "javascript,typescript"
    },
    "sqs.CfnQueue": {
        "body": [
            "new sqs.CfnQueue(this, \"${1:id}\", {",
            "  contentBasedDeduplication: ${2|false,true|},",
            "  deduplicationScope: \"${3:string}\",",
            "  delaySeconds: ${4:Number},",
            "  fifoQueue: ${5|false,true|},",
            "  fifoThroughputLimit: \"${6:string}\",",
            "  kmsDataKeyReusePeriodSeconds: ${7:Number},",
            "  kmsMasterKeyId: \"${8:string}\",",
            "  maximumMessageSize: ${9:Number},",
            "  messageRetentionPeriod: ${10:Number},",
            "  queueName: \"${11:string}\",",
            "  receiveMessageWaitTimeSeconds: ${12:Number},",
            "  redriveAllowPolicy: ${13:JSON},",
            "  redrivePolicy: ${14:JSON},",
            "  sqsManagedSseEnabled: ${15|false,true|},",
            "  tags: [],",
            "  visibilityTimeout: ${17:Number},",
            "})"
        ],
        "description": [
            "Construct: sqs.CfnQueue",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sqs.CfnQueue",
            "Attributes: ",
            "  attrQueueUrl",
            "  attrArn",
            "  attrQueueName"
        ],
        "prefix": "l1-sqs-queue",
        "scope": "javascript,typescript"
    },
    "sqs.CfnQueuePolicy": {
        "body": [
            "new sqs.CfnQueuePolicy(this, \"${1:id}\", {",
            "  policyDocument: ${2:JSON}, // Required",
            "  queues: [], // Required",
            "})"
        ],
        "description": [
            "Construct: sqs.CfnQueuePolicy",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sqs.CfnQueuePolicy"
        ],
        "prefix": "l1-sqs-queuepolicy",
        "scope": "javascript,typescript"
    },
    "ssm.CfnAssociation": {
        "body": [
            "new ssm.CfnAssociation(this, \"${1:id}\", {",
            "  applyOnlyAtCronInterval: ${2|false,true|},",
            "  associationName: \"${3:string}\",",
            "  automationTargetParameterName: \"${4:string}\",",
            "  calendarNames: [],",
            "  complianceSeverity: \"${6:string}\",",
            "  documentVersion: \"${7:string}\",",
            "  instanceId: \"${8:string}\",",
            "  maxConcurrency: \"${9:string}\",",
            "  maxErrors: \"${10:string}\",",
            "  name: \"${11:string}\", // Required",
            "  outputLocation: {",
            "  },",
            "  parameters: {",
            "  },",
            "  scheduleExpression: \"${14:string}\",",
            "  scheduleOffset: ${15:Number},",
            "  syncCompliance: \"${16:string}\",",
            "  targets: [],",
            "  waitForSuccessTimeoutSeconds: ${18:Number},",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnAssociation",
            "Attributes: ",
            "  attrAssociationId"
        ],
        "prefix": "l1-ssm-association",
        "scope": "javascript,typescript"
    },
    "ssm.CfnDocument": {
        "body": [
            "new ssm.CfnDocument(this, \"${1:id}\", {",
            "  attachments: [],",
            "  content: ${3:JSON}, // Required",
            "  documentFormat: \"${4:string}\",",
            "  documentType: \"${5:string}\",",
            "  name: \"${6:string}\",",
            "  requires: [],",
            "  tags: [],",
            "  targetType: \"${9:string}\",",
            "  updateMethod: \"${10:string}\",",
            "  versionName: \"${11:string}\",",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnDocument",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnDocument"
        ],
        "prefix": "l1-ssm-document",
        "scope": "javascript,typescript"
    },
    "ssm.CfnMaintenanceWindow": {
        "body": [
            "new ssm.CfnMaintenanceWindow(this, \"${1:id}\", {",
            "  allowUnassociatedTargets: ${2|false,true|}, // Required",
            "  cutoff: ${3:Number}, // Required",
            "  description: \"${4:string}\",",
            "  duration: ${5:Number}, // Required",
            "  endDate: \"${6:string}\",",
            "  name: \"${7:string}\", // Required",
            "  schedule: \"${8:string}\", // Required",
            "  scheduleOffset: ${9:Number},",
            "  scheduleTimezone: \"${10:string}\",",
            "  startDate: \"${11:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnMaintenanceWindow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnMaintenanceWindow"
        ],
        "prefix": "l1-ssm-maintenancewindow",
        "scope": "javascript,typescript"
    },
    "ssm.CfnMaintenanceWindowTarget": {
        "body": [
            "new ssm.CfnMaintenanceWindowTarget(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\",",
            "  ownerInformation: \"${4:string}\",",
            "  resourceType: \"${5:string}\", // Required",
            "  targets: [], // Required",
            "  windowId: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnMaintenanceWindowTarget",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnMaintenanceWindowTarget"
        ],
        "prefix": "l1-ssm-maintenancewindowtarget",
        "scope": "javascript,typescript"
    },
    "ssm.CfnMaintenanceWindowTask": {
        "body": [
            "new ssm.CfnMaintenanceWindowTask(this, \"${1:id}\", {",
            "  cutoffBehavior: \"${2:string}\",",
            "  description: \"${3:string}\",",
            "  loggingInfo: {",
            "    region: \"${4:string}\",",
            "    s3Bucket: \"${5:string}\",",
            "    s3Prefix: \"${6:string}\",",
            "  },",
            "  maxConcurrency: \"${5:string}\",",
            "  maxErrors: \"${6:string}\",",
            "  name: \"${7:string}\",",
            "  priority: ${8:Number}, // Required",
            "  serviceRoleArn: \"${9:string}\",",
            "  targets: [],",
            "  taskArn: \"${11:string}\", // Required",
            "  taskInvocationParameters: {",
            "  },",
            "  taskParameters: ${13:JSON},",
            "  taskType: \"${14:string}\", // Required",
            "  windowId: \"${15:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnMaintenanceWindowTask",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnMaintenanceWindowTask"
        ],
        "prefix": "l1-ssm-maintenancewindowtask",
        "scope": "javascript,typescript"
    },
    "ssm.CfnParameter": {
        "body": [
            "new ssm.CfnParameter(this, \"${1:id}\", {",
            "  allowedPattern: \"${2:string}\",",
            "  dataType: \"${3:string}\",",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\",",
            "  policies: \"${6:string}\",",
            "  tags: ${7:JSON},",
            "  tier: \"${8:string}\",",
            "  type: \"${9:string}\", // Required",
            "  value: \"${10:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnParameter",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnParameter",
            "Attributes: ",
            "  attrType",
            "  attrValue"
        ],
        "prefix": "l1-ssm-parameter",
        "scope": "javascript,typescript"
    },
    "ssm.CfnPatchBaseline": {
        "body": [
            "new ssm.CfnPatchBaseline(this, \"${1:id}\", {",
            "  approvalRules: {",
            "    patchRules: [],",
            "  },",
            "  approvedPatches: [],",
            "  approvedPatchesComplianceLevel: \"${4:string}\",",
            "  approvedPatchesEnableNonSecurity: ${5|false,true|},",
            "  description: \"${6:string}\",",
            "  globalFilters: {",
            "    patchFilters: [],",
            "  },",
            "  name: \"${8:string}\", // Required",
            "  operatingSystem: \"${9:string}\",",
            "  patchGroups: [],",
            "  rejectedPatches: [],",
            "  rejectedPatchesAction: \"${12:string}\",",
            "  sources: [],",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnPatchBaseline",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnPatchBaseline"
        ],
        "prefix": "l1-ssm-patchbaseline",
        "scope": "javascript,typescript"
    },
    "ssm.CfnResourceDataSync": {
        "body": [
            "new ssm.CfnResourceDataSync(this, \"${1:id}\", {",
            "  bucketName: \"${2:string}\",",
            "  bucketPrefix: \"${3:string}\",",
            "  bucketRegion: \"${4:string}\",",
            "  kMSKeyArn: \"${5:string}\",",
            "  s3Destination: {",
            "    bucketName: \"${6:string}\",",
            "    bucketPrefix: \"${7:string}\",",
            "    bucketRegion: \"${8:string}\",",
            "    kMSKeyArn: \"${9:string}\",",
            "    syncFormat: \"${10:string}\",",
            "  },",
            "  syncFormat: \"${7:string}\",",
            "  syncName: \"${8:string}\", // Required",
            "  syncSource: {",
            "    includeFutureRegions: ${10|false,true|},",
            "    sourceRegions: [],",
            "    sourceType: \"${12:string}\",",
            "  },",
            "  syncType: \"${10:string}\",",
            "})"
        ],
        "description": [
            "Construct: ssm.CfnResourceDataSync",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssm.CfnResourceDataSync",
            "Attributes: ",
            "  attrSyncName"
        ],
        "prefix": "l1-ssm-resourcedatasync",
        "scope": "javascript,typescript"
    },
    "ssmcontacts.CfnContact": {
        "body": [
            "new ssmcontacts.CfnContact(this, \"${1:id}\", {",
            "  alias: \"${2:string}\", // Required",
            "  displayName: \"${3:string}\", // Required",
            "  plan: [], // Required",
            "  type: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: ssmcontacts.CfnContact",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssmcontacts.CfnContact",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ssmcontacts-contact",
        "scope": "javascript,typescript"
    },
    "ssmcontacts.CfnContactChannel": {
        "body": [
            "new ssmcontacts.CfnContactChannel(this, \"${1:id}\", {",
            "  channelAddress: \"${2:string}\", // Required",
            "  channelName: \"${3:string}\", // Required",
            "  channelType: \"${4:string}\", // Required",
            "  contactId: \"${5:string}\", // Required",
            "  deferActivation: ${6|false,true|},",
            "})"
        ],
        "description": [
            "Construct: ssmcontacts.CfnContactChannel",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssmcontacts.CfnContactChannel",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ssmcontacts-contactchannel",
        "scope": "javascript,typescript"
    },
    "ssmincidents.CfnReplicationSet": {
        "body": [
            "new ssmincidents.CfnReplicationSet(this, \"${1:id}\", {",
            "  deletionProtected: ${2|false,true|},",
            "  regions: [], // Required",
            "})"
        ],
        "description": [
            "Construct: ssmincidents.CfnReplicationSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssmincidents.CfnReplicationSet",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ssmincidents-replicationset",
        "scope": "javascript,typescript"
    },
    "ssmincidents.CfnResponsePlan": {
        "body": [
            "new ssmincidents.CfnResponsePlan(this, \"${1:id}\", {",
            "  actions: [],",
            "  chatChannel: {",
            "    chatbotSns: [],",
            "  },",
            "  displayName: \"${4:string}\",",
            "  engagements: [],",
            "  incidentTemplate: {",
            "    dedupeString: \"${6:string}\",",
            "    impact: ${7:Number},",
            "    notificationTargets: [],",
            "    summary: \"${9:string}\",",
            "    title: \"${10:string}\",",
            "  },",
            "  name: \"${7:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: ssmincidents.CfnResponsePlan",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-ssmincidents.CfnResponsePlan",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-ssmincidents-responseplan",
        "scope": "javascript,typescript"
    },
    "sso.CfnAssignment": {
        "body": [
            "new sso.CfnAssignment(this, \"${1:id}\", {",
            "  instanceArn: \"${2:string}\", // Required",
            "  permissionSetArn: \"${3:string}\", // Required",
            "  principalId: \"${4:string}\", // Required",
            "  principalType: \"${5:string}\", // Required",
            "  targetId: \"${6:string}\", // Required",
            "  targetType: \"${7:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sso.CfnAssignment",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sso.CfnAssignment"
        ],
        "prefix": "l1-sso-assignment",
        "scope": "javascript,typescript"
    },
    "sso.CfnInstanceAccessControlAttributeConfiguration": {
        "body": [
            "new sso.CfnInstanceAccessControlAttributeConfiguration(this, \"${1:id}\", {",
            "  accessControlAttributes: [],",
            "  instanceArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: sso.CfnInstanceAccessControlAttributeConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sso.CfnInstanceAccessControlAttributeConfiguration"
        ],
        "prefix": "l1-sso-instanceaccesscontrolattributeconfiguration",
        "scope": "javascript,typescript"
    },
    "sso.CfnPermissionSet": {
        "body": [
            "new sso.CfnPermissionSet(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  inlinePolicy: ${3:JSON},",
            "  instanceArn: \"${4:string}\", // Required",
            "  managedPolicies: [],",
            "  name: \"${6:string}\", // Required",
            "  relayStateType: \"${7:string}\",",
            "  sessionDuration: \"${8:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: sso.CfnPermissionSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-sso.CfnPermissionSet",
            "Attributes: ",
            "  attrPermissionSetArn"
        ],
        "prefix": "l1-sso-permissionset",
        "scope": "javascript,typescript"
    },
    "stepfunctions.CfnActivity": {
        "body": [
            "new stepfunctions.CfnActivity(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: stepfunctions.CfnActivity",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-stepfunctions.CfnActivity",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-stepfunctions-activity",
        "scope": "javascript,typescript"
    },
    "stepfunctions.CfnStateMachine": {
        "body": [
            "new stepfunctions.CfnStateMachine(this, \"${1:id}\", {",
            "  definition: {",
            "  },",
            "  definitionS3Location: {",
            "    bucket: \"${3:string}\",",
            "    key: \"${4:string}\",",
            "    version: \"${5:string}\",",
            "  },",
            "  definitionString: \"${4:string}\",",
            "  definitionSubstitutions: {",
            "  },",
            "  loggingConfiguration: {",
            "    destinations: [],",
            "    includeExecutionData: ${7|false,true|},",
            "    level: \"${8:string}\",",
            "  },",
            "  roleArn: \"${7:string}\", // Required",
            "  stateMachineName: \"${8:string}\",",
            "  stateMachineType: \"${9:string}\",",
            "  tags: [],",
            "  tracingConfiguration: {",
            "    enabled: ${11|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: stepfunctions.CfnStateMachine",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-stepfunctions.CfnStateMachine",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-stepfunctions-statemachine",
        "scope": "javascript,typescript"
    },
    "synthetics.CfnCanary": {
        "body": [
            "new synthetics.CfnCanary(this, \"${1:id}\", {",
            "  artifactConfig: {",
            "  },",
            "  artifactS3Location: \"${3:string}\", // Required",
            "  code: {",
            "    handler: \"${4:string}\",",
            "    s3Bucket: \"${5:string}\",",
            "    s3Key: \"${6:string}\",",
            "    s3ObjectVersion: \"${7:string}\",",
            "    script: \"${8:string}\",",
            "  },",
            "  deleteLambdaResourcesOnCanaryDeletion: ${5|false,true|},",
            "  executionRoleArn: \"${6:string}\", // Required",
            "  failureRetentionPeriod: ${7:Number},",
            "  name: \"${8:string}\", // Required",
            "  runConfig: {",
            "    activeTracing: ${9|false,true|},",
            "    memoryInMB: ${11:Number},",
            "    timeoutInSeconds: ${12:Number},",
            "  },",
            "  runtimeVersion: \"${10:string}\", // Required",
            "  schedule: {",
            "    durationInSeconds: \"${11:string}\",",
            "    expression: \"${12:string}\",",
            "  },",
            "  startCanaryAfterCreation: ${12|false,true|}, // Required",
            "  successRetentionPeriod: ${13:Number},",
            "  tags: [],",
            "  vPCConfig: {",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "    vpcId: \"${17:string}\",",
            "  },",
            "  visualReference: {",
            "    baseCanaryRunId: \"${16:string}\",",
            "    baseScreenshots: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: synthetics.CfnCanary",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-synthetics.CfnCanary",
            "Attributes: ",
            "  attrId",
            "  attrState"
        ],
        "prefix": "l1-synthetics-canary",
        "scope": "javascript,typescript"
    },
    "timestream.CfnDatabase": {
        "body": [
            "new timestream.CfnDatabase(this, \"${1:id}\", {",
            "  databaseName: \"${2:string}\",",
            "  kmsKeyId: \"${3:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: timestream.CfnDatabase",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-timestream.CfnDatabase",
            "Attributes: ",
            "  attrArn"
        ],
        "prefix": "l1-timestream-database",
        "scope": "javascript,typescript"
    },
    "timestream.CfnScheduledQuery": {
        "body": [
            "new timestream.CfnScheduledQuery(this, \"${1:id}\", {",
            "  clientToken: \"${2:string}\",",
            "  errorReportConfiguration: {",
            "  },",
            "  kmsKeyId: \"${4:string}\",",
            "  notificationConfiguration: {",
            "  },",
            "  queryString: \"${6:string}\", // Required",
            "  scheduleConfiguration: {",
            "    scheduleExpression: \"${7:string}\",",
            "  },",
            "  scheduledQueryExecutionRoleArn: \"${8:string}\", // Required",
            "  scheduledQueryName: \"${9:string}\",",
            "  tags: [],",
            "  targetConfiguration: {",
            "  },",
            "})"
        ],
        "description": [
            "Construct: timestream.CfnScheduledQuery",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-timestream.CfnScheduledQuery",
            "Attributes: ",
            "  attrArn",
            "  attrSQName",
            "  attrSQQueryString",
            "  attrSQScheduleConfiguration",
            "  attrSQNotificationConfiguration",
            "  attrSQScheduledQueryExecutionRoleArn",
            "  attrSQTargetConfiguration",
            "  attrSQErrorReportConfiguration",
            "  attrSQKmsKeyId"
        ],
        "prefix": "l1-timestream-scheduledquery",
        "scope": "javascript,typescript"
    },
    "timestream.CfnTable": {
        "body": [
            "new timestream.CfnTable(this, \"${1:id}\", {",
            "  databaseName: \"${2:string}\", // Required",
            "  magneticStoreWriteProperties: ${3:JSON},",
            "  retentionProperties: ${4:JSON},",
            "  tableName: \"${5:string}\",",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: timestream.CfnTable",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-timestream.CfnTable",
            "Attributes: ",
            "  attrArn",
            "  attrName"
        ],
        "prefix": "l1-timestream-table",
        "scope": "javascript,typescript"
    },
    "transfer.CfnServer": {
        "body": [
            "new transfer.CfnServer(this, \"${1:id}\", {",
            "  certificate: \"${2:string}\",",
            "  domain: \"${3:string}\",",
            "  endpointDetails: {",
            "    addressAllocationIds: [],",
            "    securityGroupIds: [],",
            "    subnetIds: [],",
            "    vpcEndpointId: \"${7:string}\",",
            "    vpcId: \"${8:string}\",",
            "  },",
            "  endpointType: \"${5:string}\",",
            "  identityProviderDetails: {",
            "    directoryId: \"${6:string}\",",
            "    function: \"${7:string}\",",
            "    invocationRole: \"${8:string}\",",
            "    url: \"${9:string}\",",
            "  },",
            "  identityProviderType: \"${7:string}\",",
            "  loggingRole: \"${8:string}\",",
            "  postAuthenticationLoginBanner: \"${9:string}\",",
            "  preAuthenticationLoginBanner: \"${10:string}\",",
            "  protocolDetails: {",
            "    passiveIp: \"${11:string}\",",
            "    tlsSessionResumptionMode: \"${12:string}\",",
            "  },",
            "  protocols: [],",
            "  securityPolicyName: \"${13:string}\",",
            "  tags: [],",
            "  workflowDetails: {",
            "    onUpload: [],",
            "  },",
            "})"
        ],
        "description": [
            "Construct: transfer.CfnServer",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-transfer.CfnServer",
            "Attributes: ",
            "  attrServerId",
            "  attrArn"
        ],
        "prefix": "l1-transfer-server",
        "scope": "javascript,typescript"
    },
    "transfer.CfnUser": {
        "body": [
            "new transfer.CfnUser(this, \"${1:id}\", {",
            "  homeDirectory: \"${2:string}\",",
            "  homeDirectoryMappings: [],",
            "  homeDirectoryType: \"${4:string}\",",
            "  policy: \"${5:string}\",",
            "  posixProfile: {",
            "    gid: ${6:Number},",
            "    secondaryGids: [],",
            "    uid: ${8:Number},",
            "  },",
            "  role: \"${7:string}\", // Required",
            "  serverId: \"${8:string}\", // Required",
            "  sshPublicKeys: [],",
            "  tags: [],",
            "  userName: \"${11:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: transfer.CfnUser",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-transfer.CfnUser",
            "Attributes: ",
            "  attrServerId",
            "  attrUserName",
            "  attrArn"
        ],
        "prefix": "l1-transfer-user",
        "scope": "javascript,typescript"
    },
    "transfer.CfnWorkflow": {
        "body": [
            "new transfer.CfnWorkflow(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  onExceptionSteps: [],",
            "  steps: [], // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: transfer.CfnWorkflow",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-transfer.CfnWorkflow",
            "Attributes: ",
            "  attrWorkflowId",
            "  attrArn"
        ],
        "prefix": "l1-transfer-workflow",
        "scope": "javascript,typescript"
    },
    "voiceid.CfnDomain": {
        "body": [
            "new voiceid.CfnDomain(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  serverSideEncryptionConfiguration: {",
            "    kmsKeyId: \"${4:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: voiceid.CfnDomain",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-voiceid.CfnDomain",
            "Attributes: ",
            "  attrDomainId"
        ],
        "prefix": "l1-voiceid-domain",
        "scope": "javascript,typescript"
    },
    "waf.CfnByteMatchSet": {
        "body": [
            "new waf.CfnByteMatchSet(this, \"${1:id}\", {",
            "  byteMatchTuples: [],",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: waf.CfnByteMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnByteMatchSet"
        ],
        "prefix": "l1-waf-bytematchset",
        "scope": "javascript,typescript"
    },
    "waf.CfnIPSet": {
        "body": [
            "new waf.CfnIPSet(this, \"${1:id}\", {",
            "  iPSetDescriptors: [],",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: waf.CfnIPSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnIPSet"
        ],
        "prefix": "l1-waf-ipset",
        "scope": "javascript,typescript"
    },
    "waf.CfnRule": {
        "body": [
            "new waf.CfnRule(this, \"${1:id}\", {",
            "  metricName: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  predicates: [],",
            "})"
        ],
        "description": [
            "Construct: waf.CfnRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnRule"
        ],
        "prefix": "l1-waf-rule",
        "scope": "javascript,typescript"
    },
    "waf.CfnSizeConstraintSet": {
        "body": [
            "new waf.CfnSizeConstraintSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  sizeConstraints: [], // Required",
            "})"
        ],
        "description": [
            "Construct: waf.CfnSizeConstraintSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnSizeConstraintSet"
        ],
        "prefix": "l1-waf-sizeconstraintset",
        "scope": "javascript,typescript"
    },
    "waf.CfnSqlInjectionMatchSet": {
        "body": [
            "new waf.CfnSqlInjectionMatchSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  sqlInjectionMatchTuples: [],",
            "})"
        ],
        "description": [
            "Construct: waf.CfnSqlInjectionMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnSqlInjectionMatchSet"
        ],
        "prefix": "l1-waf-sqlinjectionmatchset",
        "scope": "javascript,typescript"
    },
    "waf.CfnWebACL": {
        "body": [
            "new waf.CfnWebACL(this, \"${1:id}\", {",
            "  defaultAction: {",
            "    type: \"${2:string}\",",
            "  },",
            "  metricName: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  rules: [],",
            "})"
        ],
        "description": [
            "Construct: waf.CfnWebACL",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnWebACL"
        ],
        "prefix": "l1-waf-webacl",
        "scope": "javascript,typescript"
    },
    "waf.CfnXssMatchSet": {
        "body": [
            "new waf.CfnXssMatchSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  xssMatchTuples: [], // Required",
            "})"
        ],
        "description": [
            "Construct: waf.CfnXssMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-waf.CfnXssMatchSet"
        ],
        "prefix": "l1-waf-xssmatchset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnByteMatchSet": {
        "body": [
            "new wafregional.CfnByteMatchSet(this, \"${1:id}\", {",
            "  byteMatchTuples: [],",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnByteMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnByteMatchSet"
        ],
        "prefix": "l1-wafregional-bytematchset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnGeoMatchSet": {
        "body": [
            "new wafregional.CfnGeoMatchSet(this, \"${1:id}\", {",
            "  geoMatchConstraints: [],",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnGeoMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnGeoMatchSet"
        ],
        "prefix": "l1-wafregional-geomatchset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnIPSet": {
        "body": [
            "new wafregional.CfnIPSet(this, \"${1:id}\", {",
            "  iPSetDescriptors: [],",
            "  name: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnIPSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnIPSet"
        ],
        "prefix": "l1-wafregional-ipset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnRateBasedRule": {
        "body": [
            "new wafregional.CfnRateBasedRule(this, \"${1:id}\", {",
            "  matchPredicates: [],",
            "  metricName: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  rateKey: \"${5:string}\", // Required",
            "  rateLimit: ${6:Number}, // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnRateBasedRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnRateBasedRule"
        ],
        "prefix": "l1-wafregional-ratebasedrule",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnRegexPatternSet": {
        "body": [
            "new wafregional.CfnRegexPatternSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  regexPatternStrings: [], // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnRegexPatternSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnRegexPatternSet"
        ],
        "prefix": "l1-wafregional-regexpatternset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnRule": {
        "body": [
            "new wafregional.CfnRule(this, \"${1:id}\", {",
            "  metricName: \"${2:string}\", // Required",
            "  name: \"${3:string}\", // Required",
            "  predicates: [],",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnRule"
        ],
        "prefix": "l1-wafregional-rule",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnSizeConstraintSet": {
        "body": [
            "new wafregional.CfnSizeConstraintSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  sizeConstraints: [],",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnSizeConstraintSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnSizeConstraintSet"
        ],
        "prefix": "l1-wafregional-sizeconstraintset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnSqlInjectionMatchSet": {
        "body": [
            "new wafregional.CfnSqlInjectionMatchSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  sqlInjectionMatchTuples: [],",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnSqlInjectionMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnSqlInjectionMatchSet"
        ],
        "prefix": "l1-wafregional-sqlinjectionmatchset",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnWebACL": {
        "body": [
            "new wafregional.CfnWebACL(this, \"${1:id}\", {",
            "  defaultAction: {",
            "    type: \"${2:string}\",",
            "  },",
            "  metricName: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  rules: [],",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnWebACL",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnWebACL"
        ],
        "prefix": "l1-wafregional-webacl",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnWebACLAssociation": {
        "body": [
            "new wafregional.CfnWebACLAssociation(this, \"${1:id}\", {",
            "  resourceArn: \"${2:string}\", // Required",
            "  webACLId: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnWebACLAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnWebACLAssociation"
        ],
        "prefix": "l1-wafregional-webaclassociation",
        "scope": "javascript,typescript"
    },
    "wafregional.CfnXssMatchSet": {
        "body": [
            "new wafregional.CfnXssMatchSet(this, \"${1:id}\", {",
            "  name: \"${2:string}\", // Required",
            "  xssMatchTuples: [],",
            "})"
        ],
        "description": [
            "Construct: wafregional.CfnXssMatchSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafregional.CfnXssMatchSet"
        ],
        "prefix": "l1-wafregional-xssmatchset",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnIPSet": {
        "body": [
            "new wafv2.CfnIPSet(this, \"${1:id}\", {",
            "  addresses: [], // Required",
            "  description: \"${3:string}\",",
            "  iPAddressVersion: \"${4:string}\", // Required",
            "  name: \"${5:string}\",",
            "  scope: \"${6:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnIPSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnIPSet",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-wafv2-ipset",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnLoggingConfiguration": {
        "body": [
            "new wafv2.CfnLoggingConfiguration(this, \"${1:id}\", {",
            "  logDestinationConfigs: [], // Required",
            "  loggingFilter: ${3:JSON},",
            "  redactedFields: [],",
            "  resourceArn: \"${5:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnLoggingConfiguration",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnLoggingConfiguration",
            "Attributes: ",
            "  attrManagedByFirewallManager"
        ],
        "prefix": "l1-wafv2-loggingconfiguration",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnRegexPatternSet": {
        "body": [
            "new wafv2.CfnRegexPatternSet(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\",",
            "  regularExpressionList: [], // Required",
            "  scope: \"${5:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnRegexPatternSet",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnRegexPatternSet",
            "Attributes: ",
            "  attrArn",
            "  attrId"
        ],
        "prefix": "l1-wafv2-regexpatternset",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnRuleGroup": {
        "body": [
            "new wafv2.CfnRuleGroup(this, \"${1:id}\", {",
            "  capacity: ${2:Number}, // Required",
            "  customResponseBodies: {",
            "  },",
            "  description: \"${4:string}\",",
            "  name: \"${5:string}\",",
            "  rules: [],",
            "  scope: \"${7:string}\", // Required",
            "  tags: [],",
            "  visibilityConfig: {",
            "    cloudWatchMetricsEnabled: ${9|false,true|},",
            "    metricName: \"${10:string}\",",
            "    sampledRequestsEnabled: ${11|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnRuleGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnRuleGroup",
            "Attributes: ",
            "  attrArn",
            "  attrId",
            "  attrLabelNamespace",
            "  attrAvailableLabels",
            "  attrConsumedLabels"
        ],
        "prefix": "l1-wafv2-rulegroup",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnWebACL": {
        "body": [
            "new wafv2.CfnWebACL(this, \"${1:id}\", {",
            "  captchaConfig: {",
            "  },",
            "  customResponseBodies: {",
            "  },",
            "  defaultAction: {",
            "  },",
            "  description: \"${5:string}\",",
            "  name: \"${6:string}\",",
            "  rules: [],",
            "  scope: \"${8:string}\", // Required",
            "  tags: [],",
            "  visibilityConfig: {",
            "    cloudWatchMetricsEnabled: ${10|false,true|},",
            "    metricName: \"${11:string}\",",
            "    sampledRequestsEnabled: ${12|false,true|},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnWebACL",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnWebACL",
            "Attributes: ",
            "  attrArn",
            "  attrCapacity",
            "  attrId",
            "  attrLabelNamespace"
        ],
        "prefix": "l1-wafv2-webacl",
        "scope": "javascript,typescript"
    },
    "wafv2.CfnWebACLAssociation": {
        "body": [
            "new wafv2.CfnWebACLAssociation(this, \"${1:id}\", {",
            "  resourceArn: \"${2:string}\", // Required",
            "  webACLArn: \"${3:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wafv2.CfnWebACLAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wafv2.CfnWebACLAssociation"
        ],
        "prefix": "l1-wafv2-webaclassociation",
        "scope": "javascript,typescript"
    },
    "wisdom.CfnAssistant": {
        "body": [
            "new wisdom.CfnAssistant(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  name: \"${3:string}\", // Required",
            "  serverSideEncryptionConfiguration: {",
            "    kmsKeyId: \"${4:string}\",",
            "  },",
            "  tags: [],",
            "  type: \"${6:string}\", // Required",
            "})"
        ],
        "description": [
            "Construct: wisdom.CfnAssistant",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wisdom.CfnAssistant",
            "Attributes: ",
            "  attrAssistantArn",
            "  attrAssistantId"
        ],
        "prefix": "l1-wisdom-assistant",
        "scope": "javascript,typescript"
    },
    "wisdom.CfnAssistantAssociation": {
        "body": [
            "new wisdom.CfnAssistantAssociation(this, \"${1:id}\", {",
            "  assistantId: \"${2:string}\", // Required",
            "  association: {",
            "    knowledgeBaseId: \"${3:string}\",",
            "  },",
            "  associationType: \"${4:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: wisdom.CfnAssistantAssociation",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wisdom.CfnAssistantAssociation",
            "Attributes: ",
            "  attrAssistantAssociationArn",
            "  attrAssistantArn",
            "  attrAssistantAssociationId"
        ],
        "prefix": "l1-wisdom-assistantassociation",
        "scope": "javascript,typescript"
    },
    "wisdom.CfnKnowledgeBase": {
        "body": [
            "new wisdom.CfnKnowledgeBase(this, \"${1:id}\", {",
            "  description: \"${2:string}\",",
            "  knowledgeBaseType: \"${3:string}\", // Required",
            "  name: \"${4:string}\", // Required",
            "  renderingConfiguration: {",
            "    templateUri: \"${5:string}\",",
            "  },",
            "  serverSideEncryptionConfiguration: {",
            "    kmsKeyId: \"${6:string}\",",
            "  },",
            "  sourceConfiguration: {",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: wisdom.CfnKnowledgeBase",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-wisdom.CfnKnowledgeBase",
            "Attributes: ",
            "  attrKnowledgeBaseArn",
            "  attrKnowledgeBaseId"
        ],
        "prefix": "l1-wisdom-knowledgebase",
        "scope": "javascript,typescript"
    },
    "workspaces.CfnConnectionAlias": {
        "body": [
            "new workspaces.CfnConnectionAlias(this, \"${1:id}\", {",
            "  connectionString: \"${2:string}\", // Required",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: workspaces.CfnConnectionAlias",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-workspaces.CfnConnectionAlias",
            "Attributes: ",
            "  attrAssociations",
            "  attrAliasId",
            "  attrConnectionAliasState"
        ],
        "prefix": "l1-workspaces-connectionalias",
        "scope": "javascript,typescript"
    },
    "workspaces.CfnWorkspace": {
        "body": [
            "new workspaces.CfnWorkspace(this, \"${1:id}\", {",
            "  bundleId: \"${2:string}\", // Required",
            "  directoryId: \"${3:string}\", // Required",
            "  rootVolumeEncryptionEnabled: ${4|false,true|},",
            "  tags: [],",
            "  userName: \"${6:string}\", // Required",
            "  userVolumeEncryptionEnabled: ${7|false,true|},",
            "  volumeEncryptionKey: \"${8:string}\",",
            "  workspaceProperties: {",
            "    computeTypeName: \"${9:string}\",",
            "    rootVolumeSizeGib: ${10:Number},",
            "    runningMode: \"${11:string}\",",
            "    runningModeAutoStopTimeoutInMinutes: ${12:Number},",
            "    userVolumeSizeGib: ${13:Number},",
            "  },",
            "})"
        ],
        "description": [
            "Construct: workspaces.CfnWorkspace",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-workspaces.CfnWorkspace"
        ],
        "prefix": "l1-workspaces-workspace",
        "scope": "javascript,typescript"
    },
    "xray.CfnGroup": {
        "body": [
            "new xray.CfnGroup(this, \"${1:id}\", {",
            "  filterExpression: \"${2:string}\",",
            "  groupName: \"${3:string}\",",
            "  insightsConfiguration: {",
            "    insightsEnabled: ${4|false,true|},",
            "    notificationsEnabled: ${5|false,true|},",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: xray.CfnGroup",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-xray.CfnGroup",
            "Attributes: ",
            "  attrGroupARN"
        ],
        "prefix": "l1-xray-group",
        "scope": "javascript,typescript"
    },
    "xray.CfnSamplingRule": {
        "body": [
            "new xray.CfnSamplingRule(this, \"${1:id}\", {",
            "  ruleName: \"${2:string}\",",
            "  samplingRule: {",
            "    fixedRate: ${4:Number},",
            "    hTTPMethod: \"${5:string}\",",
            "    host: \"${6:string}\",",
            "    priority: ${7:Number},",
            "    reservoirSize: ${8:Number},",
            "    resourceARN: \"${9:string}\",",
            "    ruleARN: \"${10:string}\",",
            "    ruleName: \"${11:string}\",",
            "    serviceName: \"${12:string}\",",
            "    serviceType: \"${13:string}\",",
            "    uRLPath: \"${14:string}\",",
            "    version: ${15:Number},",
            "  },",
            "  samplingRuleRecord: {",
            "    createdAt: \"${4:string}\",",
            "    modifiedAt: \"${5:string}\",",
            "  },",
            "  samplingRuleUpdate: {",
            "    fixedRate: ${6:Number},",
            "    hTTPMethod: \"${7:string}\",",
            "    host: \"${8:string}\",",
            "    priority: ${9:Number},",
            "    reservoirSize: ${10:Number},",
            "    resourceARN: \"${11:string}\",",
            "    ruleARN: \"${12:string}\",",
            "    ruleName: \"${13:string}\",",
            "    serviceName: \"${14:string}\",",
            "    serviceType: \"${15:string}\",",
            "    uRLPath: \"${16:string}\",",
            "  },",
            "  tags: [],",
            "})"
        ],
        "description": [
            "Construct: xray.CfnSamplingRule",
            "Documentation: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-xray.CfnSamplingRule",
            "Attributes: ",
            "  attrRuleARN"
        ],
        "prefix": "l1-xray-samplingrule",
        "scope": "javascript,typescript"
    }
}